cset: moving following pidspec: 10935
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.542179946 seconds)
loading group "shootout"... done (took 1.182479263 seconds)
loading group "string"... done (took 0.397896538 seconds)
loading group "linalg"... done (took 7.508231796 seconds)
loading group "parallel"... done (took 0.143105235 seconds)
loading group "find"... done (took 1.253230965 seconds)
loading group "tuple"... done (took 1.81245482 seconds)
loading group "union"... done (took 11.860685034 seconds)
loading group "dates"... done (took 1.239498179 seconds)
loading group "micro"... done (took 0.19019059 seconds)
loading group "simd"... done (took 4.101694846 seconds)
loading group "io"... done (took 0.980146407 seconds)
loading group "random"... done (took 8.164283287 seconds)
loading group "problem"... done (took 1.514863502 seconds)
loading group "array"... done (took 18.296973032 seconds)
loading group "misc"... done (took 1.429920579 seconds)
loading group "scalar"... done (took 37.288684645 seconds)
loading group "sort"... done (took 2.849879487 seconds)
loading group "sparse"... done (took 11.181268331 seconds)
loading group "collection"... done (took 16.193946668 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479643824 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.11994115 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124177711 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.112906704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.137658589 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115806222 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119716149 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081954347 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.911307289 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138009881 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109074749 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419518987 seconds)
done (took 5.199985035 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.160871898 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083785211 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074826295 seconds)
  done (took 1.286351256 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060575225 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128539328 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061556944 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062430478 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.061909521 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061418749 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061569299 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061218057 seconds)
  done (took 1.626807024 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068278978 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063606044 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06105494 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.063007394 seconds)
  done (took 1.386979346 seconds)
done (took 5.667467339 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.22846338 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.096659643 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.278433522 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.385554406 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.443367871 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.08575814 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.069318353 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.0648051 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.121794255 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347580897 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098724026 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.175502498 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085501083 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168735002 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.962355921 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113925296 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080289762 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117200365 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087566631 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126238899 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.398907382 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072637668 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069133864 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065171931 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.062562697 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.637022609 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655700064 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.122520073 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078261575 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097293687 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111962779 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.635333743 seconds)
  done (took 10.304869948 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089018185 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086919619 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06459719 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119739347 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.087990083 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064880238 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069687752 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06292549 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085577663 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118701288 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.084747111 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.094661372 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.060732706 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064183294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071093765 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191987454 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.074330834 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075564533 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063129171 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074683861 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101433075 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072890772 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073987107 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073745121 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.123088121 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.163471979 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091404375 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093071929 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061673987 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075083545 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.10998886 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.120911523 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061276209 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060946736 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115406662 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.089632721 seconds)
  done (took 4.370113818 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.915181126 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085578347 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097220895 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.596528083 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.060821346 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144903062 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232800958 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067328719 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.348075757 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089311317 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.138851994 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.10641275 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.137657243 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.108296682 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064341939 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.194743051 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.108988665 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342973846 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.061972023 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.061272555 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.0601796 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063209304 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062965669 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.058525252 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064692716 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.086589893 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081329148 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.185811191 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.912432069 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.239122377 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062491877 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.154161966 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082663439 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352001024 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.064523038 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077851792 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.387951102 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117196051 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060641886 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158712581 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110229669 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064408416 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.110433628 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073118585 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06466259 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.063807213 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.063164293 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069188193 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072893637 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096117239 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059705132 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.061978742 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060245511 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.155805649 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.059580085 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061823782 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062778611 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.144870564 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.059492176 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.134561062 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059866818 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06339409 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092976953 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063067904 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.084355803 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.096328582 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.348206478 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.031881388 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062689268 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.213015328 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.071252306 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061426423 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065863683 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061605712 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.062882545 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062200474 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068752297 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064927069 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.062865727 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103372539 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061445994 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064602498 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061794202 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079397181 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066692347 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095054544 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060155823 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.454437984 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092313956 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061528455 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072160568 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099935264 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06204446 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067569942 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062628426 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062190164 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.060790937 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.061518935 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.175419221 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088636111 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064773741 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.107997508 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.030588585 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063771664 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061668155 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066729073 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06454795 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064268618 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061571393 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064495177 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.062854311 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060195185 seconds)
    (112/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105888731 seconds)
    (113/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06209102 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.059148266 seconds)
  done (took 21.057670404 seconds)
done (took 37.777345976 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243001473 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076560683 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076825513 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076759505 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077093011 seconds)
  done (took 1.774715948 seconds)
done (took 2.990915369 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101685064 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059056682 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.09431723 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.093483574 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061832432 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059049221 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.092258727 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.059101642 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.091794333 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093641703 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.095916115 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094851385 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.05903988 seconds)
  done (took 2.27837513 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064683526 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076132901 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077574601 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057824208 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067298719 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076042113 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057269005 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075278906 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081766279 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076493532 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076129646 seconds)
  done (took 1.996220474 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064757806 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07680359 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078347355 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057572369 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071317687 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.0759977 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057355233 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075731651 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079351544 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076000182 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.075921495 seconds)
  done (took 1.99100945 seconds)
done (took 7.470498569 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063574888 seconds)
  done (took 1.2510095 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.516854082 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.599654385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064943601 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08411387 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.177864997 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.094446735 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.222619249 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069257775 seconds)
  done (took 8.190582863 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093126487 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.064071791 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.064387717 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.063656551 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.064237455 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.064715587 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.064722672 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06325077 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.064146814 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.064735213 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.064722326 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.064746652 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.065566236 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063539513 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.063439544 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.063347889 seconds)
  done (took 2.346500849 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091433969 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090142839 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068363154 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.06914833 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066736659 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.066520671 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.068995657 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.067890602 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.065198491 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067262908 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.06950122 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068070291 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.067500124 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059464693 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0684313 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07050401 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065509646 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069130102 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069571486 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070209994 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069402586 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059296034 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067365957 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068612209 seconds)
  done (took 2.973058945 seconds)
done (took 15.964462767 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109354927 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07108632 seconds)
  done (took 1.377841497 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066434807 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066663891 seconds)
  done (took 1.344637942 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073133257 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057267549 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079227365 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068616807 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057964214 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057365515 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076728723 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.057577327 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.05760454 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057495407 seconds)
  done (took 1.85515512 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060153793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.06713492 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064452569 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066317943 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064275494 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0586678 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0619171 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059234299 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066777796 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.057990148 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063027124 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.077371646 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062038217 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.079052611 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.061883747 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063042386 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065107124 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062381358 seconds)
  done (took 2.377340205 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057391861 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058437401 seconds)
  done (took 1.338993123 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062273623 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059358197 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061807722 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061455111 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058151003 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057920902 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058482033 seconds)
  done (took 1.635297124 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400063861 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113801054 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329053569 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.064624218 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074052865 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.240877791 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.058921882 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063779475 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.064140168 seconds)
  done (took 2.666662825 seconds)
done (took 13.820946539 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075300793 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.078939738 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084851153 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410093899 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087308621 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062220435 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.107866122 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.171792442 seconds)
done (took 2.317512992 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208070182 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.384248007 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.940900496 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.061673813 seconds)
  done (took 3.610868677 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.316691325 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079253435 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072673446 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062401598 seconds)
  done (took 1.767925328 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06027411 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067057124 seconds)
  done (took 1.355099492 seconds)
done (took 8.178799452 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059961776 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084721002 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.058861223 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.059378026 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.05951129 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.059466656 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059334427 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.059404862 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059507375 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.058903824 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059206577 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.058950744 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.059008793 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058999923 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059563209 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059912685 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059105353 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059440821 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059210785 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.059200306 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059454742 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.058908563 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059502078 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059685767 seconds)
  done (took 2.702616017 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075976312 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061695326 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063167751 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063037526 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063174717 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063084019 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063337981 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061591213 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063042143 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061033576 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063006563 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063536744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061161409 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063567687 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061479386 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.0633157 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063173183 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06151608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061066224 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063555785 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.062686418 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06173315 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063187177 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062504549 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063028206 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063595271 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061232206 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061496186 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06302976 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063341474 seconds)
  done (took 3.130012637 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060595977 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056433691 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056874513 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.064988812 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056471672 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.056859234 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057485129 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055854632 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056550103 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057777546 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.056738237 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.055822417 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057123168 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.055958701 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.05623789 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057083574 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.059920879 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.073336292 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056093499 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056136874 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.059668354 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056550603 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056094904 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.055951914 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.056734086 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.055785732 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.055626194 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.056607557 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.055960205 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.056643376 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056130372 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.059803048 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.060287308 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.056271818 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.064831728 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.059992238 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.056338043 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.059679922 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057439827 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056115771 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.055705925 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.055814644 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056147346 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05614466 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.064730846 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056484678 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057656898 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.056973665 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056421916 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.055792414 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05602356 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058671136 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061045366 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.05790913 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056333723 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057164096 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.055912625 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.056723232 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056364221 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055954885 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055782736 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.058903621 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.05797708 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057138438 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.073422698 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.057661017 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064813058 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056495506 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.05986177 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.058942446 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056699018 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072017659 seconds)
  done (took 5.430297886 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083187575 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083920301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061270473 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060612017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057407948 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056793419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064233585 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057027438 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060778573 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075446005 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056917461 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0608566 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060759245 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060673203 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056727552 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060951626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064798739 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056959665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057117502 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060448115 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056971531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064329003 seconds)
  done (took 2.63285948 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135061657 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063151327 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098897277 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073057741 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065290032 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072911254 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061954419 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062384546 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062243224 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062957329 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062655558 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06240226 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064968357 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06287528 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062571928 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062874391 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062526608 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062854116 seconds)
  done (took 2.507377608 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072929454 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062417252 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082748262 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061804077 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061727796 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061410096 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066371325 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066771899 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061542565 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061952874 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066551181 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061814434 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061762665 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061907634 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061270095 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0619143 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06161515 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061794525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066405174 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065836558 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065801326 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066454023 seconds)
  done (took 2.669950595 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070821475 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060583032 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074135568 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062104116 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056947381 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056697449 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.061756918 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061151405 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062215843 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.060205767 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061033168 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057018255 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062747865 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061180141 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.062931343 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061089453 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.060484426 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06110006 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060603073 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057084365 seconds)
  done (took 2.4795801 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082370323 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059982854 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059620064 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077583565 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.05951789 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059541485 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077650666 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059557605 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060070188 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079774405 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059335727 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059362749 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077406329 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077807311 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059568906 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077510206 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077175744 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077736347 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059631374 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06000703 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080202573 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059517066 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077490262 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060248658 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060386129 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.059578655 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059533891 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077773242 seconds)
  done (took 3.145640187 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069768675 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059609338 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.05995863 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059674838 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059271794 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059218098 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.05944991 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.05965943 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05979297 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059695958 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059457214 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059123744 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059262571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.058892138 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.058951351 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059308186 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059337417 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.05952383 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059425671 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059701499 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059136977 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059533469 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059519615 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.059422015 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059444253 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.059475193 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059404241 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059512629 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059313018 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.059634976 seconds)
  done (took 3.047698539 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069612276 seconds)
    (2/2) benchmarking "in"...
    done (took 0.06771528 seconds)
  done (took 1.392008192 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058617953 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07220061 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056268228 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066698925 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064922207 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059771784 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066057478 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065206428 seconds)
  done (took 1.760553477 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.063997581 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085160454 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058876863 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059189719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062052564 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112782221 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072052193 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.067521525 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072243426 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.059374354 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.058679997 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069676997 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.057783691 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068896347 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059676558 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065389809 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063811529 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068471999 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068873897 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.056678781 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067676499 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059052384 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05698668 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059168637 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058328649 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063319786 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.071598946 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.067993573 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064809157 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056038792 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075192728 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.056991814 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058125483 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064819657 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061774839 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057065588 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09023237 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057356373 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.062924806 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.056599432 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067868941 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07492291 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069006039 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.072868152 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059308351 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059599522 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057053308 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059173177 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.059181896 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.064501168 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056836043 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062728766 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056063735 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058631906 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066262923 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057380987 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063389593 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064692581 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068019361 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06554228 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064112186 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.06998584 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064396833 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066117421 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.057777237 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073453822 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.05880535 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067408961 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069181958 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058158803 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069558809 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056112135 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055472822 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.056400975 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085927649 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058394552 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057629407 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056676612 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056981102 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058511976 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.064862478 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06285443 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062542261 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061095766 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070392818 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064408876 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056612036 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.064504185 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.073294444 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0590901 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056964574 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071017638 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.058754731 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056359151 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072414778 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06474268 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058376564 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057335281 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.05904046 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068915947 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057775169 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055225849 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063283311 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058332353 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059794707 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.061342057 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06249844 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056267936 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064936975 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.061928396 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.057913627 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055031765 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.05995578 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.057566438 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054962035 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063902726 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055884184 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068847959 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061001749 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.06790692 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.06787212 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064603468 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069269322 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055585892 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054518675 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071092308 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.195136717 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060331303 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074458483 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057582426 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066834772 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057115813 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059318621 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.0658607 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056727419 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059667513 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057312721 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063175235 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059065898 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059638997 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.060610444 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.063853723 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068007404 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058060155 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064562815 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.057988356 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070795433 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065971477 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.060586022 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061840087 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.057777034 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068561196 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.062855523 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065951823 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.056938118 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058321714 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057978352 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066597224 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065464844 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059281556 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066301163 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.060607941 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.057959674 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.057740114 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.058655789 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.059574261 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061369002 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058354213 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063062159 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064822345 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.070131277 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068867752 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064776618 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056101552 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.05672328 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059207588 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.05714895 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060409102 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064823815 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069873088 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067399119 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074768524 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057542838 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06494241 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.058730289 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071820294 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068076859 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.057988507 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062675129 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.055720974 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059112813 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064807025 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067251753 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069633898 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.0696449 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060329774 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060635679 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.056581627 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069509032 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057225626 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063536036 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065187886 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06212675 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057004649 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059162853 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.064794984 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060421295 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057137807 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.069948745 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.063791705 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056705324 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.068547745 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.056987597 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066102502 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056553708 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059663189 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.060557333 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059016761 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064850511 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070140761 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055782089 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057478759 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070702434 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.05910927 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059041955 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063517707 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.069758168 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060318751 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063082762 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06604275 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064809202 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060035974 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064554407 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057400179 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064611135 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060079624 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066678974 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056172797 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072271615 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055201681 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.068934016 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057001073 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066151819 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057067258 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06421459 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057056713 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.070916109 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058329994 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056876507 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066064544 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054968838 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.063380631 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055796318 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.059567114 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061113891 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.06374631 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057581199 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.198214639 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060183612 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065118746 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061787146 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065376634 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065553838 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061329881 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057390666 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064111236 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067550432 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065137603 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059009446 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059053267 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058180556 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065598634 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.058803146 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.058716834 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063948144 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06087984 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062014427 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059344514 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059695762 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059076005 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064278071 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065893137 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073255471 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064429693 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063336636 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0649928 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057208286 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071336359 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057067433 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.062884872 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056018427 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063958914 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065539387 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058459536 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074390905 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058913098 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06449209 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068793965 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064319241 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06037155 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073251435 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06098362 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064191416 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06376714 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061414037 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062277403 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059234046 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063762235 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065073955 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066519526 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.057856464 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.062996994 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064014153 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059170189 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066198009 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058924188 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.063597571 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059525158 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056456952 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060839337 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067728291 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061201709 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06103269 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057421775 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056015904 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057286219 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06548617 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060422001 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.063878179 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069991742 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056212012 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058255491 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057055833 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062121344 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073006351 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06600192 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063151175 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.060558261 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056169517 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059139452 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059490613 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057849592 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061237004 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056162152 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056651871 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066055168 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058828093 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060255815 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057186541 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058671938 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06482478 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062782956 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057476749 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062404744 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056532096 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060807678 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056211224 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058995254 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060501393 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056420954 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059679156 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.065820315 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071447294 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062124203 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064071613 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058012798 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063654533 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070070983 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065380848 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057838704 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064647186 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055993158 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073393716 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064729502 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063470691 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064819895 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057490743 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071235438 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059759381 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.064086522 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068844766 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056755504 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.063440172 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055205283 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068897878 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.059018344 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055414578 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.062507774 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061549002 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.200023981 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068681849 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059282269 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065071955 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064486933 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060806234 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059550239 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059770468 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064997957 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071831713 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058432509 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06267504 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06375834 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064212632 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.060745574 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068209583 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064151181 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05911169 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059973151 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.059703852 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058755807 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.06827903 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058385447 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06089761 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060961914 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057431714 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063153886 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071412341 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06536704 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065771698 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.056886804 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056797515 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.072980163 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.059857635 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062010373 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.063777681 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06540153 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068400621 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065231381 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07325106 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058198705 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062196702 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068203115 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058278064 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.05734337 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.059882882 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059528372 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065761559 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066219252 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.062663529 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059339349 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.062602036 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06866362 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058689187 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.060482988 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062783596 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.057901497 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.065834431 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.063631621 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063934376 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.058679667 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.056660724 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.059301835 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064325598 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063053896 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.064728322 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058571707 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065164665 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069636491 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063620421 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061182602 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057143908 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060896455 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064438496 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062571253 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05712356 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.060916693 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.059617911 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065167047 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06494161 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060563039 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.056951607 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072454115 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064326478 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065353456 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059052062 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059385982 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05748602 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.056881039 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066967589 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.056699646 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059266375 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.060654465 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059081232 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072335995 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.063647221 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070956534 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057983967 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060577926 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057067577 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065218372 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06051797 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057512424 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066021054 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056480841 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070309644 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067818079 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065646251 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056773992 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060691828 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.063575201 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.06918398 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064652759 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.063865646 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.060482012 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064829843 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.05895932 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06626929 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.05641626 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055800791 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065233057 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06270385 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.066791291 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.055777081 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.064356738 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.05782438 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062123292 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0626086 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057584829 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057713642 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057425828 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.201014956 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06168252 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066244202 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061895113 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072574211 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.05944263 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067353624 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065317416 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067136726 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069457274 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06932602 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064536889 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058285069 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063227375 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.064153642 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.058957343 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060674554 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062259734 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077325061 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060056754 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060050409 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070991984 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.064799596 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057873823 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065286475 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061095988 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.066697262 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059009965 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.06615813 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.061940461 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058254739 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061098672 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061359336 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057103025 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057200534 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057805188 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.065849535 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06101051 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057530234 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074212278 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059409357 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064897085 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.066790641 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06277378 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059285378 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056460228 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058782005 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067526979 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070236441 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060151093 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06400683 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059070601 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06485999 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056189581 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064199048 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.063988027 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064276981 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.056873055 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057559157 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069264028 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070106164 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.060687375 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065129552 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064631519 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.058965731 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077055192 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064396145 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058488179 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.06717292 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060551487 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056616239 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056264211 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059081413 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067837507 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057097571 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062084562 seconds)
  done (took 39.126105556 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095492517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058521568 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.056993074 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057033157 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069019275 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058284512 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057099234 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058060981 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058094571 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060278068 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057064107 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056948098 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069215611 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071505079 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068102559 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061805912 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057000726 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.05813455 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057454911 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058325474 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068150012 seconds)
  done (took 2.674648631 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064986512 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072763903 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069342681 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074126553 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065636293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062658373 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069141954 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062013184 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069790984 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067201975 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07019536 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06196942 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066866257 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067023153 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067079051 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062399347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069637461 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065456801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061901753 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069015957 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062206642 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068825234 seconds)
  done (took 2.808502711 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058938313 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057869766 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.063859268 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056621505 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056466312 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060760947 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056583266 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.059736427 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06000032 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.059906194 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064171534 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057772912 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056349791 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061106294 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056390585 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.057824038 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.099583806 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058465267 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.057565348 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056883588 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062832652 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06440949 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056723629 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057073779 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060071274 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060198132 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056386667 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.05969503 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057557565 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060284651 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.057703216 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056497544 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06429705 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063738662 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.059625652 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060199539 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.058319328 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.057611053 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057224453 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.056668093 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.063522785 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.058156929 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.056847034 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.057914388 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064366938 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056535507 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.056396679 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.063915065 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056359894 seconds)
  done (took 4.279430442 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070059867 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105641111 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06262663 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085739895 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070897579 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06425062 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062249154 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086466411 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.058138652 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059105844 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07219871 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07215601 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060258844 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061753349 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064204443 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060207426 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061238301 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059400607 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063513587 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059541375 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063314127 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064257612 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07074498 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071886858 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06140546 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059218049 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059652303 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.061709401 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070750558 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064250707 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062068946 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063009798 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071207925 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064757075 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059740802 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060089435 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072263612 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061075258 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060638631 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058784353 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.059659006 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.061852192 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064169548 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072347546 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060497779 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064576055 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06033083 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058040478 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07127861 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060227864 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064722425 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072342043 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061870874 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06054442 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062000999 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071169004 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060329167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.05863884 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060595657 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.070777767 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058163556 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061375543 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072060835 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059572299 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064300752 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072028972 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064910748 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061435095 seconds)
  done (took 5.906700003 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067745181 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087377322 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069126542 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06915949 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06834844 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068193579 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06786419 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067791268 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067721534 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06827565 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067753787 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106296091 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06332045 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073009413 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067637171 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067820386 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.06780916 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067910566 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067467433 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067832583 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067739608 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068356962 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067663101 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068270885 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070751983 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063703198 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067540934 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067848229 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068774972 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067385169 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070819312 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067654051 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067661 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068486056 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070730699 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067754792 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057850959 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067543465 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068007636 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067799901 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063320212 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068460871 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067768909 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063838203 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06812989 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067880417 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0686599 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071200074 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076370484 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068872664 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068204924 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068371245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067567152 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068229477 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068669034 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076668812 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06860491 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068814181 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067875167 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068519378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068413136 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076283421 seconds)
  done (took 5.666800701 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073302636 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065553902 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07708762 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059880651 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057006704 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067023965 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056898647 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056901419 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065292519 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065203574 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067224612 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066839095 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069160246 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067284694 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066626442 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068771219 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066569052 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066679725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065164205 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066418109 seconds)
  done (took 2.68467836 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.068996922 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074661062 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063246391 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066673146 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062625969 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066654003 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061768656 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06246223 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063161212 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062807914 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068279809 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068032493 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06310224 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066676181 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068063311 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066487207 seconds)
  done (took 2.412543683 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063772133 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065626812 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065549522 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059594331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062312946 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057412032 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058321111 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056904701 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.057276232 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.070827791 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058400105 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.0696174 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058145715 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057470289 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057751376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063689368 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.05740384 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058263933 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058349963 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063613845 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.064532113 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059252334 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06181146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058007031 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062854565 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065068823 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.059758999 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061314129 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058221726 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.058584452 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063532771 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064522564 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.057941962 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.058779577 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057338897 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058388615 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058300743 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.058605359 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.063521665 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058186699 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056754832 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062646083 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058284681 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059366755 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057203787 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.058874302 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05801782 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.063571408 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.058654392 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062941624 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058494001 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060759109 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.058783809 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065580035 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.060917985 seconds)
  done (took 4.688929893 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071584834 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06228742 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056692667 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057400467 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062498875 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062438323 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06225333 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062104463 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062623073 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056742885 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062262174 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.061912004 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06228049 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061981207 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062562888 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061813992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056764708 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062411601 seconds)
  done (took 2.483131126 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068270322 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062352464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066395232 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061984227 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061451021 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061096039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057365148 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057564669 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057549433 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061398386 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061562606 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060872955 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057051226 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060918558 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061213503 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061324287 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061118302 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05773046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06122272 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057516475 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061093112 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057185437 seconds)
  done (took 2.701529347 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.0833818 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079372491 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.116941385 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074260029 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081696169 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.066752319 seconds)
  done (took 1.869453596 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085759588 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098806686 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061852964 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06154569 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072064179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065128304 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065525822 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065589282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071846234 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0700917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065424156 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07245764 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071958654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067431835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072608466 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075600509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065627702 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065330915 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061659729 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07495546 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065493434 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071954306 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065358107 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064862905 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065317905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08509121 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075139655 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070065508 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067530581 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072278824 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074970829 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065241225 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07206206 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070044498 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061578813 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072235508 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0656646 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075168755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072324634 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067588321 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062230901 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07303534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072387444 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067393252 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075598793 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065800408 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067679222 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065893575 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065687597 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078091914 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072491705 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067440941 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072425198 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075514148 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075642002 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078026821 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070196524 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067375714 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07220299 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070457119 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06755628 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072279157 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067452152 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070637083 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075306934 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06718385 seconds)
  done (took 6.019995326 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093452 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06301118 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065920677 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070815731 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067786941 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065680666 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065747908 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06557461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065564339 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062390757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099281307 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065814855 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067665828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06820387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066016999 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065749174 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065617346 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067711067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062286589 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077711402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065468013 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067740893 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067524422 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067819729 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069970769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075127531 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065337447 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0658857 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065183597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065554638 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067701641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065619585 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067796067 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06203819 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067470951 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065437766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065531282 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06776753 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065493519 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072440441 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067530426 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075367189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065793602 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065480299 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070084486 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065255442 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065414629 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062283674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065449319 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062150301 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070340435 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070207312 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070352755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06786908 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065750529 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065553882 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065686827 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065676428 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065569407 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075436964 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067341612 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06537645 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077707201 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065426923 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065584285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067707241 seconds)
  done (took 5.885709547 seconds)
done (took 121.335195599 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204194236 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181045626 seconds)
  done (took 1.74444943 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068651088 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091553854 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.069780458 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128763796 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066111556 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099654909 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099196584 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.069872085 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065440392 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065497946 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065639622 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068510709 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131514269 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065819561 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065302023 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068399495 seconds)
  done (took 2.667641082 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099127777 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.175172687 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102637501 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063975792 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09831781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071097801 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063557866 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073932667 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067699049 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066884192 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071265558 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069341242 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066816733 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069347922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067331708 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070931156 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06622415 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.070849463 seconds)
  done (took 2.815759313 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08855985 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08077287 seconds)
  done (took 1.554186798 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148720593 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099939673 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138545498 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.312903314 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.130293967 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.270449739 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125445761 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124105478 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106649886 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120169543 seconds)
  done (took 2.956119874 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096119416 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159634393 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291739292 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.111997489 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.06980599 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.081706494 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114666543 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07608474 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074669828 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074605913 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075256587 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074161804 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091383147 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070707483 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071599204 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071187121 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.094820953 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070001187 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070201548 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07050469 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094177446 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064093423 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070854843 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070107 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072348057 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072195683 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065630839 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.063851163 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.070496943 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070218538 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073436427 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.078466848 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072410935 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.097672546 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068277942 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098769846 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069453261 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068669374 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070379251 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068617578 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072301321 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07190161 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072482413 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071383536 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065177898 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069352057 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065516214 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.063960619 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074293834 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065321039 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074009652 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072971442 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097758234 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065215503 seconds)
  done (took 5.799629706 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102608793 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101160605 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066849756 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108101433 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098549085 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064984093 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.09905168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093879315 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101969931 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064401918 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063982603 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063908227 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072695474 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075010679 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110678351 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102476888 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066501461 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064871664 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102112449 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101910909 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063276685 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095370781 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09184161 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101319149 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.062595787 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064830409 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063226417 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06376293 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070220978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07152814 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063195912 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071934003 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076709297 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071377382 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062708089 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063204076 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06283457 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071792945 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07235289 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072214853 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070894946 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06250287 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062957207 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06392581 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064626481 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062320319 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07133164 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072269847 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07081374 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063331034 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063623578 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.062805557 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063586482 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071523622 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070112859 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072563729 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071741024 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063059329 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063286561 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065085563 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072682291 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072297643 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072147629 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064308662 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072952185 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063035031 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07340054 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076932183 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062971828 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063445867 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063262127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063198666 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063664627 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070280943 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070704678 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063823972 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06351087 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062876405 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073113114 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070771891 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0630516 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070265458 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062324253 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063769158 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063838169 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063803911 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070570077 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.072171382 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064194836 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06299826 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063230651 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.062894362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062068496 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.069534172 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071145323 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071753882 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070629002 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063449035 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.070739242 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070630099 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063297262 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.06951849 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062412756 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.062516793 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062557249 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069488341 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.06849762 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.070743455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.061915272 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.061495106 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068857577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.205416006 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064660119 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071759699 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074161415 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072088385 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063435702 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077215151 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064070293 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07368825 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063871006 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073853735 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064419366 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0720009 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06386732 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063313554 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064123741 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.071743825 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064442107 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063842302 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064376506 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064061285 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.071662164 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074924821 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064574534 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071760157 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071880715 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064372461 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071240759 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063515822 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072544988 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064229805 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064085839 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063154106 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074088143 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064119275 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063818401 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063770274 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073072724 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063648113 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073159447 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070115703 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063248799 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074547637 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073489033 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.070547453 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073557938 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064250558 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063390275 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06387079 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063938372 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07040177 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071637364 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064438052 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06340953 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070283662 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073175071 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06303996 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.070918589 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070879059 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071345581 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063870355 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06385512 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074320429 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072964616 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071147094 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070764187 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071766052 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063846718 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070846545 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071493644 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063216211 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076841103 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063619674 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074846148 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071457895 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069971284 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071474841 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072350765 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072955338 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073099662 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075531562 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062891707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063013331 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07095181 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063523659 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063535246 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071179764 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063981513 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063792762 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076048902 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063748076 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073375291 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063079721 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071983492 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062591945 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063634594 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075414869 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063293846 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063564068 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0710046 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063274996 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070155983 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073021848 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070114817 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062327893 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062692841 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.069880457 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.069659746 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.061576912 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.061554424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062380549 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068779942 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068863765 seconds)
  done (took 17.162170589 seconds)
done (took 36.096719307 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20138583 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152044299 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184445501 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110565266 seconds)
  done (took 2.13366559 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093410096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094421545 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074876677 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060139656 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.08004215 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060032991 seconds)
  done (took 1.891952522 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273184329 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193436782 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171904249 seconds)
  done (took 2.060785561 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208637081 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188316835 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445477638 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28100227 seconds)
  done (took 2.643235403 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.127863917 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.07723828 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059991072 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070209799 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.109028795 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.141121029 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086953051 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110494721 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070423167 seconds)
  done (took 2.334881388 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128998355 seconds)
done (took 12.648670801 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096665826 seconds)
    (2/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067368793 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.120191192 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067249564 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.234890222 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063359665 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065224755 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105241001 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071798582 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070828438 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158744168 seconds)
    (12/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070271275 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076031206 seconds)
    (14/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.241361006 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.146136957 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.188348366 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069619344 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144586694 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.389138983 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069455337 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204890452 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.232167834 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067666182 seconds)
    (24/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070094175 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.16165389 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176596746 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072088695 seconds)
    (28/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.136065496 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.123957799 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069721111 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.167811833 seconds)
    (32/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.068715883 seconds)
    (33/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.071316394 seconds)
    (34/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.071732755 seconds)
    (35/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.2337277 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059429578 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.077360074 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210269627 seconds)
    (39/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061458389 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.061227808 seconds)
    (41/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.132501132 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.075606695 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.073840555 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 0.147097285 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074794919 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.081690918 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114250853 seconds)
    (48/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070469289 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060123914 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112465387 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.061725026 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064117627 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087155249 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079452448 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072452191 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068449001 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.059779642 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069105739 seconds)
    (59/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066746437 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.164627588 seconds)
    (61/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118167224 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.081470618 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.067808202 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104440813 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059407042 seconds)
    (66/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.098950373 seconds)
    (67/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067871797 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.061112245 seconds)
    (69/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089303337 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080609828 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087723781 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.079023566 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.211802464 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119429243 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124383488 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.192303379 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.059555867 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.058935824 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070084563 seconds)
    (80/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.162121427 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066069567 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.1301819 seconds)
    (83/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08378687 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.074110124 seconds)
    (85/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.060034813 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066796775 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0601895 seconds)
    (88/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.068766293 seconds)
    (89/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.075700825 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.340233123 seconds)
    (91/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069370089 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11504293 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07310529 seconds)
    (94/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062556969 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163878482 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13469634 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070220778 seconds)
    (98/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.062172697 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084710759 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13977918 seconds)
    (101/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.244126843 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087622288 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.198424468 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061628356 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189454959 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060354594 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153518596 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065221443 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062072903 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067770845 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085678061 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.163397711 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211761771 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.179214149 seconds)
    (115/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135584517 seconds)
    (116/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.202920956 seconds)
    (117/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.061840633 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 0.168795768 seconds)
    (119/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062512104 seconds)
    (120/309) benchmarking ("sort", Float32, false)...
    done (took 0.127781981 seconds)
    (121/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.135409759 seconds)
    (122/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.157104375 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071468757 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.182475409 seconds)
    (125/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069806981 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071735209 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.062959241 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069815506 seconds)
    (129/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061304393 seconds)
    (130/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.19947379 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.083623613 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067001558 seconds)
    (133/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.062077046 seconds)
    (134/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.198309849 seconds)
    (135/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.186421569 seconds)
    (136/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.060519314 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068806434 seconds)
    (138/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065121997 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.060676373 seconds)
    (140/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.130569278 seconds)
    (141/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060147731 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150121017 seconds)
    (143/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.13148593 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070725425 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.061991384 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061327098 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.156180494 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071088233 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.178809943 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071113685 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070925004 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155103371 seconds)
    (153/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.140361885 seconds)
    (154/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.062314033 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.127249356 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068818556 seconds)
    (157/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.061589856 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063237547 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060021038 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073241809 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060229352 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059177214 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.059648115 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072367039 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.059739233 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151785395 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059690533 seconds)
    (168/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.068493469 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.060413982 seconds)
    (170/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.060889756 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148347868 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136738949 seconds)
    (173/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.145738177 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069056846 seconds)
    (175/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.071887288 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.067967475 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.059114226 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.059664505 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062770296 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 0.229602088 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069063361 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.061637427 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.059049995 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109622627 seconds)
    (185/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072047196 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067857119 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.060335769 seconds)
    (188/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.05970655 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.243712617 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111997764 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063034318 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.061820437 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061196692 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061240638 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130618543 seconds)
    (196/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062286351 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134961003 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14248588 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061371555 seconds)
    (200/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.132990087 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.162391368 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135215956 seconds)
    (203/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.064082015 seconds)
    (204/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.159228139 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069927523 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061223323 seconds)
    (207/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.060315485 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121127033 seconds)
    (209/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061051247 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061423424 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068066222 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069782354 seconds)
    (213/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061504064 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.060778922 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061673812 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.060746011 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.0824798 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073353921 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067807209 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.165455123 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060203972 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060270414 seconds)
    (223/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.061509216 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07144163 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071782457 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.125910583 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133717826 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087147543 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061042383 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.060090113 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069251014 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.060937959 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061469958 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067268262 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116941348 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.059593754 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061776608 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068923477 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067272904 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.084841296 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.06750023 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082381315 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.060006349 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.061358397 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.072989206 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 0.126780142 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06101338 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085574732 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061099284 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.131145602 seconds)
    (251/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.060399939 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112972684 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.059714893 seconds)
    (254/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.061936411 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086910835 seconds)
    (256/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.133044665 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06180026 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.15647634 seconds)
    (259/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.06702606 seconds)
    (260/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060764088 seconds)
    (261/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.065705166 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.060981617 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.060106798 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06057856 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060047975 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.061588519 seconds)
    (267/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.075575958 seconds)
    (268/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.065331826 seconds)
    (269/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.060809919 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.066932976 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.060743878 seconds)
    (272/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.061336761 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.059835551 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06129938 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.060375934 seconds)
    (276/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.060851905 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.165220693 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.061372998 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.071863342 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.062833892 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111303408 seconds)
    (282/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.061129394 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.060577365 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059575007 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06073509 seconds)
    (286/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.088018834 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.059919858 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.060236661 seconds)
    (289/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060001207 seconds)
    (290/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.061031044 seconds)
    (291/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.072314797 seconds)
    (292/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.060316226 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071117929 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064064339 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.080976466 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067560048 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.060602654 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.067427176 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.073938427 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.060699831 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06036157 seconds)
    (302/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068902412 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.059698683 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06091032 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05978253 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.060875948 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.059765471 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.062244771 seconds)
    (309/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.058886205 seconds)
  done (took 30.948052111 seconds)
done (took 32.390943016 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08172489 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085081851 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.06922818 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080880381 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07643687 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09107333 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.068634432 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073297805 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075680416 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075163042 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07416321 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067156532 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.06968381 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070198133 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.067857033 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083031081 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074687167 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.06933384 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069542882 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060826579 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.068785094 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.060556378 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060345527 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067131427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0721416 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068053491 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069711346 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.069978274 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.060756635 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061094126 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065578038 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069176236 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063041174 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073660391 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069369084 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069238694 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070880014 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07307547 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060393211 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.060885829 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070864957 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061153145 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.068730804 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.066954108 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.065488745 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067242676 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069056388 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073003787 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083016467 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064785548 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071078137 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072122722 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072259257 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066072087 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066222322 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.068930173 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.066694382 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083138901 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069415036 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064656583 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070249926 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069906837 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.066895249 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068758963 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069178572 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071213883 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074087332 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06742497 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070775518 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067728425 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.060740663 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.068671561 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065673671 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.060546976 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072082188 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073273022 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.059920653 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06490153 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.06909187 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069802177 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.060424595 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064074248 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060300511 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.065313953 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06422164 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067247279 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065463301 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068257858 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060228273 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.068826257 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.067538594 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068108962 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.059764923 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074186317 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061342071 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.066846625 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061059982 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.060703076 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060051092 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066114627 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060321818 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064165881 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069296877 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.059689833 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065301489 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074155402 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060558471 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068229331 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060514213 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06049481 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071726352 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.070869537 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.060276761 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064645782 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060281032 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066513863 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06051052 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060550567 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06022116 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.060993572 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065163673 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061254077 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064143055 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066084946 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073752078 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06024419 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065389793 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0644716 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060230379 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.066798461 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060813882 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06022569 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059363789 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.072655893 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063331471 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.059900566 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065096879 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063369873 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067770106 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.058426962 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068212976 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.065206871 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.204842899 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068388061 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060754379 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07245501 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065306057 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065218693 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060558186 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061486527 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060223685 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.060794238 seconds)
done (took 11.910870951 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061690157 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.090019619 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069457025 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077442276 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073330163 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062162895 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065757514 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079115966 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064161384 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08041046 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.081741244 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.080977357 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.087832674 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060453576 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.060992944 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062084394 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060243521 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.067377936 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076554977 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082008205 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.089731154 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.060793041 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.069884569 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076143757 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071364204 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.077114588 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062133725 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062274474 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06369133 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079020373 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083975183 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.060715152 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06160191 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075395589 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075177992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068832997 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.061415947 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065659643 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062032123 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.060929069 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062604497 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075757825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065300512 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067812995 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062578089 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06234681 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.061979786 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.064958837 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074458065 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065494009 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.068788963 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073240106 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063862012 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061460891 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060454996 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065994154 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061242181 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062157104 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06168291 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061051845 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061177907 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06321642 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.061638748 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.061977283 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.064576744 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064372009 seconds)
  done (took 6.005769584 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.078992579 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089085331 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077164923 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077986529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061175961 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061988142 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061764199 seconds)
  done (took 2.048662449 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.061962495 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074797322 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078276035 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077836929 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070541638 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079332785 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.061939271 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090527979 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060988157 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07395142 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106486511 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078664066 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065118727 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072786972 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061546173 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069889372 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061427716 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06930652 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070345113 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077395166 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065622366 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087599601 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07455633 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.061571112 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082314589 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066776005 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061314925 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061555828 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062863614 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.062724304 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06268586 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099878396 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066676129 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07290158 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062891464 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06149809 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067755783 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065068315 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065259316 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070252462 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067431686 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06323721 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060547424 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06312264 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064510491 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065672337 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060452188 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063441292 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062650522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073245345 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.060747253 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066269406 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065085072 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066699672 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067804168 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066207318 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069292587 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063413277 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073243485 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069606855 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062828339 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070887827 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070447249 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067395775 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070300839 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.065902155 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.06619388 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.06744248 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062799327 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063937699 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.0630107 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070006194 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061834864 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064222972 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065114791 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063986452 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065861579 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078005153 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077632175 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.073987215 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063326277 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063200338 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066101435 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078157245 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066704186 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062545442 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06517695 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061384959 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06595946 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06310766 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067399778 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063046256 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069903219 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.063943598 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065633797 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070437551 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061475563 seconds)
  done (took 8.151906585 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064307882 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063039707 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064405423 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.062903805 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062816372 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06300336 seconds)
  done (took 1.956058422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085545702 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062813329 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075978945 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063530072 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.09643701 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070494631 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.069946145 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071415656 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.074468647 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074257436 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070282837 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07323508 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069742129 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064238325 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069577646 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064023708 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069886468 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065930888 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.073828889 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064611632 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075489993 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064037327 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064251465 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07441316 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065396212 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063600554 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.062467057 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073759745 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.073513126 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073877528 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064035335 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065470026 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069589791 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070763227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069995983 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.06986468 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062749488 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068033702 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064451343 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065249597 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072106996 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064486524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.064837121 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068250534 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070590358 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06963876 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068059854 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065922288 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.06963423 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068269634 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068099398 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063447407 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065580175 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068061158 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069918481 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071116347 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068223546 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070064458 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064435136 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069684711 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062819192 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065780534 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070746346 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065367517 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067002451 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068061027 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069783147 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06423544 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06461338 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062582739 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068007701 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062458204 seconds)
  done (took 6.483654955 seconds)
done (took 26.17346378 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.977963226 seconds)
  done (took 2.498410659 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.554865722 seconds)
  done (took 2.114454845 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.678705288 seconds)
  done (took 8.236575503 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.303676963 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.337849469 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.707542797 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130114472 seconds)
  done (took 3.070377303 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706111546 seconds)
  done (took 2.272942703 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227940956 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.217223637 seconds)
  done (took 2.022470844 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343168572 seconds)
  done (took 1.902263107 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.071741727 seconds)
  done (took 2.627204168 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.228487459 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15483016 seconds)
  done (took 1.948675275 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445035629 seconds)
  done (took 2.005085891 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.27717505 seconds)
  done (took 5.840557592 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233523651 seconds)
  done (took 1.838123796 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228312927 seconds)
  done (took 1.794980515 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.711946125 seconds)
  done (took 3.272438804 seconds)
done (took 43.011800676 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078897028 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080614548 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080688315 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076821092 seconds)
  done (took 1.855512569 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070321754 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065897397 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070129839 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069561089 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067754547 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068949043 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068747363 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065331838 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067445822 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065911328 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064148725 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065630026 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068400406 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065801485 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068575382 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069813681 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06537264 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065980999 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068626535 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065004499 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.06813157 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065602367 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06354508 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.064736575 seconds)
  done (took 3.171619786 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073839879 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068393761 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071043028 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067391262 seconds)
  done (took 1.850534982 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072531736 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081790621 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083467514 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088532151 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07241515 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072386857 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080046553 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081173272 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061422395 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083965561 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06397455 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.061888569 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062289863 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082460211 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079862536 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059321627 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060509671 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072629366 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071750462 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.073696785 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063067452 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061228535 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071913545 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071673155 seconds)
  done (took 3.30343714 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076239193 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06156947 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075442737 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088602096 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090244006 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06171366 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075962376 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089377042 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13576105 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061290934 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.066930522 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061176972 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101772802 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061146216 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076845272 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106385455 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109868995 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064630274 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094505307 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06158223 seconds)
  done (took 3.198512845 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07264477 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065027607 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065656474 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.060813248 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072665853 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068434667 seconds)
  done (took 1.983288882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.063943293 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063687813 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.062934715 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062458979 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067792283 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062686989 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061433233 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063163488 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063094977 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062443402 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062156464 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.060990657 seconds)
  done (took 2.328994064 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156095329 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064670236 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065917731 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064449976 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06691064 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061563782 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07694505 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064606693 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079984977 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062561904 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062220024 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064604853 seconds)
  done (took 2.463690781 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096519353 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126150923 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092967191 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069011297 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166600291 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090651365 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.086454327 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.118352154 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089530481 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.0657965 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089550513 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131309712 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091397166 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.094613699 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077974168 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120472602 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105479562 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083951147 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109694086 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078130424 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066641361 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128729529 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066546632 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089262171 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097342683 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094097933 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105428382 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128367604 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08025966 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086679592 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079443297 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070699228 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100961569 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080417203 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093335995 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089950172 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094159175 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081452461 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.082653028 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115482436 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149323341 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096322038 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0965549 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130280553 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07493344 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.104951988 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078333656 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095753568 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100204288 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089713984 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071820537 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088190188 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102589915 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098159826 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078373674 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078319139 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113518276 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.093601334 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091146357 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0754724 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102300525 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.082450252 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102813361 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262025573 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136979143 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098407464 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133385085 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120078754 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09289495 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.086494362 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088940066 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072375267 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108024796 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095660732 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132505484 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106918778 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096008638 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092607765 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079033748 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104665821 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110548452 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091382743 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091064597 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141513319 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105050928 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087298407 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087849211 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142235441 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068102649 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143087568 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085042314 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116681828 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093456023 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134244579 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087941241 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.079881613 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102684662 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100360223 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086387381 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099686471 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080973159 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109844612 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08921185 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097187635 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078075625 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087204103 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08338848 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093720101 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071480577 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100639747 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112330834 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109780344 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071398691 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1047819 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08268325 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073396629 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089352313 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135318709 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079580259 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071595128 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144189496 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088850279 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.111376767 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104654807 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078689224 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262205719 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133919856 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091134984 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086568829 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074099825 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150845977 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073103781 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11573647 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078577664 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098749996 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102159691 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128628025 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134670838 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092610774 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075728638 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090016995 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.104019254 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083723166 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082913602 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073894592 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.104844493 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121508025 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.096608995 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077601925 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089327756 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066356819 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111056962 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072847764 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081170105 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093449535 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.08454279 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086309064 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138789252 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081375768 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104385006 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094614455 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064120705 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088345666 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149057793 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.07964 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107643586 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113034914 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080507171 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065141256 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092741023 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.06975975 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105463314 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089569112 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103174203 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075014694 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103375378 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065468585 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070836067 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126054757 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098907386 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086230631 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127954405 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100774937 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085115183 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.09981547 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093241018 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090962828 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097683214 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.256264174 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104171033 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071447611 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126082013 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088720918 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075215699 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084131614 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076704762 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074815751 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096897917 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111727226 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086336185 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097782896 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099962021 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087105233 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106361104 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086799004 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075947292 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128628855 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073425824 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072092435 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085254393 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.103117201 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086271934 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130070779 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076307181 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132213921 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090272919 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07871677 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113077853 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066609211 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066629148 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.077995698 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088892812 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112864881 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076282729 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074894707 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115076085 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128529352 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094602359 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099753023 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065823452 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087494161 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131768907 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.111874936 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078468567 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10680227 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081900641 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125707345 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093189844 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116879271 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102919504 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107451614 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088711593 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.077908057 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070992787 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084877671 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107735771 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083171645 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07906708 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064974391 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071747807 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089031969 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0868764 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107736494 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083541722 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129565511 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069204103 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096212586 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255502197 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105290453 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087536798 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092759243 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089634507 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089859436 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089507398 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089924059 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071464493 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12347229 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10054225 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076486767 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085977484 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091944349 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103539483 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106160944 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106436525 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091116721 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104090089 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119977673 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095855027 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079152353 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081623071 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090185476 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082163313 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078025624 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10096418 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110527896 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095710708 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105696893 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.092113868 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090675312 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103802772 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09019752 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085604699 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.114641601 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149194208 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099127489 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101267817 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082394248 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103822605 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102167887 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109753164 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107565411 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105712253 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067766234 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072216099 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067726956 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103277508 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075958722 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114247452 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073425992 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103341453 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093556744 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077004703 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.063960582 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098894717 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091014611 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078895876 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119862004 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110193104 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070122614 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087664627 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102535305 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079345974 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119031292 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097245307 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096281387 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068014745 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085882685 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224614899 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10729994 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098946597 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075591502 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074268643 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068024015 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10463386 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081745662 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107047716 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086241411 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098153617 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116335454 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129430432 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084238434 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093833128 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11567954 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110950163 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.078962239 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109625129 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132579791 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116325917 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077954714 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081396993 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10307063 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103636861 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099449386 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073426015 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076558223 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106015518 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110990261 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065230702 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081699198 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067817668 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.08148442 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10957366 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092196709 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079483371 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114676811 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072229745 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105119577 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092275517 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119771023 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11890732 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141241905 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093644898 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082109685 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074231329 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121259115 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068354026 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11431961 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109538193 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085180153 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066135372 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081182035 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093327265 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624464503 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105687801 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073282909 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132466833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083734045 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111011889 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081066523 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113114621 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085306413 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097032822 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086630444 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279421139 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081160735 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107756796 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.172555282 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10803358 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.105646808 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071549551 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084226916 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070807114 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076291654 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078800749 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084363168 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107125068 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082129878 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103104938 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077578211 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104596277 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088087511 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086012746 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09645455 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078070795 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135956303 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08492219 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12032189 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10514773 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075849568 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072058203 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084189622 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098923015 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079848612 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091756409 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07635824 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073572341 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149489987 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099425599 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082311873 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100183833 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088374549 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084110491 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089088045 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114672492 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107503982 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070578917 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085168976 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100667343 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076011836 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.071954487 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093878793 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066745974 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086278805 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095643351 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092974968 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087869941 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100361052 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075792213 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084599143 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107343431 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082852082 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074377552 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073906208 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073923564 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073486122 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100749776 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104775083 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109863069 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105105579 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086998935 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089654996 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.075126844 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.373234051 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078240316 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095637288 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102153926 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073905563 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128392515 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086360542 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086478201 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093532481 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098108359 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148953486 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071767972 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106933404 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091201006 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106553393 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084977589 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103734562 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093000374 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089472678 seconds)
  done (took 49.016028421 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089922341 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144483213 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151145846 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077486262 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091484711 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1159125 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205366701 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187551338 seconds)
  done (took 2.760070312 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063989441 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077627296 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09908896 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078711185 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.061857906 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.062891386 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.200189401 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076728671 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061625412 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098737128 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071981692 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063534074 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.410216709 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061588668 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062272042 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070647333 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062602071 seconds)
  done (took 3.363149945 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.358542331 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601830553 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.34065271 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071271441 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.959392414 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086338429 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.313501773 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134464746 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076791322 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557633888 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36782827 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129746515 seconds)
  done (took 18.686750594 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072036027 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070358228 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074028811 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074069457 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069591976 seconds)
  done (took 2.045299236 seconds)
done (took 97.609899666 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077065802 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.161825316 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063587839 seconds)
  done (took 1.947644375 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.079873345 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077183232 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077328948 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.0750524 seconds)
  done (took 2.002960018 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07022078 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072210605 seconds)
  done (took 1.82832505 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.241085066 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159416306 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088256436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080561527 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076584407 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076646694 seconds)
  done (took 1.931702913 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070087368 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06785591 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068537071 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069183577 seconds)
  done (took 1.960777552 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065219961 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062180249 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064647628 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067381451 seconds)
  done (took 1.946829105 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.080505639 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07950709 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074622917 seconds)
  done (took 1.921598922 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092336687 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092573922 seconds)
  done (took 1.8713022 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076709893 seconds)
  done (took 1.764389954 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086342561 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094576437 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149454585 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108049702 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147289086 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131322344 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073669432 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075012301 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069470219 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068128084 seconds)
  done (took 2.69068486 seconds)
done (took 22.119942725 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074639711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362728625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355290274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081270529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666821775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352205144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.982218102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086326162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094343771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063890275 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079971045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64484507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97635549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325670077 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962702935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324738375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645712701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06349713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062619436 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063626595 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968101329 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062840311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063656237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063521448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67987873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368131327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064868358 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320497017 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063741091 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066069297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351810762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06491736 seconds)
  done (took 16.07233201 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066793503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116646154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06822103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079131072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065931927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065617749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067086856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064570606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103867142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064436012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079952683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062829184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067511356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065132376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08381184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064540513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065374335 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064842699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064490485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06773249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081855422 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063952028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064742898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064622698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064696649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077374882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065315568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063880441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064447443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067015387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067464482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065809686 seconds)
  done (took 3.966375836 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116627463 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121972485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069014048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10209457 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114335416 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065822251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144338208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087306477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108196389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06441286 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080514355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063817486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098618945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066007855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084521242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064711271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065819086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064727028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064076878 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064944462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082598423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064372505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064797843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064942163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065149387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078694094 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065367369 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064204885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064242985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066751925 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068026824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065644272 seconds)
  done (took 4.234055593 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066641593 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068337634 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075903163 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076752853 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063174507 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065461183 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066749312 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063165659 seconds)
  done (took 2.257016938 seconds)
done (took 28.236843652 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075118509 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063487698 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067100355 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083524419 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069157279 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066507499 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061023949 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070049195 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.066970705 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067569595 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.06864417 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062559113 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065462717 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060542841 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.067430252 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062135286 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068526675 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06631845 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067387071 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068146841 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065577516 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067739765 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070485602 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067313815 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067493009 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067565853 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071434993 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067655573 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062782184 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065453607 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064605693 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073109279 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069300173 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069630199 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062469168 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062491032 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066920754 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064206704 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068918545 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071638124 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064193534 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071343084 seconds)
  done (took 4.502490391 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080772289 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084718695 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077589994 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076770836 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094156444 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077797565 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082023941 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073985678 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07210056 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08123551 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069272886 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075436442 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07337819 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067809321 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072327351 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069456082 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07389246 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069206316 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073030687 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073020352 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081707165 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067194963 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075044356 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074088244 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06949919 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074754233 seconds)
  done (took 3.67686621 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069528419 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.079728711 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087467491 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143754053 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107330287 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075427658 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076282993 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089485459 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092704941 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063473996 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066938008 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.08797119 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087385422 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069518797 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102697855 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079395188 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07794404 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065335675 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069881426 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092305956 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08288947 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080444661 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089138742 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079312587 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062310602 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065288031 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069067311 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076096776 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069632072 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074011676 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067298383 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066114933 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063562863 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073982863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067219595 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062188252 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085947778 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074748037 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075514733 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105187015 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071614697 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064273564 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090717402 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122976903 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.062643108 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066149764 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.066065987 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074300973 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.063930153 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090440381 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076544299 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062636277 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063600476 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063836702 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.063744654 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077753943 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064269584 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064340615 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073792708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068816215 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084510665 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068063023 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081206649 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062802554 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073157232 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06389655 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.063800644 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.061740961 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093049477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069280723 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110143647 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063646954 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061853105 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074371135 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073129927 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068599918 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062599739 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079949178 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073459644 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06628625 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073845793 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065632207 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065406513 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093620908 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063545592 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062557008 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061308176 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065943443 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065861677 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063605321 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07610261 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062698759 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06598516 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.07664191 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063308004 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063341972 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066006353 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065042632 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062454445 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074974187 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066649841 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063700156 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074123516 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063908085 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06556045 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.0757985 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069546209 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062402621 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064441161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065803472 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064135203 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066477797 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066600367 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065163266 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069713625 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.069540032 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068185901 seconds)
  done (took 10.299555523 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158609988 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.147150932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065229462 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140633641 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07143281 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068458339 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.140644402 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082874709 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063901545 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064213941 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0630709 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092653357 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089077514 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.09820936 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.067672002 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06343686 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086182269 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.09510929 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143847378 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138878781 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086663207 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070238174 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065418884 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064736815 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065207969 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071736134 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.07838516 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071436645 seconds)
  done (took 4.272106722 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073435945 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.088156075 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067682474 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075170276 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083435593 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063972642 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065251129 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06528243 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078344209 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072586402 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064038943 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068098581 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067461575 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066390037 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064268385 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.069879861 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069966096 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.062673789 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067438414 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068433917 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073444377 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08821486 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.06765132 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06296832 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065665818 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063331937 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072169073 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075131419 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063428467 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078438579 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06091971 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.067389866 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077184885 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.063874534 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.062829932 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063597943 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063529653 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063386262 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.063938041 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.061744033 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062114903 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068261643 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062259912 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071447855 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077013407 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070202067 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065330318 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066033004 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066190999 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061309103 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066388078 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.065996002 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065521576 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070369558 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066932481 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066283775 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066910394 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08809224 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069190105 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06289286 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062817347 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062161962 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065778226 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073298635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079955297 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066053947 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062430648 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063488871 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069050965 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077206747 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062844318 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067613322 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061016721 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064080765 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06566509 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065591629 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064024771 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062184579 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063092764 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063752751 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063634248 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063350964 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06319192 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.065776879 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062028765 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.061999181 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063708517 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065454695 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07207275 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062693432 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.06687119 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064409402 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062366432 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.065525178 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068681713 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.065726678 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.076661613 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074282285 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.063691246 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061988044 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.076759384 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065697093 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062964978 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06938358 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.06745231 seconds)
  done (took 8.845351675 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086819997 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065778937 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.079345097 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.086339408 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073730153 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.068720658 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074203126 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.064958954 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079576195 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.062954557 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071655268 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062135405 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074533404 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073227054 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.064861693 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073956968 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.065804038 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080359784 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078132788 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062550841 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072217494 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075701016 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075319942 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.077613596 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076367419 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078029825 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075044508 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066053905 seconds)
  done (took 3.807708648 seconds)
done (took 37.107546713 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.791065567 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.956801018 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.78006023 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.993866385 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.955599695 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.911197174 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.899941799 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.779209589 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.032883348 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.831946384 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.076897843 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.291668196 seconds)
done (took 66.074029568 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.858557437 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.944386776 seconds)
    (2/2) benchmarking "String"...
    done (took 2.042579012 seconds)
  done (took 5.702290379 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.10955853 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.58975734 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.066510516 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.778678486 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.785206608 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.316972923 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.579953501 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.236544617 seconds)
  done (took 31.069034511 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.92932175 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.014009704 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.463111643 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.491889545 seconds)
  done (took 15.657902528 seconds)
done (took 64.205951247 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.811472456 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.780585796 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.798679088 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.811620834 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.78187297 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.784694335 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.784715315 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.781469291 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.809862571 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.947648278 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.781531112 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.784922213 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.784591038 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.820127706 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.300628461 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.839095934 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.800079823 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.795812623 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.79839292 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.805495096 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.785738654 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.783690976 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.261655932 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.960256011 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.394234666 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.234322463 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.244629583 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.182216898 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.792040231 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.780008337 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.843628087 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.223032126 seconds)
  done (took 204.800396116 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.782067025 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.712575602 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.780280328 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.794738871 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.240420716 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.955246584 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.889312074 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.295927238 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.783357769 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.787321768 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.892672334 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.783278376 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.910780035 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.735726561 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.819830842 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.827243349 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.914107132 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.935852625 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.821566505 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.935051758 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.801126166 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.734807666 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.703365733 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.895220597 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.799609627 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.795139064 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.799407517 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.792764047 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.968464054 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.897920507 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.795265204 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.81811319 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920625151 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.656173801 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.789284839 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.807224593 seconds)
  done (took 169.287530378 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.988805129 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.791539277 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.784949203 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.8384649 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.905692512 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.785285028 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.421870207 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.789968928 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.082039776 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.785100223 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.78666824 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.782317554 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.784788801 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.785026393 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.798653519 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.863066091 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.790183614 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.798784293 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.787368043 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.809954291 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.785268397 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.784308195 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.78458513 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.78448974 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784866994 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.783645084 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.787651452 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.14029418 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.024429136 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.787441857 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.785028053 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.483097907 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.797648335 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.975759912 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.791356395 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.877853942 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.839141366 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.907444144 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.787321905 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.003531708 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.861812709 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.784623865 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.785885521 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.84899783 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.797275062 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.787293734 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.793029232 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.792998942 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.851188429 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.033188633 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.785379884 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.786829423 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.908437065 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.273061548 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.786382967 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.78626739 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.786491565 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.386575559 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.787718852 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.78815398 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.791377203 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.794839168 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.786536393 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.787995883 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.173087052 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.856415686 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.225873893 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.962124042 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.786656163 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.249346941 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.903727118 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.787091229 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.786055673 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.786353089 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.787503935 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787422408 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.790758394 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.909222793 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.795454515 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.911320237 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.869649126 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.911395649 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.79106086 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.786887282 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.796204706 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.61511152 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.856787145 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.82124475 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.617211003 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.786480006 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.164565474 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.577273842 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.78924809 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.787343041 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.800076435 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.787419745 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787124336 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.790203439 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.870974904 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787131647 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.911777285 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.512922774 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.979144488 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.968781565 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.789381822 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.793909697 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.881766036 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.959601892 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787493872 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.854908259 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.792622838 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.792511604 seconds)
    (112/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.94024057 seconds)
    (113/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.789312008 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.789036534 seconds)
  done (took 402.211643543 seconds)
done (took 780.064717011 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.378645948 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.357786233 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.471319259 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.374506194 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.351323841 seconds)
  done (took 13.652932171 seconds)
done (took 15.372772165 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.803704545 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.797383771 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.854139843 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.873403455 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.804905409 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.80837292 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.8745345 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.807494102 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.839750803 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.844741684 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.874272045 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.873505523 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.813952797 seconds)
  done (took 25.589080526 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.797965027 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.946898881 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.016609542 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.83236376 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798705915 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.034536115 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.854966282 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.938514638 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.950872011 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.033554494 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.032737265 seconds)
  done (took 22.963713442 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.797732494 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.949977794 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.035162537 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.835541003 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.797900702 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.058711708 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.85971987 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.949804344 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.955422445 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.029028766 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.043341057 seconds)
  done (took 23.043972334 seconds)
done (took 73.321523545 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.793349867 seconds)
  done (took 3.515183282 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.824124955 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.959146435 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.791312242 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.792225364 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.797198645 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.792881717 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.79193576 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.793648577 seconds)
  done (took 16.268621921 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.795338238 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.794648217 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.793866399 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.793890249 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.79704472 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.793397802 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.79531429 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.794145066 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.79333363 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.793586641 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.793764757 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.794938448 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.795694725 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.793700668 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.794150703 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.794217686 seconds)
  done (took 30.435068529 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.79673785 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.797787108 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.797162793 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.795977027 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.796759328 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.795723122 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.798159218 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.797711389 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.796693202 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.79619267 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.796404751 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.796372787 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.796646581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.795634793 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.796830088 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.798684367 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.797010931 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.797989611 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.804389411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.797145534 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.796760222 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.797688373 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.795062798 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.796116451 seconds)
  done (took 44.858440774 seconds)
done (took 96.812374743 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.543082006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.605778055 seconds)
  done (took 9.87237861 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.799253659 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.799456786 seconds)
  done (took 5.329887515 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.796548144 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.798872334 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.797632864 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.798304295 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.796762873 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.798515999 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.79651042 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.798327698 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.799094401 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.798308819 seconds)
  done (took 19.705214576 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.798475553 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.798558657 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.797124468 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.798903388 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.800537469 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.799722882 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.798593103 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.7999562 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.798691158 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.799419249 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.79912233 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.800127063 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.8005556 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.798866434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.798597427 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.798607714 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.802489974 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.797840041 seconds)
  done (took 34.112982657 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.79897951 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.801537765 seconds)
  done (took 5.327570014 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.79776232 seconds)
    (2/7) benchmarking "second"...
    done (took 1.80135478 seconds)
    (3/7) benchmarking "month"...
    done (took 1.799566588 seconds)
    (4/7) benchmarking "year"...
    done (took 1.800174586 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.800264583 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.79721967 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.801654109 seconds)
  done (took 14.324544281 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.801157764 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.956041489 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.019430007 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.661598848 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.801514431 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.804217799 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.160319918 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.804470309 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.804129066 seconds)
  done (took 20.538116521 seconds)
done (took 110.939098856 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.704704082 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.798589241 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.061918485 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.874212185 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.800073637 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.092254032 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.837441362 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.439214945 seconds)
done (took 42.338260575 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.818238797 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.796929825 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.824682091 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.826334432 seconds)
  done (took 22.17693667 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.803834858 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.149375803 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.822079182 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.656719924 seconds)
  done (took 22.183614075 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.181829982 seconds)
    (2/2) benchmarking "read"...
    done (took 2.143819869 seconds)
  done (took 6.062841195 seconds)
done (took 58.975754095 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799395187 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.802388366 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.802024017 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.802683033 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.801831052 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.801969574 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.801949499 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.803365499 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.80190593 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.803253977 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.801600406 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.802833643 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.80260512 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80259977 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801897855 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801332008 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800146228 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.801755484 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79958929 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.802596452 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803679437 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801380799 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.802042721 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.80286257 seconds)
  done (took 44.978493896 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.802712056 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.803557463 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.802054776 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.804414508 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.803224354 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.804110522 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.803208344 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.803244838 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.803172577 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.804156953 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804947116 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.805594696 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.805535603 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.806079309 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810940232 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.806595632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.805860563 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804919912 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802732166 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.802798246 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.804101345 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802899241 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.805241494 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803957034 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.805137031 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805796909 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.803672009 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.804046169 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804506251 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.802696233 seconds)
  done (took 55.864096133 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.805780138 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.804229556 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.805304366 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.804370891 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.806174446 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.806106523 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804531502 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.805815855 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.80491249 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.804134702 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.804752766 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.8042877 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.803878553 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.805321143 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.803765374 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.805678186 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.807756813 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.805857775 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.805985261 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.805987945 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.806473964 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.805095831 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.803941983 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.806986537 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.807770706 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.805639766 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.806039968 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.807388706 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.806483226 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.806881904 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.80714155 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.806745949 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.803899594 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.808087235 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.807299257 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.807432004 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.806303891 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.807768581 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.806888883 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.808640014 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.80608694 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.808365703 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.808008354 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.8062688 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.807216349 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.805010336 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.80395486 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.805538911 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.807574779 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.807166131 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.808446316 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.809147012 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.807024563 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.806769151 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.808618976 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.806972077 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.807273749 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.808843557 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.807221814 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.808795693 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.807915078 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.807927479 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.807312613 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.80998718 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.809588054 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.808942766 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.810172068 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.811481552 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.809684159 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.808856999 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.807960354 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.808400138 seconds)
  done (took 131.826811569 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.808962093 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80759038 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806583778 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.809987454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811030594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.809961129 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.807712955 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808867284 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810640016 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.810490894 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810228988 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808175704 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80984054 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809119319 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810355879 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.809896668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809231257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810902888 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.810425214 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.811040108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809531692 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808436425 seconds)
  done (took 41.546634847 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810573441 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809720133 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.809915575 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.811515344 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810908128 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.809817388 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808816342 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811491705 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809259353 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812454389 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811154704 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.809290229 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811147632 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810695583 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810155746 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809827789 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.809791915 seconds)
  done (took 34.325212666 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.810658129 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.814368915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.809114555 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.810156927 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.809939631 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810835361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811438382 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.811986893 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.811246345 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.812672673 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.810720037 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810112763 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.80958726 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80921063 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810760717 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.811423508 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.810352295 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812186425 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810739516 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811193366 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810986995 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811265955 seconds)
  done (took 41.579830331 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811755015 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.811484042 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.811346044 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.812385925 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.812999451 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.812843061 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.813149718 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.81323636 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.812633895 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.813360125 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813141407 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.81354358 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.812976301 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811234728 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.811903118 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812039396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8125973 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813008581 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814090781 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.81177448 seconds)
  done (took 37.992336615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814867101 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813123938 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814127404 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814944636 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814045807 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814574111 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813656462 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.816472641 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811471707 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812728915 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815821684 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815626274 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813216315 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816178598 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813965873 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81410372 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814574248 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813820296 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813887415 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81556511 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813261139 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815170645 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815155727 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816767978 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814095416 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815064345 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812905563 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813371353 seconds)
  done (took 52.54388232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813184429 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.811795212 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.811962294 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.815364938 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.813951793 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.813945434 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.813693077 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.816103584 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815809922 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.814484573 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.814697653 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.815926054 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.816216197 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.814795682 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815184141 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.817388473 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815895361 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.815248974 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815536818 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816493399 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.814503188 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815808608 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.814494419 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.817811921 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815102289 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.815429007 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817469331 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.816761605 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818718401 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815400307 seconds)
  done (took 56.201619027 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.837491644 seconds)
    (2/2) benchmarking "in"...
    done (took 1.835214165 seconds)
  done (took 5.414606491 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.816656095 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818347705 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.813865513 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.816808793 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.816405159 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.816496033 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.815604018 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815562065 seconds)
  done (took 16.272826262 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.818132312 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.824398495 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.817185171 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.817196704 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.817432564 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828655473 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.81810271 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.817965233 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.818500536 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.81764831 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.82363467 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.820615699 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.826144919 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.822685768 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.817233968 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.818940131 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820143623 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.822131293 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.822854693 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.815349484 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821549778 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817765952 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.817514268 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.820830855 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.817014052 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.821462382 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.827853929 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.818310138 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818524017 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.817588367 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.828566764 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.820220362 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.821076523 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821823291 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.818625647 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.817804188 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.825835354 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.821645211 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.817396298 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.817964784 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.821173262 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820881567 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.822840406 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.82719824 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.820708867 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.819714152 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.818308526 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.820113483 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.819204473 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.824116866 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.82733529 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823388428 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.820315419 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.823818105 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.824188107 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.822244191 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.822614913 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.822406955 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826913239 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.829238265 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.824608795 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.842687859 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.832759172 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.821134467 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.820436877 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.829518433 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.848310629 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.824676198 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.822720751 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.819288139 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831479151 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.822053815 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.8234616 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.82249868 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835189143 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.832159828 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.821203457 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.821937056 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.822471992 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.821041053 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823818185 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.822766096 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822179943 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.824079765 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833890988 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.848525024 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.823735958 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.821982379 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.825184716 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.823877107 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.825610672 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.825879283 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.820255255 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.821840265 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.825834492 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.821943511 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.821886955 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.822722746 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.821541141 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.833471959 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.823154025 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.821326643 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826661799 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.832118971 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.822741866 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.825142633 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823249719 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.824530954 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.832957376 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.821947358 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.825487141 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.824196322 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.824449234 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.82985757 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.824047584 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827431492 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.831688811 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.833323859 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.823703689 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.829638906 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.828306065 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.827875642 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.834644381 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.850083191 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.823017437 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.827390732 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.829101556 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.838076586 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.831023643 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.826493434 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.828408284 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.825779271 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.824997489 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.828808 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.821893857 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.825829261 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.825438618 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.825755074 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.826141569 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.826160212 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.827346392 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.82576197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.829652077 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.825406959 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.830661518 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.827881624 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.830223851 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.831897975 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.825611172 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.827457423 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.825739304 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.830113329 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.828048273 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.826858606 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.826092491 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.824867115 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.825415164 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.828371346 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.830626277 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.824524977 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.82426986 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.825332995 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.828687921 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.826359571 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.82545721 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.827052114 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829191415 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.827251224 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830138304 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.826452345 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.829237422 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827399539 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.832357346 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.827612553 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.828673617 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.827134117 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.827645138 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.825669674 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.832290773 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.841238337 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.831719605 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.836767546 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.830071222 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.835761827 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.82784106 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.830588819 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.828843668 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.827638744 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.82932876 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.827306724 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.827337386 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.831184183 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.848388792 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.83975754 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.831572983 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.828429064 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.834000982 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.831736961 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.83527918 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.829502022 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.83106407 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.832172982 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.830216012 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.827663984 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.828377575 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.831583974 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.829339217 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.827316021 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.832689276 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.830150585 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.828977982 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.829963856 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.83072336 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.833918562 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.829784123 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.829427821 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828081049 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.828496159 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.839277319 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83346299 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.828528009 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.829893003 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831533441 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.82960593 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.830359249 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.83202552 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.834126365 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.829901298 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.8307947 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839957906 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.831364983 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.830293038 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.83011956 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.82792134 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.832627378 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.829236119 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.833534412 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.837904067 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.832816195 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.829659956 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.836925281 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.831272039 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.833578553 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.832830516 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832709382 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.832029333 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.834314824 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.833682196 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.830719297 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.837853886 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.829828826 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.832445592 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.829617209 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.832215612 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.828494392 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.832935109 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.832116584 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.834927096 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.842550846 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.839338753 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.832548427 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.835577291 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.834120065 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.833111461 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.835331057 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.836561489 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.84620825 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.844788005 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.830611074 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.832012481 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.832080291 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.830774951 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.828565714 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.832461831 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842733868 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.832592115 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.832284177 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.835470683 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.833371251 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.834526877 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.840906888 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.833119462 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.83442757 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830322442 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.833295149 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.834657142 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.831404056 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.835373779 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.830390327 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.837093326 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.835837639 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831968599 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.836209508 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.835411324 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.845544765 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.833980789 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.832885007 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842753272 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835443486 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.832740929 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.835234198 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.833344053 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.836143179 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.835258746 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.832634067 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.834185524 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.836316655 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.838692451 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.844795753 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.837822726 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.845858857 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.838958726 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.847086674 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.836743698 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.834068346 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.836259595 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.838993494 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.843352308 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.834410499 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.836513784 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.843421205 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.836837918 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.835963759 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.840496967 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.835379155 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.835738997 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.836541181 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.836798592 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.842022564 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.839458202 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.835584841 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.836651353 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.835737241 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.834966071 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.840777978 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.837755889 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.837222545 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.836016426 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.835967216 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.835070917 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.836356119 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.836734031 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.83661431 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.837392758 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.835354442 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.846649552 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.837229148 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.837086615 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842084539 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.837509627 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.847028205 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.837495735 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.839019266 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.836706193 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.836799363 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.83928135 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.836346763 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.837398662 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.838736202 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.836246438 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.840784765 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.852940725 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.847637842 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.843076253 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.839023282 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.83848878 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.840412329 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846745231 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.863620467 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837818777 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.839644448 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.841541566 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.845375112 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.838430104 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.844665636 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839997361 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.847296202 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.839429245 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.836362469 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.841118103 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.853483851 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838210742 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.838775438 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.837574788 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.843678004 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.843148605 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.836694598 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.839007714 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841050141 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.84004789 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.852573672 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.839876663 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.83983604 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.842251787 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.837428227 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.841783578 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.838524202 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.841762694 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.841165914 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.837398327 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.842612043 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.840905335 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.845353122 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.840825759 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842716291 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.85149705 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841548928 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.840852852 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.839974863 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.839273148 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.842693296 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840150252 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.839728338 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.841960427 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.8405578 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.842371891 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844901265 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.850547327 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842682892 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.839701944 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.840196018 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.846877152 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.840990143 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.841616506 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.84195949 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.851593014 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843525444 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.852782694 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.854560982 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.840002002 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.840588363 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.849251644 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.851577753 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.841166574 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.839147915 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.842540726 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.841616886 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.844671614 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.841235924 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841453692 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.840266368 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.847876755 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.839882424 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.840076107 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.84487608 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.839860074 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.843677191 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.846069979 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.848740639 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.842162161 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.842007327 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.840168593 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.844015616 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.842336075 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.845781285 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842629887 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.844110477 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.846990989 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.843801153 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.848996351 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.842418375 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.844369001 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.845306005 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.842805018 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.840720471 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.844941076 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.8404846 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.842083962 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.847158752 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.852524445 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.842254489 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.844571158 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.843806178 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.845006702 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.844194666 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.84309148 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843755193 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.842717869 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.85061617 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.843811075 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.842277026 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.841780496 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.843878877 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.849618541 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.84574164 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.849797435 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844515471 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.843121817 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.842026753 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845601087 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.852494839 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.850667341 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.844892871 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.856179586 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.849172309 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.844423443 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.845708375 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.842662119 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.84395108 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.848026162 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.846224286 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845698194 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.845392224 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.843671732 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.845609719 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.843919572 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.848101229 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.84037913 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.843112658 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.851374703 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.855097456 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.855469374 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.84408662 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.846813069 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.847291376 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.849493926 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.857260714 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.844692625 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.844638081 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.848426188 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845923452 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.845204544 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.854445544 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.855472821 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.850139527 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.847723662 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.851533788 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.866484545 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.84991261 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856883232 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880767961 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.849181172 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.845034864 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.847109893 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.846308436 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.846179243 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.850454632 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.847566808 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.85467793 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.848214026 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.843485265 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.854132262 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.847434821 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.844971354 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.846762217 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.846584303 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.854227656 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.84654672 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.853439954 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.84759113 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.845463886 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.846616751 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.848180305 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.846063995 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.846001002 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.846186272 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.847636842 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.845580528 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.848253957 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.855850507 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.847199937 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.84804888 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860725378 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.858632402 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.848887217 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.847161679 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.848261968 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.854546087 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.85083631 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.845484967 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853343876 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.857209925 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.852715958 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.85601482 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.849284669 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.851356078 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850237725 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.849763417 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.850084088 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.862927744 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.860872593 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.847299312 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.847874805 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.856227042 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.848271918 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.857764332 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.854647993 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848256613 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.851670801 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849282697 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.851780095 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.849768493 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.848775578 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.853373522 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.858619472 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.852563772 seconds)
  done (took 1096.285005457 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846833253 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846865047 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848244487 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847958159 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849010581 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848982783 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849975656 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84836016 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.85102565 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.850327811 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.852529276 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851066742 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.850137437 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.851740276 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850676379 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849755035 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849983256 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.849308619 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.851287355 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851493013 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.850797829 seconds)
  done (took 40.623601375 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.851858411 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.850833316 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.850639634 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851003483 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851122385 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.850070798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.850112388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852005708 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85208127 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851455521 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.850646298 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851839107 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.851098423 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.853006854 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85026654 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853749821 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.852177516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852828332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.852933628 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.848506436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850154594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848767542 seconds)
  done (took 42.505354961 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.85323964 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.849651874 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.850564059 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.846858263 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.85021675 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.848863095 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.851120808 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.850469194 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.846857158 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.851010332 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.856572688 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.857906601 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.846149497 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.849349308 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.846835775 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.845615006 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.99425646 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.844838672 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.846241425 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.845558982 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.847580301 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.854410517 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.845703315 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.845146104 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.845832437 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.846339032 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.846950316 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.847647392 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.846312828 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.848509801 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.853417833 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.846547931 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.847746767 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.850214005 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.846585677 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.846564798 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.851135201 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.846751644 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.848283409 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.844262473 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.856050182 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.871858926 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.845323152 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.847872733 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.857006366 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.846044196 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.848599008 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.849559116 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.855775015 seconds)
  done (took 92.54318609 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.846803859 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.843626362 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.845637415 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.848457544 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.842360126 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.845690427 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.842347653 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843295329 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.844784471 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.845225783 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.842425016 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.843390483 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844781866 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.844096579 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.842472944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84424998 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.844536952 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.843257373 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.844142802 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.844822402 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.843698757 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.842709695 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.845037351 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.844036354 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.845691071 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.844372952 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.84377502 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.844391849 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.845305334 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.843843548 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.84322531 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.844372167 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.842615114 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.844685446 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.843883345 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.842714769 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.84272847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.845880612 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.844830853 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.842914281 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.847345855 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.844086345 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.846545464 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.840297473 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840599031 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.844599769 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840084538 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.844209741 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.840762444 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.8396567 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.841074236 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.839870183 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.840219614 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.844028061 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.844054842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.841202712 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.841331479 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.840699704 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.839953075 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.841038449 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838283499 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840078268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839369919 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.838979049 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.841305878 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.839147632 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.838966707 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841380052 seconds)
  done (took 127.099779181 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843506022 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.839964571 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841408373 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841034433 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842756972 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.841517682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842864588 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.841566749 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.842744631 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.840383619 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.841174037 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.840351681 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.839801026 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837717551 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843800369 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.841875061 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.840928753 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842240381 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843799616 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839704729 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.841621614 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.842435938 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.846770067 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842779183 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841836286 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.842901522 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843560092 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845903861 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844757841 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843628742 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842129252 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.842481922 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.843588215 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.846783866 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.844330216 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.843089705 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.843541185 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843542309 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.843319568 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84488799 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.843612937 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846165334 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.84199644 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.843475672 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843659668 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841492683 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845060059 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.843935557 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.84419043 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846821058 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.84296126 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842091432 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843712685 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844136837 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.843624829 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.841712981 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844444624 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843328315 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845214612 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.842900242 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844564106 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.839476227 seconds)
  done (took 116.03272914 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840229316 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840728731 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.839061664 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.834172367 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.831468177 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.830765759 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.831431465 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.830789367 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.832452251 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.831309111 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831588324 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831437172 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832525634 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831076466 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.832386153 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831178538 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830573001 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830267345 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829851461 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831765931 seconds)
  done (took 38.421720367 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.830568003 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829702406 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.830507925 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831346582 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.830298 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829602471 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.829361307 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83078122 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829994261 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831046927 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829742286 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.829337579 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829543933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830747299 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831653275 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829308887 seconds)
  done (took 31.044698073 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.829693708 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830012486 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830721942 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.831396993 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.82804638 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.828944727 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.830894211 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.83125661 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.829369323 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.830006458 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828909614 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.829301376 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.830159228 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830416522 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.830215729 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829566603 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.829120503 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829820765 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.829427767 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.831729172 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.829657344 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.828361566 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.829963276 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.829168163 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.829578146 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.829476538 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.829149556 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.829699337 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830107028 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.830257889 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.830388095 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.830985798 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.828807526 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.82946708 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.830512293 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.830177887 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.829932013 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.829205042 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.829359291 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.831643851 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.831251076 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.830847318 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.829242446 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.829733033 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.830628124 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.829925225 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.829753418 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.829418955 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.829293395 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.827513936 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.829028769 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.829512671 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.828803018 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.829567218 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.828912454 seconds)
  done (took 102.400281132 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828571063 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82805044 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.829538795 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.827977083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.828609956 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.827721048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827980832 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829944858 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827995186 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.827317939 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.827395618 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.827490755 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827870768 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827829461 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827655925 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827947406 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.828440249 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828309937 seconds)
  done (took 34.668849935 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.828604391 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.828608113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.828661254 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.828306913 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.82881921 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828331123 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828290087 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.8280727 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827989296 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.827889728 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828503534 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.829069773 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828811543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.830343381 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828778718 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829275406 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.827603421 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829233251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.828293678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829185128 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.829207022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82956504 seconds)
  done (took 41.992620678 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.828557936 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.828194846 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.841950207 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.848321246 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.847452854 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.857334251 seconds)
  done (took 12.811964639 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828051706 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828421745 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.828553136 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827745274 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828072034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829093713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828812649 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828459985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828499636 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828368963 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828123409 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828441943 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829316872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830149542 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8280723 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82902307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828046055 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831828124 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827211648 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828351084 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828217753 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828744068 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82764712 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829761385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828037353 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828210739 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828922606 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828475673 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829728648 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827996423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828316588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828135349 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827922208 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828656365 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829665284 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828706602 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828299253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827534103 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828221379 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82977813 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828928264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828118597 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828428023 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828152327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828237596 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828725364 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828039489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827902715 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831256097 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829201989 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829978889 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828936788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829546315 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828897744 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828936673 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829119002 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828431883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827681274 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82764871 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8271499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827608395 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829240774 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827164646 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828408804 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829386747 seconds)
  done (took 122.448950313 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827704659 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829469556 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828326981 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828375097 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82749954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827831903 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827730094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828200248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827486529 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828501309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826959762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829184978 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827199438 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827587421 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827499734 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828741339 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82913237 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828532108 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828174111 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828539306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82848123 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827923483 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828558873 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82791313 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829753231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828593215 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828394938 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828417577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828981412 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82898174 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829174626 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830131917 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828843922 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830272267 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830386186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828528803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829996449 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829493919 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828875622 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830105851 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829788248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830458281 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829328277 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830401075 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829951206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829731504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829691372 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830435841 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83182699 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829615438 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831041075 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832508994 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830146526 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829758131 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830064689 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829837528 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83000078 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829332571 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829772904 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831025102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830490845 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830081567 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831785559 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829943128 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830487002 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83159593 seconds)
  done (took 122.495471093 seconds)
done (took 2541.656160693 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.855185395 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.943285645 seconds)
  done (took 15.560685287 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.994474731 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.946377339 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.830796656 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.872354874 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.831275085 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.849448206 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.85466482 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.831716014 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.83078951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.832898558 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.831162434 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.016179497 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.891037723 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.831327616 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.830719673 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.922966742 seconds)
  done (took 51.763165183 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.836614446 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.838710146 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.846792999 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.840562096 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.836487027 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.849256758 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.869344885 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.840412668 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.87272797 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.849639125 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.905614897 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.848221851 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.836642704 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.887517273 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.851496094 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.851630618 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.932787695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.913141669 seconds)
  done (took 35.270932092 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.915159015 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.839967617 seconds)
  done (took 10.524753483 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.868775083 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.843359129 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.849355625 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.860099153 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.838741868 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.843063447 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.863555888 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.853315099 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.860061533 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.841930266 seconds)
  done (took 70.287682015 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.843286532 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.840776962 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.843519888 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.837998004 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.83542422 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.84358092 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.83877268 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.839067994 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.521802385 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.872558014 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.845751577 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.847958102 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.837976169 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.839674261 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.834908768 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.865955117 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.978200797 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.834811008 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.835385078 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.8459492 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.839371123 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.890520006 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.851446626 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.837706389 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.867901618 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.517096203 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.846143577 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.845604249 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.946180059 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.834465478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.837959552 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.050495823 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.839750397 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.297841248 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.107590873 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.840473924 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.850554959 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.846674231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.836515471 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.955553384 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.840525586 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.845151368 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.837512719 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.081216927 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.930864647 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.886566415 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.167044905 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.842532932 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.840165403 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.87347623 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.84113499 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.842267493 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.853077807 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.359305305 seconds)
  done (took 131.230114919 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.835050909 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.186623958 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000737925 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.838966949 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120523333 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03974581 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.841334121 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881605163 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.8394781 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063075082 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.091523519 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.943052106 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83626335 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.834710071 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.834476565 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.834468941 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.988953657 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.904738797 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.836864516 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.833981093 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861457885 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074987499 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.955486628 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.837884206 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.861217254 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04325092 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.9554649 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940421327 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.629378801 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.835289217 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.897750334 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.838777652 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.835619516 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.835464478 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990806374 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928177108 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916672477 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.838398457 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.835893361 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.836426518 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.492728214 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034460279 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.929807064 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.964963396 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.086948192 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039208215 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.612801662 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.836918195 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.563993575 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996544508 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.062741066 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.063951581 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956832081 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.839715484 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.093429318 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836433792 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836998758 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084549812 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056599438 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.936453752 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839886493 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.837259269 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.837547267 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07293993 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.838806513 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931593137 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840568412 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837361427 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.932809491 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938096649 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.067929403 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046840283 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.867448044 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.174614322 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.338989111 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.082161899 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.900957988 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087366911 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.842310208 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.837272678 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915258638 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.679072308 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.090491384 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081912166 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082267618 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872291517 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.553577021 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.838617576 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.063298395 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.058429568 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.09669633 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.082615501 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.071470502 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.146283639 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.839768193 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.838651699 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.057173646 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962324589 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.841005277 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.186736007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070299965 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.401773068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.86451877 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142541941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968541821 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.841858754 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.469543696 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840276877 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.067087585 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.87823486 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.841829369 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841052688 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.056597256 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.827137975 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839388267 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.715574415 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.899036382 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.844596869 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070647382 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.844013674 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10938919 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841846419 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070820763 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.016257208 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869803765 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.011113752 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.08450851 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.843493213 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.083409191 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.082130251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955079495 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11077521 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.723502566 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841145932 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130028548 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842975855 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.840921912 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009041137 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842124792 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.982892674 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.844003162 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.132938015 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862994158 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072597708 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845064343 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.092859321 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.872922774 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89023051 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842688966 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965456515 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846344446 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.6739549 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996796731 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844150522 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.843645198 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.389217171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.845332991 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996236857 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.067430941 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863270226 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915132109 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.502225901 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842861317 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92274141 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865316871 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.231762741 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.843917642 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.09202765 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.846070034 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.842398684 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.842559098 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.078169268 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.078180964 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.843879748 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.844656803 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.747866635 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.842521238 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.843525131 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.023728204 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.161886809 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.84356411 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042782173 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84823959 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969112617 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.847866529 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.912064755 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.176328131 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84372738 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.842895499 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.842909416 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.843968744 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843913172 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049958647 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869350944 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.376036994 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.979237671 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117912637 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.15767503 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.082576377 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.885382327 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.846305784 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.095841429 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.845880853 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.905609185 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.8476456 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865736388 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074451875 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847644265 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105954977 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.112017217 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.728719248 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891782435 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.847693456 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847140038 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.845690515 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.989211038 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932287729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.847417526 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.845785633 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.958202121 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.966195808 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053971297 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.846818885 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.930920319 seconds)
  done (took 897.020092 seconds)
done (took 1213.422318787 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.845866088 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.844863656 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.851086373 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.848143749 seconds)
  done (took 29.166303065 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.846853133 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.847352659 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.848056654 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.847171692 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.845380839 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.847459012 seconds)
  done (took 12.859309293 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.021834004 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.846446073 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.84687138 seconds)
  done (took 21.493427013 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.920614916 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.263005372 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.986549817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.286303573 seconds)
  done (took 10.23421887 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.848292732 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.848286165 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.848576232 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.846885503 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.846630028 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.848053931 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.847192637 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.846335849 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.848152186 seconds)
  done (took 18.407035655 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.551643811 seconds)
done (took 98.490308206 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.521981811 seconds)
    (2/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.273533601 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.069369378 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.931085051 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.1946432 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.960735995 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.916879407 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.184326302 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.089104276 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.879076578 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859234517 seconds)
    (12/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.939276149 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.862817902 seconds)
    (14/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.077983015 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.986798319 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.128974434 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.0202731 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.857552886 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.962353686 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.88631285 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.070469757 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.369778283 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.947958203 seconds)
    (24/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.951819082 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.859507948 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.00296231 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.174897694 seconds)
    (28/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.110672291 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.995363189 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.881676583 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.858129958 seconds)
    (32/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.032998447 seconds)
    (33/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.989290285 seconds)
    (34/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.27935854 seconds)
    (35/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.152971335 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.970824054 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.859154592 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 8.500003483 seconds)
    (39/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.127344353 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.59943157 seconds)
    (41/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.9868998 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.152085752 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.285265687 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 2.076530519 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.862651387 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.084290144 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.862846818 seconds)
    (48/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.315834931 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.23647539 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.98731804 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.543346916 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.92293877 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.430422834 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.352639984 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.099316171 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.324605165 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.11203246 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.881424663 seconds)
    (59/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.938496255 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.159143188 seconds)
    (61/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.864410296 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.744931941 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.886317828 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.982522441 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.950978007 seconds)
    (66/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.745650716 seconds)
    (67/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.999770937 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.860113459 seconds)
    (69/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.97111692 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.829651488 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.888186909 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.861069907 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.720828458 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.071882179 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.89788893 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.16035195 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.221092605 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.999503046 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.878674499 seconds)
    (80/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.006861972 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.133107502 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.966228699 seconds)
    (83/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.875659017 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.18920327 seconds)
    (85/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.943094735 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.998843865 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.861520577 seconds)
    (88/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.915210122 seconds)
    (89/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.581657161 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.040349506 seconds)
    (91/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.001203486 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.861865661 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.946448772 seconds)
    (94/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.140569196 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.075512401 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.343092091 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.887349725 seconds)
    (98/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.969632426 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.789691009 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.870224842 seconds)
    (101/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.658863143 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.647200938 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.872060682 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.361287196 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.262431166 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.179659015 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.974049942 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.927767603 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.103133929 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.882479125 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.788890463 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.065688195 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.870999709 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 3.750422664 seconds)
    (115/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.084345583 seconds)
    (116/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.202425316 seconds)
    (117/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.182226319 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 4.764954187 seconds)
    (119/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.718519902 seconds)
    (120/309) benchmarking ("sort", Float32, false)...
    done (took 5.654593048 seconds)
    (121/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.038321877 seconds)
    (122/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.317253675 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.866524345 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.958596297 seconds)
    (125/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.892485274 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.163032683 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.86615904 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.566948891 seconds)
    (129/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.143005063 seconds)
    (130/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.265002866 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.920426328 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.029893383 seconds)
    (133/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.260918794 seconds)
    (134/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185433411 seconds)
    (135/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.638404283 seconds)
    (136/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.270220774 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.000280412 seconds)
    (138/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.013775086 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.864834089 seconds)
    (140/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.008571089 seconds)
    (141/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.33865727 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.967245558 seconds)
    (143/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.226419818 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.006418612 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.864860565 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.145082133 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.0474785 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.869182735 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.263099695 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.111398407 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.097547644 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.031906698 seconds)
    (153/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.383709936 seconds)
    (154/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.869798371 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.647719153 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.892960346 seconds)
    (157/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.206148285 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.946828459 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.073164158 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.189206807 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.192001567 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.893935311 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.355453593 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.869779019 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.265463425 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.983434535 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.952995691 seconds)
    (168/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.898439542 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.126369992 seconds)
    (170/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.159691248 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.139216685 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.86859798 seconds)
    (173/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.026723108 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.893899708 seconds)
    (175/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.036968797 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.889100427 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.120585496 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.197510895 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.501777449 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 6.975048727 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.883970907 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.86801186 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.00126163 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.87251609 seconds)
    (185/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.62595059 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.447199823 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.960268376 seconds)
    (188/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.503649455 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.540764839 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.019335962 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.111851274 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.059253327 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.150286864 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.268776072 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.995833382 seconds)
    (196/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.971938778 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.057612312 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.875841274 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.187482668 seconds)
    (200/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.952774746 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.87022609 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.872890038 seconds)
    (203/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.070096404 seconds)
    (204/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.071105462 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.892420713 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.956344226 seconds)
    (207/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.245367239 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.971793084 seconds)
    (209/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.999523793 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.157943013 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.936665561 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.959361188 seconds)
    (213/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.957780477 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.20327202 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.813339935 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.962717668 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.844122653 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.367123025 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.109899295 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.873455051 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.040278128 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.155450022 seconds)
    (223/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.076144688 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.525406371 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.20680068 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.89415362 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.871502192 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.485606965 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.190491997 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.986609468 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.898534418 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.262521863 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.022036976 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.015946763 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.0003617 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.949232488 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.97463104 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.897915402 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.872875444 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.240535073 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.874155162 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.841027184 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.065188954 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.874230949 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.443810915 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 5.641917391 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.026597189 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.66341924 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.886634035 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.085425075 seconds)
    (251/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.325402343 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.633488544 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.076508456 seconds)
    (254/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.671372999 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.487622233 seconds)
    (256/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.431648502 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.196972009 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.880111847 seconds)
    (259/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.888016886 seconds)
    (260/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.628538735 seconds)
    (261/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.889983705 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.218042562 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.880588753 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.176750541 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.023484913 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.879173814 seconds)
    (267/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.402699894 seconds)
    (268/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.964431433 seconds)
    (269/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.567421088 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.889078181 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.131116248 seconds)
    (272/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.35812792 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.089106046 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.189609609 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.282036638 seconds)
    (276/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.008669358 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.872488137 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.875646962 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.22395888 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.882042147 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.781347445 seconds)
    (282/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403699484 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.622011902 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.405976903 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.958624977 seconds)
    (286/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.920608891 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.951131662 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.950988147 seconds)
    (289/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.985229882 seconds)
    (290/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.968751365 seconds)
    (291/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.375390766 seconds)
    (292/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.039244832 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.771203357 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.93382887 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.031705609 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.895313301 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.269826499 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.907426187 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.69394279 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.882123527 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.270210113 seconds)
    (302/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.901744192 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.067665706 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.87996057 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 4.283290789 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.660479747 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.20701747 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.510868335 seconds)
    (309/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.136742325 seconds)
  done (took 1012.712759116 seconds)
done (took 1014.560838611 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.899572072 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894610362 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.876760122 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.897458077 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.988067527 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.919843348 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.890434735 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.879587089 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.926081528 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.92667893 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.875238366 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.917216837 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.879801311 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.87746289 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.877550202 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894008412 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.184877153 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.910267167 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.895997824 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.887648952 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.895155817 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.875001135 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.926999294 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.918222047 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.882186398 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.882191326 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.879969722 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.899106548 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.990085107 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.881125403 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.882084479 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.889414343 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.184254293 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.905070989 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.875675989 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.896959098 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.890750185 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.890081653 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.883248748 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.910904042 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.330144707 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.884076569 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.87866678 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.879088943 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.877540184 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.884829292 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.878375985 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.886852685 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895260574 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894832518 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.322939756 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.900506936 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.881832347 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.879755492 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.892222177 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.879014986 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.882160117 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895292699 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90030791 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896218667 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.172380907 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.916978594 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.882703461 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.897056372 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.889451885 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.358535805 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.884865711 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.885886267 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.330936167 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.892674017 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.359640187 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.896081863 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.881820871 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.89586752 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.91233669 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.185257067 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.908345428 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.87871283 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.889085632 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.877748866 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.891262812 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895746811 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.88462444 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.879964203 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900770692 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.923417484 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.893519387 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.881187124 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89135907 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.901666553 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.890319832 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.8928626 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.883886588 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.878524174 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.894048897 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.885188462 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.88405083 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.884243826 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.886122412 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.894553168 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.328552222 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904421054 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.878372165 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.878034891 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.880850626 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.896850299 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.327517111 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.888499557 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.904187185 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.930608218 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.883332906 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.174710595 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.914636829 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899039686 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.894128274 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.885348618 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.880639832 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.175616227 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.354510756 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.904224464 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.88286965 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.880818034 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90059351 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.88393749 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.880442818 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.188883612 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.913574497 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899425895 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.00465302 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.895480687 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.916791953 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.880292301 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.886567264 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.928022879 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899493181 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.916356226 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.8866893 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899956474 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.90109433 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.880198227 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.894400648 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.895801111 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.882736326 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.892290031 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.881290216 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.928356083 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900340762 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898517652 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.904272514 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.005191996 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.881417886 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.17785621 seconds)
done (took 295.839021084 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.962595781 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.884088818 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.002333247 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.883670804 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.972098476 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.958104958 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884843307 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.884897938 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.884510811 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.38332741 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.885569584 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.890101825 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.882422735 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.885540632 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.953396305 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.884395591 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.885875891 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.329176592 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.888380401 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.964593119 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.885119294 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.885652477 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.884587896 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.40216028 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.882723322 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.884193796 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.966462927 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.884943448 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.333507948 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.885369735 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.884143905 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.349068199 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.964511299 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.912206037 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.892845868 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.893811346 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.974849439 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.895592336 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.951057412 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.952301329 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.007235543 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.91894853 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.885323536 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.889290151 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.888209009 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.886869411 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.888833977 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.917822728 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.884812299 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.890936022 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.329244795 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.893198971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.89100626 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.887856605 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.886248819 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.913524125 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.886877409 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.888284912 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.966065898 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.891309228 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.953549412 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.388819916 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.385970006 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.889285539 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.887031598 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.887163558 seconds)
  done (took 186.412316694 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.950791291 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.960618193 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.951658009 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.889605771 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.938439359 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.954787409 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.890899408 seconds)
  done (took 15.351691969 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.893100984 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.888023018 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.935619059 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.934784049 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.886589834 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.067398155 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.898052018 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.894185794 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.914690717 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.886286675 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.552664982 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.943082677 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.898050363 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.885320655 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.901192346 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.944194993 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.889930223 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.887721274 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.002696009 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.03916873 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.894085268 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.892773304 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.914507023 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.899614723 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.888192271 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.892069404 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.888679649 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.895032613 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887699226 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.8877368 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.889525062 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.939868967 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.887977634 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.889123268 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887500467 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.888401189 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.887955034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887626709 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.891595535 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.886396931 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.890655061 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.88784412 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.888350267 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.888989581 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.887952766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.911508125 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.89064406 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.888746207 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.887801044 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.890125396 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.915220832 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.894066397 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.889189511 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.894091021 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.931980735 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.896046429 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.896632683 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.888491931 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.889334028 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.889413299 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.889786232 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.036936148 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941520438 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.889200243 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.938788225 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.043069866 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.889072539 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.890938013 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.888933497 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.978030378 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.888895966 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.938208826 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.890791367 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.002541695 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.890222588 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.068168422 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.911583973 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.899347371 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.892742461 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.88799291 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.900333091 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.889640273 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.892917031 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.896886663 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.894604007 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893715477 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.890030811 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.891234646 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.897994335 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.891349563 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.939691751 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.890063789 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.891156069 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.0301452 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.890105599 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.006447638 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.918199808 seconds)
  done (took 207.894992401 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.898128351 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.898796074 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.892580937 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.908307528 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.89229989 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.893291664 seconds)
  done (took 13.201266776 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.893484012 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.89699941 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.891043841 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.892140576 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.890772183 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.89293698 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.896010794 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894725799 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.901806421 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.89535513 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.895250472 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.896331206 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.897223777 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.895079928 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.895065797 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.895041703 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.895133571 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.894615151 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.89382963 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895223031 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.099857668 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.895283865 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894892561 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.896561505 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.900455468 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.894791577 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.907819073 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.894760657 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.894586121 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.902947296 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.89951758 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.896256658 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.89669614 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.902140479 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.899407861 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.896398034 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898927875 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.897729873 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.89715187 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.89575819 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.898285455 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.89647159 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.894578604 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.898125917 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.897800876 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.900819751 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.901747192 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.908888986 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.896549034 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.898528973 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.899197801 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.896151885 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.897777209 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.899346861 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.899858694 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903070429 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.903489157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.897179787 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.897931723 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.899217807 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.901434747 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.89771545 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.899406754 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.901022679 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.905093386 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.898445236 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.8991499 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.902182805 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897768799 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.897019998 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.900226485 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.897121217 seconds)
  done (took 139.663219407 seconds)
done (took 564.354727215 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.846096305 seconds)
  done (took 9.671470777 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.996857592 seconds)
  done (took 8.824696022 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.612155515 seconds)
  done (took 10.437095762 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.918073677 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.929900561 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.904782347 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.902920508 seconds)
  done (took 29.489496388 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.24977736 seconds)
  done (took 9.072618289 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.907119477 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.909943522 seconds)
  done (took 15.714234402 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.034751032 seconds)
  done (took 8.858492006 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.238189364 seconds)
  done (took 9.076025867 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.912814859 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.920799573 seconds)
  done (took 15.678916993 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.897289605 seconds)
  done (took 8.719340209 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.151877852 seconds)
  done (took 10.055792945 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.904587417 seconds)
  done (took 8.771069367 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.955379329 seconds)
  done (took 8.777743848 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.930730001 seconds)
  done (took 8.753093061 seconds)
done (took 163.725405895 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.903589085 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.895573071 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.89418223 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.895371122 seconds)
  done (took 29.410958833 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.932256884 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.931191147 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.939229776 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.930885865 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.921836432 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.921631577 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.931642512 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.931574014 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.922292151 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.93144492 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.930871855 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.928745149 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.931599213 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.940147514 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.941278057 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.930844293 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.930891684 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.93234633 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.921712386 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.939376456 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.928875497 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.930874581 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.897463441 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.896996931 seconds)
  done (took 48.101577271 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.088306393 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.968435072 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.051923791 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.948808973 seconds)
  done (took 9.880846355 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.897096512 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.962447545 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.948889063 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.944773814 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.948620361 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.001731383 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.950787883 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.035736679 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.02579945 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.02511954 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.90679141 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.920338942 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.922855083 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.945408613 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.002883983 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.898571693 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.897592191 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.013640956 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.960615676 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.102279084 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.900184327 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.952898443 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.949017453 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.951031548 seconds)
  done (took 48.889547412 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.899237079 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.907138929 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.90546738 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.899008419 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.900302332 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.900636209 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.907206543 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.90123132 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.92036303 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.901512011 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.89998109 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.900266821 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.907334094 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.90024542 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.89949753 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.914437161 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.916599016 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.899716309 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.904220171 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.90690063 seconds)
  done (took 39.916568899 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.898315421 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.745060624 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.244771209 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.151331269 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.900286719 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.900319969 seconds)
  done (took 31.665662456 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.912747543 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.906457321 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.900905316 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.956719125 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.04329042 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.908779458 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.901672535 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.911738452 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.945920931 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.966299424 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.920976493 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.928477896 seconds)
  done (took 25.031107961 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.90010781 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.900593368 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.901060978 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.911470089 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.909590993 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.907783462 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.907586065 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.898730277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.911367716 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.918355919 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.906654729 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.91046022 seconds)
  done (took 44.715801474 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.604976888 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974316792 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899645843 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.772643672 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358401828 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453871602 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.792911247 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.608670312 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368904438 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.826419554 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103300315 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.899272591 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984051124 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.900832193 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171340842 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.283606527 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094373485 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144373985 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.64560069 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.935318108 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.103532396 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122562317 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.19212505 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900870511 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902573014 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.015471384 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416823356 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.648891219 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.935230705 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.3157603 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146968062 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851927702 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956767016 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.908344043 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.912760325 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903819442 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908099861 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173266709 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.013243149 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034805435 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975706773 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150715056 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90691639 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321134715 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.606167525 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.209604221 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.01653341 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901149417 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904604417 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901690193 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828031058 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985528656 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.904082379 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90751292 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.602302868 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901499226 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97669667 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.904657728 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107187197 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.709933715 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589348922 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.907772158 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905384712 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453664042 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.007502129 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.017565909 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620375623 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28377682 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320595106 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.001979279 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.904913063 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9037644 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315516943 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87055587 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.674065359 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943776649 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040124003 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.922516051 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546553511 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202092017 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.34831494 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467215289 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825054091 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188006156 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.696781243 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897460921 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124818298 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.734893931 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831497239 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128258652 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941518261 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909680071 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.168457036 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628849492 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016897734 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.918643682 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339103185 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924169616 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911873291 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907258663 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11899092 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38906249 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938814416 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027385972 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924870925 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991133637 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834984892 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.918376612 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.908649965 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.810542392 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912619528 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907439219 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.95536228 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.663687246 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951016566 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.846533877 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911860281 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.013531386 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951147936 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857370422 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164748467 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.213501072 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.577386646 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941905819 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.043879757 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.306350992 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136406165 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917206382 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121736458 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447937544 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.3424089 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956142704 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19618266 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.968939466 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200062354 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335905661 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984872244 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.701997302 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.710192768 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.130807262 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923060901 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.909526305 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911289619 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914930854 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844977447 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.556461046 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.301517551 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.078092964 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123009308 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.319498256 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.899878764 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.908421753 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217755556 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046087551 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.884903582 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.566487141 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.403273749 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.731376846 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.936656366 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129331657 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.169810269 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.874097967 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923040385 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986429089 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926547771 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.922914547 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.312685918 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275302418 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.912315112 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.912194693 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.859263752 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91769008 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.912638588 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444684485 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881353898 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917841863 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.922292158 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.784919463 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985318463 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913177799 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.915020495 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.449370076 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.415790068 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.919465242 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.574260773 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.916882623 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134526705 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18297065 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.312315802 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041163906 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.610761812 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.352126608 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.024835653 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.611025523 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837076794 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912106411 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.849525164 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915331784 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914596384 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917556919 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.09874398 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189070035 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214610764 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.37343356 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978303033 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114440881 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.66287391 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86611507 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914647213 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917596933 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.914541238 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912473432 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.423957346 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.210511548 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026180113 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941836939 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91778994 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041010441 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.923699929 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838653963 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913330451 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914759443 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410190457 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.944364694 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.860168245 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.250173672 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.827875034 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031542544 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959976036 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.923463391 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918742858 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.6394568 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.952929797 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839268217 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456601217 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952429583 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.698704126 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402485348 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473431711 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214903078 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23200343 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.243692455 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.984007192 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.128270144 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998497082 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969276201 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.002386627 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851759129 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.840239413 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.572009487 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249494101 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181773633 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922818446 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131211179 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642831944 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143179387 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944564033 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.845181224 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226965171 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893283249 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931731664 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.333212215 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026474711 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998058068 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919124616 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.864734844 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.257040782 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958411342 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.617130469 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929826029 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.267187668 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418835907 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.988326768 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.322778279 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123997285 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920348025 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270534968 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.192496549 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956615201 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.921332107 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.90571717 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.131894916 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49712584 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.779906854 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922355367 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.146748565 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214753586 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.820008734 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.918622519 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.147118005 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179221642 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916636429 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.301470171 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28892833 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.021483791 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975949777 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144490193 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.672222757 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224544504 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.472109587 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402416678 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925192908 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843920788 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.617412973 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.120152356 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921091513 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88198472 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137193482 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154475903 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.599536863 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138026215 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.1600087 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.92950785 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18864417 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991521366 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.015149709 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.262176052 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.358232201 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.166810445 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144855057 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459851772 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136185456 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382255843 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.085275245 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.921078896 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12376653 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137496296 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.134881878 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.32843248 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091573155 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.629898244 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.924609005 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.126371285 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223157506 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97840743 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.335734709 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093194897 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.004655801 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925689095 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983950843 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924643373 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928097935 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.319682873 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.449901842 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.934244228 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997126953 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.048284964 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.427082303 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.923134799 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.924413658 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191641163 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275385461 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257196828 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905769028 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921781221 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925029649 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048697592 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.848292892 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925892552 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192267925 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.924515365 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40221711 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.073148195 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938113868 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.270185125 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311036298 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.661114633 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.887268622 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926879049 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147198646 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235623068 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.241536008 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039326382 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193246945 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.264145113 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.956806638 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.3263201 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165781639 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925715577 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.795308332 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925331718 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051617912 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.118698447 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197820825 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.430787606 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650333686 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188891568 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.770244092 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92576851 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.710575564 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193513548 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.194843323 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976651995 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987321298 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92735763 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429209966 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.644704065 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055999626 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.916353148 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850079584 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.928508803 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.255712993 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.165422909 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.632674633 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92699201 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200610602 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225629554 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1963828 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.975650748 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.840542705 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141006567 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92839267 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.932070204 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.186037241 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148250016 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173989454 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931050322 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930493635 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.731916852 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852968617 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.928330928 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980737579 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154212041 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94483476 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.441018774 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.627172999 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212696945 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978091342 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930385668 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199201311 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.446857058 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.480543961 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93351514 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147585574 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.958276585 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227900567 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.929546403 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429785604 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233629813 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.928309219 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.53236798 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.176700499 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195714429 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860555375 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938166965 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141827215 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.812675712 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930152112 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.933586041 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439770053 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163790489 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.66527939 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484762266 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.932206159 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.933844957 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439354388 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964393824 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440921237 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960057683 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946535993 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.450310556 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.771915693 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.21909157 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.17194753 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.607431399 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.519536877 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.930808584 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.930018105 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933371403 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848866353 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282617455 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.118765087 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21745144 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967489417 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.614591142 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967259582 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.329079826 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048105359 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.163862395 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971010791 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451256653 seconds)
  done (took 1685.475525583 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95377776 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.989468148 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.949699214 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.970542368 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.93494109 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.952716849 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.012556201 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936817492 seconds)
  done (took 57.558795201 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.935644868 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.948808474 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.940094793 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.934979429 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.94337048 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.934038184 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.094517595 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.943600367 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.938437229 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.939411746 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.935796099 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.934318691 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.232543127 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.954823596 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.935310597 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.93464957 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.93448761 seconds)
  done (took 75.278513075 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.934739844 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.174379424 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.966707268 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.930355125 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.878693564 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.943052831 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.904950899 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.969498754 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.938721682 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.161778742 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.234206871 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.94860061 seconds)
  done (took 90.841819869 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.939552375 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.93305617 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.93196136 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.934607204 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.932337291 seconds)
  done (took 11.530832018 seconds)
done (took 2200.18795425 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.360481035 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.992420027 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.033597043 seconds)
  done (took 5.883611668 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.078501906 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.123580669 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.236897518 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.000721066 seconds)
  done (took 10.305310781 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.239273747 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.323637398 seconds)
  done (took 6.419057708 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.286188168 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.938380221 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.340388139 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.939175338 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.933840081 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.936919575 seconds)
  done (took 22.673461779 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.933000362 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.935216074 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.934077086 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.933720941 seconds)
  done (took 9.593695463 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.931987684 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.64372722 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.934713939 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.944249466 seconds)
  done (took 21.310902983 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.08142479 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.04785175 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.077658113 seconds)
  done (took 8.063294742 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.075194591 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.770448919 seconds)
  done (took 6.703043678 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.075680109 seconds)
  done (took 3.934059334 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.962005421 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.20727745 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.431922889 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.474163838 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.596723105 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.7223638 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.24094018 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.170184614 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.35499977 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.371562144 seconds)
  done (took 25.390805926 seconds)
done (took 136.057764754 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.28300759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.950183453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.17304615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.292840796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.177931188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.144881836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.157792803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.288580479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.967261699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.956489745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.297209008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.160643541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.098669889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.95000657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.104634423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952189603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.158848484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.291212151 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.978390639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.194690223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.163794267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.940604241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.143268923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.95342095 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.162077365 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.094855979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.486712014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955474608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.126284461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.494756008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.090617665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.335877862 seconds)
  done (took 170.385888473 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.93919803 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935563201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941351369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.938616314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.409531446 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.938698359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.935669058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.938848692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.389425179 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.370480595 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939718194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.40560982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.936900752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.938595937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939723395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.936420776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.562256871 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.940735699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.939373071 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.936521847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936881127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.23885009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.93627322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.242187002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.551847868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.939665881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.941436943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.942857999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.942053849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.939779525 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.937070846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.937683219 seconds)
  done (took 211.561943076 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.932487241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.939992661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.939894227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.94154342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.939252892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.942541776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.93957364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.941840862 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.7528224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.742322948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.942678677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.943518126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.942157447 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.940942388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.943149674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.940906474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.938620674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.94019004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.942495984 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.937601691 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.941139759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.604477824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.942896426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.610555924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.939801165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.937036218 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9421294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.942536304 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.938072683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.943462876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.941747375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.941547527 seconds)
  done (took 222.915968796 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.181909933 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.944803243 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.94105051 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.934149046 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.943335991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.944957358 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.919176451 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.190783755 seconds)
  done (took 19.865810446 seconds)
done (took 626.603588171 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.333788061 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.166183282 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.120923348 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.964991777 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.212840526 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.01093634 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.960325503 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.02655092 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.795858784 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.03627531 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.616261217 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.981909276 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.702808415 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.987937469 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.086515878 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.021647303 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.543046282 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.6377499 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.104414067 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.037627229 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.145186133 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.880833339 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.040256499 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.821999233 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.628572268 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.921917532 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.981413421 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.547731129 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.97659572 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.125974258 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.666799785 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.260629638 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.977888179 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.963390245 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.012609485 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.994764294 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.188004444 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.973885606 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.090251942 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.671457071 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.032673644 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.704737287 seconds)
  done (took 105.820525213 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.952836844 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.951420419 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.951299266 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.948146306 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.959936772 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.952572439 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.9502352 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.952605665 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.95239603 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.9476887 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.952202023 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.957663893 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.953609906 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.961446069 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.953451482 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.952519452 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.950891767 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.961230144 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.950744444 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.953346638 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.950043334 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.95319506 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.950466863 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.953695447 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.953584734 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.953854082 seconds)
  done (took 52.668823446 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.9481502 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.120861733 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.190916771 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.970519899 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.944757216 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.953098444 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.967841846 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.952276191 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.955149776 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.952640012 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.034465557 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.954750981 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.967305944 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.194462982 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.964402464 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.950231389 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.94895248 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.951655624 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.129567719 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965950858 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.969060118 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.951765058 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.968862344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.963765411 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.949383394 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949353764 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.950602187 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.44630692 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.959092134 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.041850399 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.994432928 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.971061952 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.385964884 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.201446635 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.002943485 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.958834196 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.948546404 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.051665531 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.957278869 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.950623378 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.967939619 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.954878582 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.195001677 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.491515572 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.96428398 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.948930602 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.459712624 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.060593811 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.991965322 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959422329 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.201322816 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.969282897 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.953271851 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.952715024 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.986704587 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.962055715 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.953713896 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.321164457 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.963968223 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.971008622 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.955766146 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.951940164 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.137571377 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.962643093 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.123806515 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.963471054 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.960398848 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.955001452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.199802056 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.968370221 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.510856955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.965063037 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.952903075 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.042079907 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.129654275 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.480866162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.963112273 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136818572 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.404785456 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.976191592 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.961017626 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.438592776 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.981312744 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.960581724 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.955613514 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.956804692 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.953829844 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.995583235 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.96820574 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.405759504 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.497541429 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.337310818 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.976748279 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.964479118 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.955108239 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.322543694 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.958293976 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.954126975 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.188311343 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.517808346 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.967908588 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.961622331 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.484066892 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.968335226 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.972316064 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.962773411 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.207994657 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.973365427 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.994886718 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.955955904 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.963674625 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.957182597 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.973054305 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.963102551 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.953615239 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.472203717 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.061094519 seconds)
  done (took 242.480073767 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.953959102 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.95447335 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.955127574 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.954880196 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.953495737 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.956438051 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.955560188 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.95294938 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.954498172 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.955511404 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.955088854 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.958035551 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.956193498 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.957214614 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.009952719 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.956492273 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.564496327 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.955531225 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.951541322 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.952474137 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.594823256 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.956294989 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.954870197 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.95552083 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.957379315 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.956107972 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.956022921 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.00735648 seconds)
  done (took 169.983266074 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.957954569 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.063674196 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.972748332 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.986229258 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.963195046 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.955622989 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.052464388 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.974462968 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.960922868 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.958784511 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.954463539 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.014928292 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.96751326 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.053430059 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.986844449 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.059230107 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.057375676 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.961044406 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.958740765 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.955666987 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.986981976 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.969652828 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.014841501 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076017132 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.970161167 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066561651 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.973705773 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.956636033 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.956873151 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.068554753 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.973065949 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.016918303 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.984669131 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.972211906 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.07236655 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.067311562 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.057648688 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.059164661 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.962459761 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.956064391 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.957643005 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.964258798 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.069525604 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.97324035 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.961247247 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.076107895 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.974745827 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.959922849 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.960437175 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.962288384 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.973829986 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.975555936 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019020442 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.081205043 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.989934605 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.979487224 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.056191418 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.087410764 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.959842999 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.055834566 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.966914987 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.070191305 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.976198368 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.963903635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.96136029 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.964201795 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.989194162 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.062673826 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.061179366 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.964148502 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.05459572 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.993215312 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.967696624 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.961931221 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.962280961 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.071958817 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.071321587 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.992970879 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.996541465 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.987426069 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.971446485 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.961318491 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.963695783 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.975542952 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.9660002 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.072891161 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.072160735 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.966113312 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.962462312 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.961959054 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.961749739 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.982356595 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.079206977 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.99227699 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.067059247 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.023246756 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.029524779 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.972471093 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.973571392 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.966692134 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.021578185 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.972798664 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.974983413 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.27194353 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.020691238 seconds)
  done (took 212.124194334 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.332837997 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.006127038 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.017310869 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.271938347 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.346939684 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.896208796 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.007500515 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.008885225 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.041014349 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.228913764 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.074146276 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.02636752 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.994592635 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.981685963 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.005419989 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.041849255 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.016701418 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.340264693 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.220764679 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.469286155 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.999199413 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.286476748 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.343017686 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.607246487 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.055645291 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.41000771 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.6037334 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.172310915 seconds)
  done (took 65.696503535 seconds)
done (took 850.643546332 seconds)
SAVING RESULT...
DONE!
