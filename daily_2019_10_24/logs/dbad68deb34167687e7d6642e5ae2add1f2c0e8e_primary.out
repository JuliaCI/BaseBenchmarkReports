cset: moving following pidspec: 30655
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.294027303 seconds)
loading group "string"... done (took 0.600404493 seconds)
loading group "linalg"... done (took 7.053238621 seconds)
loading group "parallel"... done (took 0.162688666 seconds)
loading group "find"... done (took 1.0906968 seconds)
loading group "tuple"... done (took 1.822574293 seconds)
loading group "dates"... done (took 1.213736782 seconds)
loading group "micro"... done (took 0.217308772 seconds)
loading group "io"... done (took 0.917456967 seconds)
loading group "scalar"... done (took 36.809557563 seconds)
loading group "sparse"... done (took 11.152511074 seconds)
loading group "broadcast"... done (took 0.908904277 seconds)
loading group "union"... done (took 11.82217598 seconds)
loading group "simd"... done (took 4.122398152 seconds)
loading group "random"... done (took 8.488615778 seconds)
loading group "problem"... done (took 1.85506781 seconds)
loading group "array"... done (took 19.771118844 seconds)
loading group "misc"... done (took 1.627285381 seconds)
loading group "sort"... done (took 3.078115569 seconds)
loading group "collection"... done (took 16.421433614 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.488916108 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12397988 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115410829 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119058654 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145997928 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115202537 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123048656 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084057466 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.786634376 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148597788 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118996001 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417800916 seconds)
done (took 5.072659756 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17329531 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083448354 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081610649 seconds)
  done (took 1.290908146 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065078745 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12157825 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066849108 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067178689 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066905398 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06643197 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066667504 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066393645 seconds)
  done (took 1.648781909 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072698773 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069388671 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069332094 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06848279 seconds)
  done (took 1.403964359 seconds)
done (took 5.717468268 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.769892315 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202552337 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182503805 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.402743017 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129818459 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154098658 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.634085353 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.28871041 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185150572 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081907233 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105055038 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318326024 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107228417 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635108791 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074768833 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090817286 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137058764 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416063913 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068131543 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082230208 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089189048 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128373399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085670433 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074675779 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143675047 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068026639 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134539103 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080231799 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067262561 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208636897 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176652249 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652926051 seconds)
  done (took 10.136839733 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096199302 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097840749 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068407661 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137112992 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099564376 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069615184 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071239729 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067329416 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087161597 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128913297 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088724862 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102020673 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065642308 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069263555 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08485791 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204347485 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080480233 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081910278 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070709361 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075320136 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119561129 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078427396 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078386875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077541074 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129016658 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179804663 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09601147 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09748524 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067366955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081420524 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115199564 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125849602 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065502512 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066558022 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125199335 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094816084 seconds)
  done (took 4.604643535 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.295817478 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141650324 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090527543 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133013759 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110063355 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06489415 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107617924 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065643527 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08080868 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201964447 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.352766166 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.58460813 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111338783 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104228711 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068319048 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068436778 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067188514 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.367058472 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109993853 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104695423 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08267393 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070366166 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068956482 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342213622 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068491658 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064317546 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068343123 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058495928 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125090171 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068802265 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.931105111 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124834321 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066238614 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100196256 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165830402 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087123786 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272048625 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068481891 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065111305 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15103643 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069821142 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066291915 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083904769 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103631929 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112896825 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066079342 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067386652 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162114246 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065239605 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064671891 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078628621 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.002462653 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154612189 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078705916 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065037521 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246935978 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085793044 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069871541 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065772106 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184714842 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134149519 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067963535 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06688481 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068206635 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069484218 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349900012 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066304537 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.807815368 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070689643 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079781126 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071183651 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069818925 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064753764 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075681546 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072828689 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08537459 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066504761 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075759561 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066263521 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066811348 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067005526 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084236917 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.357804373 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066642678 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068163709 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064631408 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086120108 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096678784 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066620581 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065771255 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100073356 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.169961366 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066943599 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106040627 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06698827 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08410041 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064035916 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069239552 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113007658 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069694921 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.073631162 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072777803 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098307244 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070419648 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099171354 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081732571 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068670107 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396284223 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065368565 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06508281 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068317276 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065613226 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067430197 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066782378 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079510671 seconds)
  done (took 21.048199084 seconds)
done (took 38.207015742 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235047937 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07602859 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075881395 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075795414 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07566133 seconds)
  done (took 1.756238798 seconds)
done (took 2.956489462 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120127663 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098953896 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064611202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096358352 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064515366 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100187094 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099285059 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080688815 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099071506 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064589865 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095764564 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064091119 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06446473 seconds)
  done (took 2.331707354 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083032698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083350576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070270353 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082638602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063990427 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082480152 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080776255 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088429646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080940942 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072404996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063872317 seconds)
  done (took 2.046173793 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082584077 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083888868 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069937123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081885896 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066757087 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081540933 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080976165 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085891331 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081368527 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073860759 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063946795 seconds)
  done (took 2.040846881 seconds)
done (took 7.605448652 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077294232 seconds)
  done (took 1.258075695 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590863813 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.081794202 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081672902 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112789447 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183849064 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120153584 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280338299 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086891653 seconds)
  done (took 8.902393307 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102248401 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070948369 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071936113 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068375486 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072472213 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069814283 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072641524 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072263576 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068528013 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070500285 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069655141 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07192231 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069218603 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068734076 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071509047 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068698705 seconds)
  done (took 2.415315926 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092299178 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090451708 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074026857 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074752156 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072426402 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072471617 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074799916 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073751187 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071003636 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073106792 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075943292 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075676471 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073723344 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067305238 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07631491 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078300201 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07357824 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076540191 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077404688 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077253906 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076581873 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064554472 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071309513 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07445097 seconds)
  done (took 3.099163873 seconds)
done (took 16.863111986 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1145141 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072654477 seconds)
  done (took 1.37609407 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082047187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084446813 seconds)
  done (took 1.361842255 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08433528 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065969495 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094103617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079406298 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066571263 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066391359 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090371673 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066268042 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066025798 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066366396 seconds)
  done (took 1.94176118 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069040888 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079417541 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071970792 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081957151 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074795227 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064770917 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073438543 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068499512 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079117921 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063423837 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072447926 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084302944 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072065471 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084807133 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072802794 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069280172 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071690687 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067936509 seconds)
  done (took 2.520368463 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066354401 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067273178 seconds)
  done (took 1.335702865 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068159508 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064725572 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06727192 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066817707 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064146881 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063022484 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063782625 seconds)
  done (took 1.65635621 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381766244 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111189616 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300233479 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070458735 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082203852 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247893615 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065691215 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070371058 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07019957 seconds)
  done (took 2.641367404 seconds)
done (took 14.035158376 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078454973 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085742903 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096017848 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362871362 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092106553 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066021829 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114072755 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.1900907 seconds)
done (took 2.295521835 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21596286 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612867426 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.388290758 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19684344 seconds)
  done (took 2.403036531 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327645656 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086939009 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059118862 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066305874 seconds)
  done (took 1.751749186 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066232726 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069369456 seconds)
  done (took 1.344806175 seconds)
done (took 6.924832396 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066035284 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08491138 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066592463 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063462675 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065911671 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062936387 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063397513 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065879444 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064473601 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067650227 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.073855297 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067625136 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068223367 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06800079 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065082116 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065717093 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067309109 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065653683 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065231436 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065506345 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067245733 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067093338 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064766535 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064723117 seconds)
  done (took 2.850877968 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083806332 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066570042 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071509691 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071162902 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070273155 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071249215 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07459498 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065980668 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072371166 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070201165 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071775495 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071872985 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069875174 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072040175 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07024197 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072101772 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073173733 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06858035 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069758011 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07227651 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073368281 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066601316 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071003648 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072651599 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071695881 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073919226 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070463398 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068171072 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073445293 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072247116 seconds)
  done (took 3.361637472 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069993646 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063546555 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064392415 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070129799 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063842687 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064913877 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063354846 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063940659 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064581187 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063601855 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064737935 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063307075 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06342365 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065104072 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065274015 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067557521 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080025959 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065848655 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065568192 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065486056 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067621054 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063708001 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06404592 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063573442 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063345842 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063667819 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063825466 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063318414 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064541433 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.177500663 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067815715 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067726892 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064547354 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071779996 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068340188 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065051492 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069257905 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064822338 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065770855 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064901102 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064117451 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064514736 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064895747 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072024558 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065470598 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066553232 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064750412 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066084094 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065232222 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067850676 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064698638 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064543129 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067143387 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066630597 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068415575 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063185576 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063978972 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062765682 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064546846 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063000826 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062915313 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06278294 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065620339 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063867682 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078214792 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070358467 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063404955 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06566732 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064461648 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065887065 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065533359 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076810753 seconds)
  done (took 6.083050514 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091460006 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087721846 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065531801 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065191379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062303339 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064367517 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067776519 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064418008 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065760106 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069928578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064160516 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065083577 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065434591 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076583687 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064148148 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065519802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07007956 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062383625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06403485 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067646199 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064402232 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067842772 seconds)
  done (took 2.734225577 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154688508 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070613066 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106140797 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073686125 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067937362 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073456462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070630717 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070172436 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070070976 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068590161 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068411323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070502242 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067723297 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068169036 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068222769 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06884945 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069964363 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068619556 seconds)
  done (took 2.603730649 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07754323 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067210487 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086072618 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06629523 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065904361 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068572033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070853719 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074442632 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068410837 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065764345 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074207187 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068463443 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068258725 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066431522 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068093157 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066143089 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068942675 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066452842 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074234755 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070669023 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071621636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07419617 seconds)
  done (took 2.777132146 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079577457 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06835004 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082829762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069494744 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062183728 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064399597 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070431967 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06616878 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070425628 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067791849 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066340351 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064571679 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06926584 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066224206 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069284176 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066382077 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067970156 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065651777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067908072 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061669659 seconds)
  done (took 2.597170471 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087655741 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067742738 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067828653 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076733444 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067450056 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067526653 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075395612 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06701946 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067396066 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086875482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06712385 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067454853 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075353957 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072503879 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067152991 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075771336 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07514602 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074862014 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067091042 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066949754 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088900828 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068048915 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076610575 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068682709 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068804689 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068889081 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068998672 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073599144 seconds)
  done (took 3.255111888 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066117854 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065304004 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063295797 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063584916 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063613672 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063503744 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063850601 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063661663 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066280173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063405531 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066087322 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065879215 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066072687 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06572539 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065741827 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066146139 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06597947 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063324218 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064667446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063294238 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066243575 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065616262 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065564017 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063817406 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064077832 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066826415 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06496163 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065056527 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067553186 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06498569 seconds)
  done (took 3.184739701 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075713549 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073408254 seconds)
  done (took 1.385262132 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063376707 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08061347 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063153287 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070252671 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070065118 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066577433 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073929875 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070072339 seconds)
  done (took 1.790057211 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081626175 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077167405 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067415122 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080597851 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076453096 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082851647 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131897753 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066988936 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073061995 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064349805 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079860352 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065371782 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071992111 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066145627 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072384333 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072490195 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064262038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072690153 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069128173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065069212 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06737496 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074963937 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068591546 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061693229 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067399273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087932425 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077476001 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066297415 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069112362 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07339213 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07190845 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060241924 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066016762 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066594107 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064388279 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075592513 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081139342 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069119006 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074721418 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067124902 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077114908 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061036291 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070653301 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07255985 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076251107 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066427272 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067445052 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061346626 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063686522 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068756517 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061636883 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066148462 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061146338 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075749521 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06963712 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076888682 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065040659 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067560309 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069180757 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069566341 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072806125 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068374635 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068996736 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065796243 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076312388 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070807007 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075000662 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061796231 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06124383 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064726507 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076015395 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088974936 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072505629 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067075762 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067738878 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06456297 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069882534 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067630861 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072349886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07348392 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066651493 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07248181 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073841348 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066688534 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069421785 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075171877 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065219136 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070203991 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064771519 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08308803 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065277801 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065024464 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064716841 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077085934 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069934729 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066076527 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064621276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073634348 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060651728 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066487856 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065691908 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065718249 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075142039 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069746021 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07009238 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074127439 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072247681 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065100164 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067465063 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062524334 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065950431 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064270123 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071663533 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059277214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067747095 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065680017 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065546123 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198661885 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066499788 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067608621 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075292599 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072466891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065783565 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063414812 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069878696 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066917906 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070138791 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075506811 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065677486 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062356079 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062454995 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070470415 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066696037 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070933873 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072107317 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069785706 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061468014 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064883271 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072464926 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075685577 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06790824 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068161944 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073166446 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068043167 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066581519 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073202486 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069063656 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06584583 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07258681 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067365683 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063024552 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069809327 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06992172 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06586196 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070760133 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069751538 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069329164 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067730025 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066206832 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074694816 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068258169 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066092471 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067655108 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065829989 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077114488 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069045304 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061615906 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063961151 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076062992 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064658972 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06667682 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065994793 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069400115 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067268538 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066041871 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066281031 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069168597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076721141 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071088802 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068004462 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072273263 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07797457 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065895551 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069453288 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066120164 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067892373 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067488539 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075129013 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07153814 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070742208 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069127678 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063048565 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072050755 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073821007 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065651881 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064137172 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066069725 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07098823 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071831497 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071012461 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067297242 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064703066 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067578558 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070090287 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069907378 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066561539 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065903525 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073541572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065092838 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07397715 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067498078 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076669902 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069719563 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061736631 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069719113 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064813872 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072517922 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062181138 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064827924 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065787762 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067249135 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064611701 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067705377 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060014299 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072543681 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072691307 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065621004 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065131263 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064910057 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072563676 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066530993 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068851078 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068265159 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070840889 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075109841 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064303675 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068166001 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.202566021 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067636326 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062215365 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073800689 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065612539 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066241484 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066132006 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065069976 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070294998 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077210702 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073494395 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06126867 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069891851 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065755758 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066763279 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062558835 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071318946 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069979481 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0686062 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073805841 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067882148 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067933286 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070861149 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067024548 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068329051 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068305985 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070130824 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067913552 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069298209 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066917523 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070322341 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066151113 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065422423 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068741582 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067125862 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067228214 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072526865 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067321418 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067351989 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069355994 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068334311 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068127933 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068093598 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066121207 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070384561 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067981544 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067171275 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069982982 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062250933 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074509527 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067230637 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074557144 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067506745 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063657785 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074813043 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069727046 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072633145 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067917987 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068117878 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068491869 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066597592 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06950501 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074054157 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064552539 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07764711 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075147321 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067982978 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069789927 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067141496 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068461217 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065909427 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067409969 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067199735 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066783111 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066272953 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071720895 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069263197 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06710857 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068259034 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067407153 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067093737 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067718444 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061206657 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066064732 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066269287 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06652414 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076009748 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067105535 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066116848 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065139579 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067555392 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065377735 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063324294 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075159502 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075947188 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067365877 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073473547 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065818124 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067856787 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077132443 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060454858 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064631472 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064013978 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064195139 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073634301 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067892862 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077693211 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067069015 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065098901 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064468245 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068149837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065616417 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061575096 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065112285 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070674034 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066283652 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066637708 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066900107 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067667451 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066235955 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075121588 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06544661 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066809553 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065779209 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.193219622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066177257 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066409719 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070763746 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.0684255 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065214674 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065517613 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067572207 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069644895 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07037068 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068795268 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070823168 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079175503 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069007479 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072307663 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072908326 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063963467 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072235024 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069248007 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068920892 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067808139 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072680415 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070512675 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068086571 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076151622 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067044543 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068192996 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06800854 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064580124 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06695112 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066405467 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067826313 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066590408 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068405275 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074923138 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065059192 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070244857 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067168114 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067634279 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07404307 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067602682 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069545353 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074508658 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067577807 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069045491 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074856045 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071496888 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070509525 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068650362 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068726477 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072820838 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06671161 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073639659 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067308979 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06781244 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068896976 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065724401 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066232847 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066513947 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066062462 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072999806 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067842759 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066625636 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065965424 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064707938 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067792088 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070231714 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074446648 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069198385 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070243738 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063297556 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064293836 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067466791 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06456842 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068416572 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068748046 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072319113 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068440714 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066787818 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065379223 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075191551 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072090619 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070126261 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064386735 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070191108 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067235892 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068789093 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067777172 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066564798 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067738645 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070754853 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068374276 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066310592 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073731377 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07007344 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067634518 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067942615 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067503485 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066644467 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062369997 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067240545 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068460515 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07141712 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06865088 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066477836 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076708819 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063998703 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066482647 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069324875 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065530024 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070506577 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061151638 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06723894 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066101373 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066217382 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060460175 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065141082 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064405577 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069330418 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065651824 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062298417 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078081419 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076209739 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070211632 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066358843 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.197564265 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062429235 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062308015 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066772137 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068278744 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068896124 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077037257 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066110995 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066434904 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062628874 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066986509 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070171574 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0702091 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063990561 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062003819 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066482405 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07042441 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073505776 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066534629 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066794976 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070295704 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069011706 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065264707 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070065156 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063967036 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070545697 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079276871 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068330173 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067551039 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072905337 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0752202 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068021299 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062941236 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067783858 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070397215 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067673688 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068683288 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067873246 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081857324 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070121994 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0663347 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066352332 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069876486 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066740005 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07527944 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067539847 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06763252 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07181312 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06917373 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076616997 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069328029 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07482684 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070582701 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069911823 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065429603 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067352441 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066017566 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065644179 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067930249 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067762853 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072388089 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07549397 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066407663 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077475639 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075499922 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068658677 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063769918 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065929105 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066117588 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062535676 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067616154 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065102639 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064823876 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064612313 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065741035 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067391747 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072132583 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067420812 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067384849 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066506412 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060658258 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06862953 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069168551 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067218133 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063278947 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066397437 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066907921 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070231737 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069690313 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064148722 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067969841 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067829829 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067468673 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062214012 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073055005 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065895639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06831541 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066078 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0668025 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067916254 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070401458 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071715877 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067774136 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068768519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070258531 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068706931 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063868292 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063759111 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071062091 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063909576 seconds)
  done (took 42.769117932 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100682111 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063427806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061994793 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06252159 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074461906 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06317769 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06189177 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063154332 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063414277 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065644789 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062358995 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0628696 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07116861 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078103125 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074199262 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067100936 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062379071 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063322979 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06211279 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063630574 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071473761 seconds)
  done (took 2.754448327 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074476307 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070595696 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072381195 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076398693 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067850442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071075268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072955421 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071068565 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076536934 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067225795 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076693977 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071055779 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067172063 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067350054 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06748221 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071163455 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07647755 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067705758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070728756 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072931727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070976208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072911357 seconds)
  done (took 2.883311108 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066705904 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066263539 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068136204 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062104629 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065758659 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.070132542 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070114022 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063881474 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069693143 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065542129 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065432285 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065029567 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067856004 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061326002 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06614178 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063737439 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109233128 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069402376 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066437576 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066989191 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061511715 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06796766 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061465272 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06199186 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064770878 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07021413 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066630745 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063870738 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065890635 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065051125 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065884577 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063941394 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067453849 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06628354 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065137745 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064777036 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065713738 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065738625 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061630721 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064035074 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06670078 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062227187 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06607057 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067537444 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064184604 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06381072 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067386552 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065640706 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061145295 seconds)
  done (took 4.568294445 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080533903 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108772108 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067895976 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089014862 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08051926 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075737972 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070048311 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089190049 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063447364 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064431007 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081928234 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079925125 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066205141 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070547085 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072773361 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066363627 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067070402 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064812636 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070037109 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065581202 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070492003 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072905814 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080682717 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079331117 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069755696 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064657373 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065369425 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070328862 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079023741 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070594647 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070331175 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071307784 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080969127 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067711174 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064925792 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068005687 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081610076 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065626075 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068178993 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063699632 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067837915 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070062036 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071993777 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081887337 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066018179 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070996051 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065674155 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063152192 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078538837 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067733145 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073486645 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080205279 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069955095 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065875616 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070138123 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081077859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065765922 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064111123 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068673175 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078288739 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063724158 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069562417 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079480947 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068150772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074730588 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081934802 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071939375 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069763886 seconds)
  done (took 6.371445789 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074655708 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073143553 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081816347 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080998393 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072710252 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072745224 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072748595 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07251369 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072469915 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077508256 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072787388 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093422352 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067729588 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075732211 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07270986 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073227103 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073013533 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072863229 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072600181 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073071095 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072931717 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080500244 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072806928 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080558452 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098429819 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067577518 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071979839 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072312568 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080856262 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072444036 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079673913 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072478681 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072878596 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08113568 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079848368 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072186606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064873365 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072136447 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072372933 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072522887 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067595288 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080663814 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072186459 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067301285 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072359675 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071985433 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080217833 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079239984 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074787174 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077128183 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072175263 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080343521 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07218911 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072305786 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080035627 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105127291 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080054506 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080378232 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072547626 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08064559 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080289996 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086624763 seconds)
  done (took 6.051947303 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083724128 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075057428 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.0769776 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061512537 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064086555 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070513503 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064357277 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064205588 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075017758 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074658851 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077103681 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070124558 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073054469 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0772273 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070096389 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073090622 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070062969 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069983957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074600352 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070192033 seconds)
  done (took 2.773390083 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07480045 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082831798 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067153216 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072270662 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068808632 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071792815 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068506755 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068899677 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067079606 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068895925 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077194792 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076366916 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067041401 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071986937 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076474988 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07342856 seconds)
  done (took 2.482907395 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07531289 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072721034 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080787577 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067578031 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065510457 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063835122 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066154991 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063042188 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064554689 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081059011 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067403863 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068596652 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06594059 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065097451 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064612696 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069119474 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063111564 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063657208 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065956611 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078384145 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076770671 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064661696 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067375146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066444981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067920653 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073214448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06723249 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065420976 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064957627 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067891126 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068631969 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071690147 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065039396 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065953579 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066401018 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065248554 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067387043 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068259992 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070354875 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067088734 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064813152 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066395432 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066965872 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.0686163 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063553126 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066735448 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062753665 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068900427 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064525977 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066273674 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06563538 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069429291 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066565802 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07258158 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069148823 seconds)
  done (took 5.064863747 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07972805 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070328568 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061854823 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06459612 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069709815 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067752404 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069834312 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068011873 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067834889 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064175084 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068528784 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06916547 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067616501 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070262773 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068217599 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069695305 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062013055 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067832152 seconds)
  done (took 2.569270384 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070994889 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066315418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073188225 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066690928 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0658857 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068936567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062236884 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064444068 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064267138 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065952234 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06600413 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068356311 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064779169 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068418455 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066343443 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066140587 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068157271 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064428195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066004842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062205569 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06790218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064459478 seconds)
  done (took 2.797889627 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09256022 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081757703 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137557972 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078760872 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083503363 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071838535 seconds)
  done (took 1.883108855 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09081982 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079063923 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06674289 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088446197 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073920838 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067679971 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067554314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067802516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076393408 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076012394 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067842877 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076301116 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076566917 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075676307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073612653 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073467123 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067567929 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067771771 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066853059 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084478828 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067640324 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075845296 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0679285 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067062482 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067874162 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076029571 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076257698 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077020426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067703283 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076548398 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073300614 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06752149 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076371712 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076873311 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069800807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076420424 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06778032 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085170221 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073654932 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076159301 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069561671 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073730082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076382706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072521241 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076440727 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067958141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072598526 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067739832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068201473 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08675429 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073436526 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075480158 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073690302 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076319458 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076413778 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086192525 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07655183 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075534868 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07352664 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078863768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075593685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073382174 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075730329 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076231419 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073852352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075964137 seconds)
  done (took 6.238415111 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081766232 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086403075 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068471783 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076486844 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076573846 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068110312 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068366458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068077246 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068031452 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067443098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107727287 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068142367 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075992691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075957335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068208316 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068024127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067947988 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076230431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067558747 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086668073 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067954056 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075829518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075929283 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075568512 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076380592 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073547914 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068048036 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068058518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068022133 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067826014 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072953505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068094796 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076130408 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067464544 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076248452 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068076943 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067835744 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072584983 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067784725 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073462444 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076022326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08466541 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067999431 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067829492 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076609715 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067686641 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068130785 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067667081 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068371211 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067579809 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076648351 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077017902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076922132 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076104194 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068544284 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068555229 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068205815 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068227151 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06838135 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074470149 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076243583 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068129577 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08650898 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068331203 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067893238 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076434355 seconds)
  done (took 6.157433326 seconds)
done (took 129.194906646 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183763283 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166273481 seconds)
  done (took 1.685572001 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069357458 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098289095 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077528358 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129107994 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066721573 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100156872 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099725931 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07796483 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066305793 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067058559 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066624335 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068703165 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13139023 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066736293 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066270405 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069072824 seconds)
  done (took 2.669764333 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097316664 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158134228 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099156806 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064979869 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098091793 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073155483 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065022909 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075033927 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071273914 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065312136 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073245816 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070446258 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064963538 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070622956 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071228955 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072815465 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064893877 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073060236 seconds)
  done (took 2.77957575 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101426465 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091641837 seconds)
  done (took 1.544097361 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154093606 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10541191 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150721757 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346849854 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168365888 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231478272 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127285351 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127598546 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117344019 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12368425 seconds)
  done (took 2.999740083 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098675588 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153128685 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256894263 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116052381 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072454818 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095926888 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116610658 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077946016 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081163511 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080581984 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080774432 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076562329 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099863611 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073843865 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073542086 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076382137 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103175986 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07292363 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074475762 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077117154 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09930758 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066538591 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074124174 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072132552 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078066144 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078352638 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066854867 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067077601 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079606768 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076472248 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079002768 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096122631 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078005642 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108083635 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070514695 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108893313 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077013256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074158324 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074468712 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074706357 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079411686 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07947244 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072351526 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076620311 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065861803 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076644006 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065775989 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06595378 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078646629 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067233441 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078252135 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077229261 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107919846 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066903849 seconds)
  done (took 5.993411137 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101543862 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104731879 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072160773 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112527685 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10044351 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07255098 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102017868 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093654726 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103466867 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070652099 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068408474 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070371851 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083469393 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083741174 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11364246 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105286395 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073961417 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071403172 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104596707 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103379379 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069234464 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095536881 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090384568 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102421548 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067499139 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070856911 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068313337 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070631016 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077903693 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079265396 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07035979 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08162484 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085178199 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078789927 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067207349 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068406049 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06844345 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080341278 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079776137 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079404853 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078279023 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068081526 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068271359 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069987399 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071896203 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068021279 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079633184 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081682863 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079226059 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069806789 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070120566 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068208499 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069814747 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080971907 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078634234 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081856911 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080825221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068205965 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068499937 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072776345 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081527725 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079931475 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08021906 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069850554 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079475121 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068901231 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081217805 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084757943 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06862041 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07063921 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068817261 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069770225 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069655179 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078469549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078462833 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070032292 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069916402 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068958137 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080536227 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079060796 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068462832 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077551665 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067671913 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068763917 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069662929 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069923719 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078465661 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080682853 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070188556 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068144205 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069371329 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068288034 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0660738 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075803492 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078849453 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078083453 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078136843 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068486782 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077957177 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077966794 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069016392 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07855261 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067353059 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195866381 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070649661 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07968808 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078872077 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080673625 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069945279 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069150198 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079410449 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081742234 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069080518 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080161381 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08150347 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080936866 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068704394 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082127336 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069151087 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08123949 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069786188 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08076893 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069290465 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08110646 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068984068 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068087726 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06943025 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081503776 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071033445 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069023543 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070665294 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070675208 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080782481 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083923926 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071854451 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082393478 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079538258 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070735821 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079569268 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069296665 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080965227 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069907338 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070417034 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067573104 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082611597 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068734045 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068796386 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069658424 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081940087 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069157286 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080393264 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08052389 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068717598 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082878526 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080810027 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078000468 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081416153 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070493372 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068897135 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069070981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069937789 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079173453 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080983214 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070505126 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069199975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078884412 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080096533 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067516464 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078761078 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079096338 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078841587 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06850999 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069563268 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081171316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081526244 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079141599 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078366015 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079043937 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068650103 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077954731 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0787269 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068226136 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085304957 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068300985 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083539129 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079610444 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077647443 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079670206 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081482335 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080983961 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081314329 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084434033 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068707156 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068630186 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080714256 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068610843 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069104916 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077939089 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068820928 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06879311 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082459876 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068045274 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078848825 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067259664 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078282932 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066010622 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06893474 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082613421 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067459326 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.19971809 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080743797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070527477 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079667411 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082062309 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079684699 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068888394 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071018228 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081362989 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080198593 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068931948 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069657295 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07090643 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080217844 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079339169 seconds)
  done (took 18.746632273 seconds)
done (took 37.777956294 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213458046 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1526105 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200312797 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119162935 seconds)
  done (took 2.138226012 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12254622 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102369575 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096160139 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065562799 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103289341 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06553221 seconds)
  done (took 1.945209 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31379377 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213169609 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183816192 seconds)
  done (took 2.098837687 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200591178 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189761511 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.399388287 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257016917 seconds)
  done (took 2.547792411 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145416205 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090182821 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067861046 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083883233 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.142751211 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163230526 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102507731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127183695 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079096783 seconds)
  done (took 2.443582589 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148825132 seconds)
done (took 12.714989073 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.235488756 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126000512 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096864468 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.215230715 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077509492 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076177688 seconds)
    (7/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.178759564 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173347073 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182310386 seconds)
    (10/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116741718 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.122410604 seconds)
    (12/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.197646657 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074433512 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071624767 seconds)
    (15/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.160243235 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078199959 seconds)
    (17/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100987789 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074163644 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080474339 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072555474 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087805642 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.220308205 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183551965 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075552343 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.176744366 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.139646197 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.129776242 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.212583324 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.171811985 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18521279 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081467894 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075961733 seconds)
    (33/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.120562433 seconds)
    (34/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071980835 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170320408 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.175983603 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.100508756 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072646968 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.16009266 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072285051 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160202632 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062361238 seconds)
    (43/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052542461 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105926043 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090839599 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168625963 seconds)
    (47/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083200099 seconds)
    (48/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179779541 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067813334 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185538224 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089825747 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073679902 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093625346 seconds)
    (54/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074179604 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155629261 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073012494 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086199145 seconds)
    (58/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.123492432 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195668656 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104363569 seconds)
    (61/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072892951 seconds)
    (62/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065411686 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173056551 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110464934 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.158708025 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130815351 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109535541 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066927365 seconds)
    (69/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05227518 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073549792 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165473468 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065870208 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094148554 seconds)
    (74/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073274075 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.183032638 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196905583 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074047971 seconds)
    (78/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087643683 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06389363 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.330579559 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067160434 seconds)
    (82/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071805355 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053508789 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052266261 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092521954 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.067727433 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052824087 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155510377 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.286222799 seconds)
    (90/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076621848 seconds)
    (91/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100266997 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.198234869 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167448067 seconds)
    (94/309) benchmarking ("sort", Float64, false)...
    done (took 0.126743299 seconds)
    (95/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083184519 seconds)
    (96/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108512254 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052243436 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06741141 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076214516 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091483411 seconds)
    (101/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148765068 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110153226 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077637945 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11085699 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.141404076 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089722085 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051590238 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093860165 seconds)
    (109/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076448609 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072038894 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053248871 seconds)
    (112/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117675001 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.175813764 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086819733 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.077238232 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072558168 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114582763 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076948935 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14329596 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066271735 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080699474 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135657812 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052094513 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.187218467 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110496368 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.141911414 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066448965 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.134069108 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074062823 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074387921 seconds)
    (131/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052146015 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072023052 seconds)
    (133/309) benchmarking ("sort", Int8, false)...
    done (took 0.139684959 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051306589 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071105911 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096174463 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071015853 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07228306 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15095611 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073249581 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054671885 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072280151 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075012622 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114815046 seconds)
    (145/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183180772 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149050948 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077493196 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064919047 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07228437 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051383556 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051165683 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13950642 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073081715 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086754939 seconds)
    (155/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054700149 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052401224 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074883838 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066549376 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073474647 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052558097 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091976932 seconds)
    (162/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065796476 seconds)
    (163/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069562196 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068229371 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076273674 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07111608 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086109501 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051624178 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052924408 seconds)
    (170/309) benchmarking ("sort", Float32, false)...
    done (took 0.126841313 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05244158 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0688572 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072966229 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053948434 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.14997461 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051003286 seconds)
    (177/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071404739 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052297679 seconds)
    (179/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067344644 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089614102 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17108561 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108233835 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051141735 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072197756 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050980598 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080500232 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08711633 seconds)
    (188/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051196286 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064860499 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086967194 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.215581952 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07553825 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073834441 seconds)
    (194/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073815662 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067075785 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091550631 seconds)
    (197/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073638776 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069384559 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066631442 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064943799 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.0518643 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070177753 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138476381 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118832402 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073586554 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092922759 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066246446 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150892685 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052186064 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101866608 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07349852 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074141304 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089923729 seconds)
    (214/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068044943 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066466913 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080554815 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072526587 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165571116 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071977316 seconds)
    (220/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070562677 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052033348 seconds)
    (222/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052734522 seconds)
    (223/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053305353 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064550842 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095926556 seconds)
    (226/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073251282 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100340418 seconds)
    (228/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103201749 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067136694 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13287586 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06555266 seconds)
    (232/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052924887 seconds)
    (233/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069925228 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053521273 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053210834 seconds)
    (236/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052299046 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066616202 seconds)
    (238/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053279228 seconds)
    (239/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05285634 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065938574 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090358258 seconds)
    (242/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071392307 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06568442 seconds)
    (244/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064636879 seconds)
    (245/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061380618 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065752804 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053954204 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066132825 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079762971 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07158025 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133300661 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06958581 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067338201 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073571262 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08883934 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135701947 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065499754 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174258676 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06604535 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07240875 seconds)
    (261/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065147338 seconds)
    (262/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052318028 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070180357 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066470466 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095787473 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065129929 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051502731 seconds)
    (268/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067497781 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051246278 seconds)
    (270/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051481707 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051913082 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067961238 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089735738 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086267841 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073225788 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065309195 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052579929 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064541506 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052538857 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067984204 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068549629 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064455996 seconds)
    (283/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061046861 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051922325 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073208754 seconds)
    (286/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063683723 seconds)
    (287/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066050266 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087073949 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052032247 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078931965 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139606337 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054135631 seconds)
    (293/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051985186 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071537391 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052488495 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065227563 seconds)
    (297/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071751862 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138932615 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086477354 seconds)
    (300/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066209822 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071322721 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067021812 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063114004 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091777761 seconds)
    (305/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072452189 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051365063 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061557198 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134829253 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065480336 seconds)
  done (took 30.609168015 seconds)
done (took 32.011004592 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084124497 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092636 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074278982 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092566132 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080771543 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076802085 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07244173 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07790851 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079865761 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08211343 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.0781747 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05471515 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074220277 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074377074 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074223205 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09143864 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078075533 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072417937 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072922568 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064693261 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072662673 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066022983 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067290646 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054821103 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077960208 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071807674 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07267579 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074045244 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065492671 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06583884 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069249315 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073206452 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066003317 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078469814 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07309182 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073309626 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074995269 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076567025 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068021479 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066128254 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074116565 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065905295 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07258468 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073445848 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071421131 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07132421 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073298837 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078087134 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091285766 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068027624 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073901457 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075967455 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07619565 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072376004 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069318659 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072852155 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07127235 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091016878 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073779513 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068062506 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074094656 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074297507 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071383564 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072875951 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073070073 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074911829 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075253192 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070943416 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075284445 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071161351 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065448639 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072959972 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068712812 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065410191 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075582564 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076524605 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064336695 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071008153 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072302293 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071106983 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064705423 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067186485 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067227456 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071258353 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067195529 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054599727 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069181918 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071338022 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064474934 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073318961 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071668736 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072000774 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067548909 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075461278 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064914931 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070772239 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065601873 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065893037 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067006801 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069135256 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064994384 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06760961 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073640895 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066993876 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071159231 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078975132 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065446555 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071783933 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064464477 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06470022 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079886486 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07463661 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065736164 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067820123 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064658568 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072791149 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064685572 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065497719 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065374161 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065371913 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0701041 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064696715 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066228409 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070796837 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07667622 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064126643 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067677233 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066109731 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063891075 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069402815 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064454431 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.197692569 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067845617 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06239632 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068133994 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065998877 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072952664 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067343045 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072875095 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067926939 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073874835 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070348128 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071075753 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070705734 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064760466 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058769974 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068632755 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067715163 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06746071 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066559652 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067594956 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065474735 seconds)
done (took 12.433782358 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066975681 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143125905 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100689416 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095704832 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08604796 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066980401 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07640224 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102424135 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068148916 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102757753 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087424806 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084704749 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1129555 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065270002 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06619422 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069792564 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067729157 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082217637 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101645554 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086520628 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117202737 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065897491 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094852823 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090065182 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087201494 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102118771 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066980183 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070148046 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069584099 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091695384 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086558107 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070364795 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06723478 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101060855 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092690418 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083498892 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06655928 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082868876 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066966934 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065809153 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067765802 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098300721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079925951 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080492483 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069856888 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069254063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067444602 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083809851 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088993588 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078859389 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086358783 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103851716 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068903193 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065833826 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065059548 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085829467 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065795034 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068924109 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066612871 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06828686 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065999196 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069391442 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08153931 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082384085 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069883366 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08067373 seconds)
  done (took 6.818459134 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083753379 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090576906 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083119127 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083837746 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065728492 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066792974 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066664639 seconds)
  done (took 2.037659924 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068175489 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087903815 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089169455 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088788267 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084849766 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087652197 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076272567 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066702317 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080378964 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068015428 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087182828 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102598188 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067433861 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073041354 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090686566 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06657576 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090316899 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066428209 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069755526 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090328766 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06880213 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082127712 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070278173 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067037699 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081045809 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066830429 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113458575 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070947366 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068299741 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069697067 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064962606 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107346071 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080480021 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075604477 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06633795 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080690495 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08060532 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065111407 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083079071 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071472948 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.0801906 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066886057 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067495705 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064600881 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070494742 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076732413 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067686023 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067163002 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06910394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085901634 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067547367 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081002245 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069876536 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070001308 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068144085 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070516365 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076299681 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067459067 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086212634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067909136 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083185325 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082625822 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079998248 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082861054 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068644236 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080071127 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079826231 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069080824 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067836755 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070154021 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082712581 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064797313 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068044321 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076795273 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068501356 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089894002 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089018509 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067728666 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075523518 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066830854 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067074752 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066477896 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089335522 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069436702 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066929482 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071582195 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069891716 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06512821 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065812359 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070032874 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064796924 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067991418 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069493239 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069199068 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069229456 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082980822 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06878855 seconds)
  done (took 8.771603769 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070078291 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067998513 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069893317 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06839202 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068304104 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067949185 seconds)
  done (took 1.9295268 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094150769 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069549688 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080938268 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072650536 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105388423 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086705353 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087360736 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078920462 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08446132 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079239324 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086898871 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089083675 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093701872 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07314646 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087097957 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072137219 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086822967 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076600996 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078695336 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073250039 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087511529 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072874655 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073244913 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082133283 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076444925 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07224236 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067590901 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078821216 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079169688 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079408936 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07279978 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07582012 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071018905 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079065792 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087319656 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071100361 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07231465 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077282359 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072862951 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075418907 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08834958 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073059567 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075139463 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078170879 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079295732 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071360455 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077544335 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076474612 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08624875 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077237492 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077244275 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071780658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075527522 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076932036 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070604151 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078641586 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077434491 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.0868843 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072898497 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070544864 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069473494 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07575879 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078345088 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075702359 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07970726 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077613262 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071087848 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073287694 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073340547 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072325581 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077425629 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069229291 seconds)
  done (took 7.112579869 seconds)
done (took 28.154110111 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54449138 seconds)
  done (took 2.027302717 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60336392 seconds)
  done (took 2.113167887 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.493132759 seconds)
  done (took 7.999522476 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392697128 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473540606 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.688157573 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131075346 seconds)
  done (took 3.234199359 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.667949746 seconds)
  done (took 2.184631674 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211030421 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197309742 seconds)
  done (took 1.938850593 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376824677 seconds)
  done (took 1.889491275 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.09629998 seconds)
  done (took 2.606177278 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264252685 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163747885 seconds)
  done (took 1.94121993 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459509174 seconds)
  done (took 1.970081976 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.813325858 seconds)
  done (took 6.325293418 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208184754 seconds)
  done (took 1.766273661 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239553163 seconds)
  done (took 1.75802329 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.676334792 seconds)
  done (took 3.193945602 seconds)
done (took 42.461774032 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081531965 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081536924 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081345405 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078491678 seconds)
  done (took 1.822492995 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077139685 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072819923 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076845033 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073218189 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077445603 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073300874 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074475451 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077520483 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073026314 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073092319 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073118929 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072805297 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075816408 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07462571 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071451956 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075211517 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076596299 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07283453 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075842057 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072656123 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071736752 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075119464 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075467298 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072234526 seconds)
  done (took 3.30223771 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07861735 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073436603 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075185019 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071898882 seconds)
  done (took 1.825379381 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078017367 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093269274 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090528634 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078137072 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092797287 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086898281 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069255239 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069320653 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073629319 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077687972 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068240163 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096703692 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088087102 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077419041 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079786263 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066700276 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068787318 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087321084 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077892841 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078449157 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07021976 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077531616 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068465063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08901907 seconds)
  done (took 3.427945879 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078277816 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103667986 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078496177 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088029475 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090338693 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065854997 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075185034 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09002208 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12389725 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065631334 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070372332 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065702141 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072990243 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065689704 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076412089 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10536578 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109217495 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068539584 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096261331 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065705595 seconds)
  done (took 3.186602981 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073555459 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070178486 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066403922 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068861285 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077799826 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07328107 seconds)
  done (took 1.964710354 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068731278 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068010293 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068319512 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067297721 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072003881 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067488042 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066159569 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067920435 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067732313 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067113029 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066821501 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066246648 seconds)
  done (took 2.342055838 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.173283353 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069062026 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069398837 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066294309 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070824493 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067038381 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080476387 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068243949 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090930765 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067107317 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066844781 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068762809 seconds)
  done (took 2.488217011 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209403239 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076848224 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239084022 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138672051 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112266957 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116331853 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104653428 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114248846 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144810582 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10261485 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169126589 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167203306 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108287351 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13857901 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089722341 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098888836 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156754816 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163620326 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104245914 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167306796 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145114003 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125121134 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148523073 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101907991 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107369835 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123308292 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071726805 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081400036 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172932275 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133223996 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147971352 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111931936 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094471549 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17870237 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172769923 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144021921 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135526207 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084413394 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103334444 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136089887 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203964292 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088560366 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162898582 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246831859 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082319317 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135696381 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121995657 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121874267 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108224633 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090669146 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146833941 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18508423 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139464811 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088702481 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113072762 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115754486 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118405121 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105245639 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18360882 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162031616 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128833876 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071808427 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100416551 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154464389 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134113708 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110253536 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128845295 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094359379 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134805242 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15607472 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119498878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14607317 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129743584 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089466645 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120233587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141080051 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129733239 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172298101 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126254664 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073738652 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12638557 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104276175 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082283052 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143642604 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076177622 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175259295 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099037308 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106653802 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113630743 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109520101 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10960782 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161816333 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283161578 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104920277 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067029 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105180689 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121895515 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14952288 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088519167 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110271909 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118134717 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079271821 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140763124 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075800354 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124556651 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076372553 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126677246 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134017765 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076807347 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123167039 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101458627 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100928645 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135992757 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162303651 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090727157 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083164451 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169589112 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123994188 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105466484 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144781108 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157243685 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10023947 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104221878 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151174134 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181166513 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09027244 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164395007 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108321612 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084909048 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088328556 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124711813 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113486148 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123439466 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083347834 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119829759 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170059635 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075526406 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095906855 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134707566 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07976374 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080898413 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103827375 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100735231 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095334427 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100918498 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104797086 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138371561 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123968712 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245473387 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128528914 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100185229 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17357255 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089838504 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10260273 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104801961 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070089958 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138531238 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158543565 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080426545 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165906373 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125510365 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106190544 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120667589 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084280913 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141757378 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079273046 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071226994 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145615658 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112005829 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11118805 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151276834 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106350366 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129615442 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120588481 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136435429 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133869902 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129603467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106314695 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088788333 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112480642 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126504625 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074228957 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092622308 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081145239 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105669792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096285393 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084093754 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143984667 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12595131 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101063195 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112321807 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098135595 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148849025 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07740499 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129763557 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119613846 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094265817 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15260094 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153155493 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131910593 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099530746 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144924355 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070041714 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073764872 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233130566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126160097 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084526524 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08496156 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118829371 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148493424 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131578486 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13989098 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112199335 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1230475 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15620044 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070518003 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11632907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151012407 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122692179 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105016792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091230489 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099541048 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144433937 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109268893 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184882337 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115704314 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127893137 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155118618 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100241655 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080454115 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104319341 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136933692 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10568424 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146613572 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100872024 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088815246 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111218225 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075007978 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101283468 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128491358 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12143408 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13765534 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121094407 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134376985 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077603423 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118131614 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121535478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122897369 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064471184 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120656185 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162617949 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094580362 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119344097 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153454793 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079415326 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125033715 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322266571 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147947703 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085703536 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111380141 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119513004 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129270849 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121354886 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141245625 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109524624 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136443867 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110987874 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086624565 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087938079 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097410017 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105673613 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095646793 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10970737 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11443321 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095385167 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134000268 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104212256 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110987972 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119441109 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097710653 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.0906563 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098229831 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175866728 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121247319 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172930948 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099426592 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147006478 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165625449 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075473588 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079721411 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07919127 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140560572 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084633159 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132227163 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099026427 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10664743 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125524975 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143613499 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096315147 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069160053 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109588634 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136314346 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112536188 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098290738 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104813442 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163025656 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100756286 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079576202 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114469017 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104903468 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101715903 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315599531 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062951684 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099311888 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07733853 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082152788 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129525433 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155920762 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081299367 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104339463 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121232552 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11130807 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129672084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10290741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100300701 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116313262 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151990492 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130996731 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090816148 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113701299 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131152058 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158593227 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107097859 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096047044 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174017467 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153776619 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161382249 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08997727 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115389578 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115556542 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109357721 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141270315 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084258053 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16597806 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082632763 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137353746 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105398254 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091069084 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131467921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117573831 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089229173 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149420751 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118758587 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083187202 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078783776 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119035854 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121214556 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106789544 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075440203 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1395472 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073117869 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133060805 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1694782 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080769086 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250106562 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098641454 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080807376 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110478181 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104286824 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091095809 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099819332 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175286925 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090021891 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151563239 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144181731 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114701772 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13914526 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100629517 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63779884 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079013007 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153520977 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117501426 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175024964 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099012721 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118719789 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10980092 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125202842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146647413 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106837905 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177706432 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134209857 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117355535 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080320018 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106581227 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103913514 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089584736 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10626974 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11430876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117496235 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094890081 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11722513 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124837968 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082669744 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096408085 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157691193 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118287076 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145947076 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141005419 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085178657 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118424161 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139148602 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080406318 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122656143 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152684405 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105822018 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242388859 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083231858 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104927582 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173183411 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07412683 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164486189 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121157598 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110292371 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114709044 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115897542 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133030777 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108530206 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122945218 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094894269 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112147448 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113869206 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083443074 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077918986 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105740818 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113524138 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098262404 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100112363 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098257731 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152654414 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071959322 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09640701 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104476293 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146573369 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176242491 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088839063 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083708797 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120913475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113673549 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114324103 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12124262 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079945823 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083243146 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082694924 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078436764 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109271208 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11341457 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105443666 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112454736 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166023341 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083189378 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225757096 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096216039 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105762683 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070711286 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079307703 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096715122 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09807757 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108169124 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10081319 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169724111 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094389575 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090084699 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092217611 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072720974 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227662219 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12960501 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112808569 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120289783 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099049223 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06301761 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110481816 seconds)
  done (took 59.425756462 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110374642 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082706049 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098111333 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150329384 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123763716 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213106656 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158267375 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200869012 seconds)
  done (took 2.77193505 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070534904 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094603992 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102013846 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085383656 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067150406 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070096962 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227068727 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083055928 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067421453 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089291006 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081063954 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070678882 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422883614 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066630649 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06925761 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064777547 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067754204 seconds)
  done (took 3.426289029 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371863114 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601060554 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374882678 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074160848 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.89337335 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090391764 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.139404077 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138757164 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074577735 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53362902 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.708981506 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125480038 seconds)
  done (took 18.765474551 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079555717 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070613817 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084763235 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084886745 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073782079 seconds)
  done (took 2.027680802 seconds)
done (took 108.349195576 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083782363 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399509603 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054473456 seconds)
  done (took 2.118165905 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085988687 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085856464 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085501913 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083648528 seconds)
  done (took 1.982912984 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077748568 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077182741 seconds)
  done (took 1.788940979 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226367379 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160146308 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08794916 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085194155 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078750215 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079032942 seconds)
  done (took 1.883232473 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07430315 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075493457 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073028041 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076668404 seconds)
  done (took 1.935407094 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078313646 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053384199 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055822254 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056465867 seconds)
  done (took 1.880456637 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088793888 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079298968 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079025718 seconds)
  done (took 1.883898867 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103909183 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085966275 seconds)
  done (took 1.826827531 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084440479 seconds)
  done (took 1.725439216 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104572929 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115474696 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132776267 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111470358 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14047758 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109675853 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086441691 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087489647 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07812872 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088400734 seconds)
  done (took 2.693980823 seconds)
done (took 21.909737271 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080523547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368968585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36226875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090218772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669457962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356749129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988145809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093013641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115217028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068105803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084342728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649211282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014858105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325377904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002332729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32410756 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65131408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069573655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068165493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068696738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973725086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068266698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068544886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068975081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649829174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371601629 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068272213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324257536 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068443035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070222656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355303039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068657495 seconds)
  done (took 16.230739152 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074232241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12100296 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074070105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085113002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07187083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070456828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071911333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069840215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120745907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068492883 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085047166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068296536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072269143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069508563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087527472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069136862 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069701036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069239636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069289155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06941307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087455658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068529413 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068811851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069193301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068968716 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080772144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069691338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069049803 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069259799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071162182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072073961 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069902919 seconds)
  done (took 4.074289889 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118368416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126469539 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075094965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103934208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113755799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070945797 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14443122 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09376713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129030926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068933257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085535424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068981787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102012205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069637454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088499427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069047851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070257001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06963665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06901313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069826404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087966049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068830299 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069148013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069861175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06978192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082233096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06960653 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069886364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069662899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070789381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072495984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069758889 seconds)
  done (took 4.333665275 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07595941 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075964238 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083948702 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084941383 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070053869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072903684 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073674807 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070439507 seconds)
  done (took 2.267135035 seconds)
done (took 28.552687606 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082330636 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071583199 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073799106 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081305775 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073679301 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079653876 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06832637 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075331735 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072663652 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073949454 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075716083 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068150198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071675029 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06781414 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074253548 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068581897 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080193055 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072501044 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08016477 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080681015 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070713302 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073935501 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075536868 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079708178 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079910412 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080040352 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078163344 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073965713 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069925891 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071127843 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077715605 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084815091 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069224446 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080044896 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06869458 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06847212 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072296233 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068537647 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080441687 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077291274 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070188936 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076717596 seconds)
  done (took 4.773437453 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091262296 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092269517 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086030068 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062324611 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06742933 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065321482 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089768572 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06012227 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060157198 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088176056 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056352963 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059771291 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063036435 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054498013 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059624063 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057717365 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062142796 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056623925 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059836064 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060413528 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058868183 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054769105 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061049418 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063631956 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.0595994 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062775482 seconds)
  done (took 3.379103222 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078367948 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085573928 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088641156 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128292402 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105060274 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077642885 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.0786155 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093164419 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086515142 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067699616 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071791145 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094296517 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088766212 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07462433 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068248638 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084904056 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082886054 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06948477 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074108441 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090986988 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08440983 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08409358 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093645511 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080876051 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067245809 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069978947 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071787719 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08144787 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072557351 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076820144 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071708238 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071066538 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069394913 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07928987 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071749735 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070193056 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09130099 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078328257 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078734113 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068647824 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07198154 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069257675 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089968619 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123535149 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0679441 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074458744 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076266718 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077764609 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067915303 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086909473 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079295019 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067960189 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071505637 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067859117 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068459114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081240301 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070233566 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070510994 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077255519 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071652741 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086473043 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071993979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083608726 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067675377 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07563603 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067352484 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068914222 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067313513 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093904277 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070003703 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109275707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.08043614 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069386609 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076920883 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075937389 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074080004 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068726673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08335914 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078902294 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071753239 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076975171 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071452816 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071271874 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088794265 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070594583 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069827659 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069389589 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074184902 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0708566 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06966116 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081271123 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068371459 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071570549 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085206861 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067860206 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069178223 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074269409 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073398361 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067658855 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079143945 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073046896 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069361998 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07742764 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068585232 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071406115 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078358075 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074019057 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067473629 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073175304 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074284709 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06908425 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069257255 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071142257 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069918918 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076477995 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074563588 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072493747 seconds)
  done (took 10.663110705 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163617475 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156316288 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070395818 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146581415 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077408082 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079813601 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14883773 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095192071 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069076389 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069374262 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06962028 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111315138 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107139577 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11689502 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079288802 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069085906 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084647681 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114815731 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150642594 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144286293 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084611808 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077644375 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071300827 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06987112 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071260544 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079130682 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085820802 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077629102 seconds)
  done (took 4.440409035 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085942864 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099702243 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074731391 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090093655 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091788228 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06871096 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071016893 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070447611 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08109675 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08007879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068977925 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074441721 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075346706 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071964971 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069284925 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075576593 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07584117 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07025375 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071897044 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073993502 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078009459 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082044098 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072292925 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068086 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074655587 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067709894 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065173258 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085554137 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069118177 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090988876 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066560922 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076078898 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082808082 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069769652 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068549366 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068197216 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068146902 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068274795 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070430295 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067358627 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06704536 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058618681 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067553375 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080648471 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074542841 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057187554 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073501006 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073411667 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073902537 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066238921 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071164259 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070955503 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071608569 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075544271 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073485715 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073421806 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069076324 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074701939 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076089404 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068740522 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065453105 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067195329 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073386237 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066975971 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076072394 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073016024 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066640982 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068292769 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069710109 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074545514 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068054101 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071186632 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066251487 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070205862 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072697068 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070089358 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068880003 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066762846 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067790602 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068334521 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056133968 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067958105 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053952519 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071471028 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066727961 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067034888 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067879413 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073135281 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081088152 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069395849 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074142945 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069111265 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067370212 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07099697 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060847841 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070815752 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083575594 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083632549 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06822655 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066165114 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082751157 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072879795 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067311881 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057143413 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075589751 seconds)
  done (took 9.247884839 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093562268 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071089619 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084677034 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092173511 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087037414 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075236036 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078024559 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07000907 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083238134 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074263839 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077294407 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069523801 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078204347 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077540799 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070568895 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077654323 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073634974 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084195907 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083086741 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068814876 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076312351 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080808058 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090545339 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080955938 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079387217 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080886135 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089841434 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072734454 seconds)
  done (took 3.925070131 seconds)
done (took 38.078860868 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.744262534 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.909466546 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.733898459 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.103216752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.80840107 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.01852788 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.841410119 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.733998397 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.89068165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.768983743 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.011854616 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.777423696 seconds)
done (took 65.013251966 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.765381177 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.873104995 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007295864 seconds)
  done (took 5.548132609 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.033242487 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.266677987 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.978186229 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.73018362 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.732943705 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.036094664 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.533266449 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.258507196 seconds)
  done (took 30.205366109 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.821074418 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.954818001 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.400307817 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.429321224 seconds)
  done (took 15.322000715 seconds)
done (took 62.629299136 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.732542655 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.776727194 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.731087035 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.711773361 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.787870573 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.738540711 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.17663519 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.735120389 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.728436207 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.719255286 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.729534178 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.168056915 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.739263993 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.069594537 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.7304753 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.736081193 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.766741764 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.272940244 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.887327485 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.743446578 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.729439381 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.746375913 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.730959075 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.73626822 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.75914726 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.730884561 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.170603182 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.7350146 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.357183505 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.732709602 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.763824959 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.197011445 seconds)
  done (took 202.740008585 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.73157968 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.842496281 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.898449054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.765289367 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.156579861 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.915429024 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.849181279 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.317864478 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.736021061 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.757524879 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.060992698 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.731108834 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.104218645 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.714762293 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.765046408 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.84111154 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.000793231 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.103522266 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.763751358 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.886080617 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.751992417 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.895354505 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.874838639 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.02238061 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.763928813 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.830142496 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.884745409 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.737188899 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.92957263 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.942204499 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.767485677 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.775929252 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.952673875 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.608659489 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757253538 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.748170658 seconds)
  done (took 169.857542358 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.897444053 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.734638828 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.734956648 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733739149 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.733088254 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.746323241 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.732751468 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.860160203 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.858907002 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.199220222 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.128354214 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.785804251 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576021876 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.731952696 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.803142675 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.746794297 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.732446354 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.750038309 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.759681599 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736498926 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.733307746 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862164602 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.745749963 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.923444529 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743091319 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.736633222 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.741867247 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.107400092 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.732132617 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.741140292 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.996863812 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.733054628 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.735318004 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.629268712 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.799026936 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823945399 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.733345832 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739727372 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.734545315 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.956201222 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.735035842 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.737334221 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.738056368 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911362996 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.731404675 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.863116911 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.734156096 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.238025119 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.733762549 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.737183158 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.736716679 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.439366114 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.404304862 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.734765748 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.736083275 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.738382896 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.736782892 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736584463 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.741627463 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.425402079 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.808890505 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.738553993 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.739766263 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.740058391 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.736086331 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.96435833 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736592784 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.091936784 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.794833709 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.951544357 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859146585 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.734982358 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.736134111 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806391115 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.829189681 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.734840722 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.734645332 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.737522868 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.738114277 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.818234081 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.734331546 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.857245411 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743588723 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.738684063 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786964882 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.808618839 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.736244688 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643075918 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.737088082 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.737886306 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.053013937 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803226792 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.735862497 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.738997171 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.739044077 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.866287198 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.736720077 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.861726016 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.520468148 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.736568599 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.408624143 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.740015865 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.886990463 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.736923524 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.92591051 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.739386206 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823228443 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741960682 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.74166296 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.737945103 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773032919 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.741202973 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.80061984 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.736783617 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.111038332 seconds)
  done (took 398.302426724 seconds)
done (took 774.523939868 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.426476405 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.38293008 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.494230715 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.407981499 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.377139001 seconds)
  done (took 13.764863238 seconds)
done (took 15.441745934 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.826307577 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.8313378 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766488316 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.831045012 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.761190373 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.830132059 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.812516769 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.766707468 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796788079 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.766034195 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.798691067 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766719638 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.753345144 seconds)
  done (took 24.983611201 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.976975844 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97952395 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.809169956 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.972400338 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.786999605 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968220213 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.897326826 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889246829 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.892597246 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.75572496 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754625897 seconds)
  done (took 22.362027686 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981141955 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.979350364 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811768317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.978489032 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787153472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.975491826 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900931482 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891514453 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893285466 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757944701 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754754881 seconds)
  done (took 22.391140219 seconds)
done (took 71.414648968 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.750965032 seconds)
  done (took 3.429272435 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.77171244 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.910154088 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.75703231 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.753511486 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.748692353 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.751022956 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.753938654 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.747643201 seconds)
  done (took 15.874534186 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.749470055 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.750262388 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.750529452 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.746288201 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.751347709 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.747872902 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.751583324 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.751388657 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.747064777 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.749147981 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.747512021 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.751516425 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.750366928 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.74851323 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.751848285 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.747542595 seconds)
  done (took 29.673757378 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.749190808 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.74823561 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.748302476 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.749764162 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.748860624 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.750290137 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.749951283 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.747558544 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.749853136 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.748802831 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.749807291 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.750427318 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.750982497 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.750070683 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.749820287 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.749261067 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.75014517 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.749033029 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.753934372 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.748545865 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.749076424 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.747645554 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.74821589 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.746840998 seconds)
  done (took 43.668367596 seconds)
done (took 94.324498841 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.606274199 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.141256245 seconds)
  done (took 8.428206686 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.754305295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.751825669 seconds)
  done (took 5.220660934 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.751528732 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.752433369 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.750550076 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.750912784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.75131351 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.75161622 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.751428856 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.752887128 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.751509553 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.753127194 seconds)
  done (took 19.198972183 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.754003042 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.753425586 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.749301316 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.751725136 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.752602616 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.750046769 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.751743723 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.753333855 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.752327514 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.752749986 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.752784268 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.750757284 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.753277597 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.750996714 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.753009012 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.751562715 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.75179368 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.75118392 seconds)
  done (took 33.219151381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.754182906 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.754696052 seconds)
  done (took 5.192674265 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.752914579 seconds)
    (2/7) benchmarking "second"...
    done (took 1.750455539 seconds)
    (3/7) benchmarking "month"...
    done (took 1.751415949 seconds)
    (4/7) benchmarking "year"...
    done (took 1.751890269 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.751583657 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.751131905 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.751212236 seconds)
  done (took 13.944283086 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.755040155 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.911210539 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.992016154 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.456440779 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.755957564 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.757254236 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.694774837 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.757815548 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.757889452 seconds)
  done (took 19.521962182 seconds)
done (took 106.407081146 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.544409948 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.749876211 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.136623288 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.830010718 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.765256235 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.093230633 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.768045935 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.976266445 seconds)
done (took 42.547862901 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.751313371 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.306617176 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.328830282 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.0626597 seconds)
  done (took 12.383776431 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.734956384 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.286480977 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.789156398 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.41915876 seconds)
  done (took 20.102221704 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.118703277 seconds)
    (2/2) benchmarking "read"...
    done (took 2.10775392 seconds)
  done (took 5.916961501 seconds)
done (took 46.840904518 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755875935 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.755191809 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.756509496 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.753795584 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.755156655 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.751496612 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.753445829 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.756383954 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.75176931 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.756018163 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.753223308 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.758424996 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.75782468 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755929481 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753898031 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755652172 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756572006 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.753329661 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75419525 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754776639 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.757339812 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756924526 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.754794358 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.754938569 seconds)
  done (took 43.808489342 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.758566018 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.755644032 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.757186084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.75793675 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.754895939 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.757157063 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.757703179 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.755747563 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.757034771 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.756568794 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755762241 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.756622358 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.758145494 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.756838912 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758651197 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.758107259 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.758767937 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755827567 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757955966 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.755809905 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.759239297 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755559379 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.755123288 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760189455 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.755125736 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756883121 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.756881155 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.756227013 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760265712 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.7548709 seconds)
  done (took 54.398272086 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.76263016 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.77050056 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.758362412 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.760838535 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.758490619 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.757978237 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.758661706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.759362387 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.758618846 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.760199889 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.758976769 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.757962417 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.75859419 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.760630312 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.759982022 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.760398005 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.761045442 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.761877681 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.76101261 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.761030109 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.761168844 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.759886347 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.761536942 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.760540636 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.760545824 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.759682285 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.759662348 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.758945291 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.761242521 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.759599289 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.761532131 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.760947905 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.761798722 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.760389861 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.760304389 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.7620695 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.767132116 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.770700071 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.761088393 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.761266443 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.760683928 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.76154969 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.762288957 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.76022651 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.760202972 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.760661177 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.760075156 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.761669795 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.761308605 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.761127942 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.761404202 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.760385098 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.759756897 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.762698769 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.763020297 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.761618528 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.759935705 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.760087529 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.762530681 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.761680082 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.762417099 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.760686467 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.761920102 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.760688998 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.762086621 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.762074131 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.76059995 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.761316501 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.761519922 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.763766084 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.762683285 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.763308865 seconds)
  done (took 128.494982265 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.761875529 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760939875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.759415669 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761986993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760653413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76102706 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.758692216 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762622658 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758907889 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.764559202 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763095434 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.761280687 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761431526 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763082381 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764357363 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.76243445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.762712337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759658771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.761540249 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.763791091 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763854728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.761355786 seconds)
  done (took 40.453134445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764069187 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.763244741 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.75993707 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.7636599 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.76108348 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76441916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.762875333 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.763312324 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764248714 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762706053 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761415856 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764818196 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76213235 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76180843 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760647874 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.763560884 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762279418 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.763762828 seconds)
  done (took 33.424018996 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.762581079 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.76318028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.765243732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761748275 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.76173799 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.765270254 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763317322 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.765035521 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.763387667 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.765043899 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.766215094 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765916212 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.764248434 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763145046 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764706288 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.762659321 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.764533106 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764703571 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766077569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764289961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.763831443 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766525027 seconds)
  done (took 40.507442411 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766036795 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.765778678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.763809705 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.762518769 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.763392403 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.766226058 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.767941581 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.763427827 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.767561383 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.766034751 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763952168 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.766247955 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.76367874 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.76498218 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.765502888 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764726353 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76808628 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766657894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766878966 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.76351361 seconds)
  done (took 37.001826364 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769510708 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769362038 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.769247483 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76866478 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767221095 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.769667538 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769027797 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.768639941 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.76983419 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770865213 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768548117 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768537703 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769834626 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769815118 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.770920741 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770027155 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769571336 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769950308 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770144969 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769329124 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.76985266 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769281062 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768593463 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768406323 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769741112 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770193644 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768891487 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.770096087 seconds)
  done (took 51.241355468 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768886096 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768719297 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.764836543 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.76560835 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.766330756 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.764757695 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.76697321 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.767219182 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769169641 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765916316 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.768095904 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.769105887 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768944444 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.769377403 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769652768 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.769961638 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768917438 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.767360762 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766001113 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766615817 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.767861398 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769109761 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.770468 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.766525604 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768383771 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.769261655 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768809658 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.768762255 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770112816 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767975025 seconds)
  done (took 54.739619512 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.790028765 seconds)
    (2/2) benchmarking "in"...
    done (took 1.788584111 seconds)
  done (took 5.277033588 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.767024287 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770507358 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.770779846 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.768819108 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.767113656 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.771540939 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.769879349 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766295042 seconds)
  done (took 15.85131408 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.769612774 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.769992422 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.770104081 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.770580472 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.771811519 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.769991037 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774729139 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.770148593 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.774095726 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.773071288 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.77848781 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.779970735 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.77370912 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771142353 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.771512502 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771577139 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.773308879 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.77413314 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.772920884 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.771530866 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771672018 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774956572 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775018598 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.769779529 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.773864875 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.783933168 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.774742623 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.772281234 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772578409 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.776128253 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.772700885 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.769399693 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775384964 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.7724759 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.773872829 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.772442777 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78189239 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.772337594 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.779445802 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773215579 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77312224 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.770682693 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.776347855 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.774677286 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774482766 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.773165245 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.772673011 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.768457074 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.772206868 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.777927612 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.778648572 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77295597 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.770900136 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777246274 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.773596502 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779123858 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.772598404 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.777685502 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.783424708 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.78478296 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.786374463 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.781410519 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77605133 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.775910554 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785028399 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.802333668 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780296208 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.770477601 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.772425491 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.773984841 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.779311506 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78633163 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.785102653 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.774618698 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.775675266 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.775543019 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774505996 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.775417693 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780243931 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.775627244 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.775241751 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.775039 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784456588 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80161085 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.774326287 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.776119329 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.776071968 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.774537275 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.774771496 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787100666 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.776219503 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.775748343 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.774070851 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.77489064 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.777334269 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.777894315 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.774367916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.776679028 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.773536637 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.776106989 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777113753 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780286559 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.785821138 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777713239 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775033053 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.780950899 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.774058979 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772638957 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.78193967 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.77493281 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776423463 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.776284972 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.782606852 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.773400139 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780387486 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.785676499 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.777595478 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.779649876 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.77770515 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.778334857 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78840895 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.807723719 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.776963351 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.777125183 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.781723725 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.793322579 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778144805 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.779669474 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.779257535 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.773790864 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.774738241 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.779712075 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.777070098 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.778477008 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.777920194 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779605396 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.774679719 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.776956443 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.777957625 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.780628963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.780368173 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.779435207 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.779972453 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.779437634 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.780645 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.780746036 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.785096173 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.777136999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.7814592 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.779492659 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.776679254 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778050816 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.781522967 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.780089857 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.777933969 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780218347 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.778746073 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.779769892 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779615773 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.779713042 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778800534 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.779872834 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78468746 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.780537061 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.783268989 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.779197396 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.77551082 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.778104881 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.779306703 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.778455901 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.779557716 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.777683049 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.78353826 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.788936553 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.77906345 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.780218163 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.782289979 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780794054 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781871229 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779809517 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.782870381 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.789339548 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.781799652 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.786452647 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.781307898 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780144394 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.781262534 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.780193619 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.779239833 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781355473 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.783769186 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.789309071 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795800701 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791844318 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.782181555 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.786512174 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.78337525 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.786616077 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.787776066 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.783565498 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.781694225 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781776413 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78169967 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78262229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.783097588 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.782811093 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.780688601 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.784649208 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.782039969 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.783778278 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781885058 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.782838806 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.784650344 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.779561221 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.783736172 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781335843 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.783121136 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.78110585 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.783386393 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.783700798 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.781783815 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.783420068 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.789458559 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.77947337 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784203352 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784513537 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.782958073 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.783565006 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.781971451 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785729974 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.783066061 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789641732 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.78162692 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.784602171 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790424417 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.781410558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.782082987 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.78616924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.785080133 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.780073829 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.7874791 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.793379186 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.782474732 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.785520027 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.783612951 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785013664 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784317422 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.790044584 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.779203843 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.783606718 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.785174817 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.784976093 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.780710393 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.785347499 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.785052 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.785948096 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78587207 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783607954 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.784474286 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786538784 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.785726876 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.78721509 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.784755722 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788966194 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.795346675 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.789331093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.783689752 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.787296036 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.788294743 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.789818218 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.785694993 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.786646046 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.784403123 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798848772 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.794206425 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793028492 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.786222598 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.784154309 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.789028787 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.784773082 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.790220688 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787579322 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786572915 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.785536539 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.784550805 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.781212084 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785936845 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.784986494 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786297015 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.787169419 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.791791414 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.787567617 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.786163742 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.787788201 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.787935348 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.786120637 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.786718257 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.787061863 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.78773961 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788611894 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.786154749 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.787084338 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792554805 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78647478 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.788758522 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.786437929 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.78740141 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.787973019 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.789339134 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.787058531 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.79026163 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.796939306 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.789964064 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.797424697 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.789627578 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797715548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.789509727 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.792071019 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.797348412 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.784954389 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.787657931 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.787971464 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.790285916 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794175593 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.787205653 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.790548963 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.793635563 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788565971 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.789018562 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.788151345 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.788164275 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789781762 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.788813214 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79619136 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.789397652 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.794806626 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7900795 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.78544577 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.789959207 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.789182746 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.788223532 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794026956 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.789339573 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.789916797 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.789572451 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.79003869 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.789082732 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.790628937 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.787895708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.7866165 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.789586362 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794841932 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.791154188 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79483575 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.789856087 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.796357916 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789485102 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795858458 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.791160654 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.793793109 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.790386588 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79091976 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.79125165 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.789660448 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.790566756 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.791335407 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.791504743 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.794974928 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.791599827 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.793209939 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.789913066 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.790854804 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.790004107 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800284362 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817601528 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.792013416 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.794223021 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.787375602 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.791313328 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.795862114 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.792335799 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.790440284 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.794458795 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803790805 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798568972 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.791270152 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.791378076 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791624941 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.792407314 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.792627241 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.790406452 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.791568817 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.792100057 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.791597547 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.79061644 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794455998 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.792192921 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.79223962 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792842686 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.791924009 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.801969873 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.792825287 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.794062468 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.792869008 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.792241556 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.791175246 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79215367 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.792429578 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795769889 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789997855 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.793702194 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799082389 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.799908171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.795801045 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.792833767 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.793291809 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.793361397 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.79208168 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794828063 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.795032376 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.793744251 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.793888601 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.793953094 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.794486671 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.791823249 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.793398803 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.792768629 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793247885 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795224496 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.800899233 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793270112 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.78877904 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.792756758 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792627277 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.792497241 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.793712162 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.801169105 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797574161 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.80605387 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.803489808 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.7993247 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.794536087 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797774111 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.804332689 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.791490624 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.79542791 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.7945477 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.795560757 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.794441836 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.798604513 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793629988 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.802412855 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.793961763 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.794328969 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801658439 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.794659002 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794621104 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.796504705 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.800643426 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.795580344 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.79251942 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.794577604 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.794723618 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800498392 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.795831583 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796746272 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799258788 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.794673929 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.795793335 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801524152 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79568536 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.797276984 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.792479554 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.797474753 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.797464196 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79677883 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.792349503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.794700047 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.796080087 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.799386253 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.804939108 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.793406931 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.797106202 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.797512385 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.797669654 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797190274 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796613288 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.793286296 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795184131 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.797204925 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798295547 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.797147992 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.80023652 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.797838272 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.799880368 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.799772624 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797571895 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798609924 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.809165569 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.805221293 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.79425756 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.798010109 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.797032824 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.798980323 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798047229 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.797215676 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797279208 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.799192634 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.797923807 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.797618703 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.7972269 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.802056458 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815075429 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.79662191 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798282781 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.798263147 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801603775 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.79847325 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.79389387 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.797978748 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.800785026 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.801497196 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.808014566 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.799191059 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.804922391 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796357247 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.798409767 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.803384352 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.801192693 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.807750948 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.801932123 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799059799 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.799303933 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.805157897 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.819300321 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800263526 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809888806 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.831681675 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.798915707 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.799787071 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.799898709 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7996118 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.800021667 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.803157681 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.80038694 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.799402113 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799190954 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.801219293 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.800113449 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804897491 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.801463367 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.799998184 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.799533737 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.798779784 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.802239912 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.797450557 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.800244615 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.79986305 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.801652386 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.800718314 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.799728912 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.799817015 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813803465 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.810298509 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.800276936 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.800270703 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.796793698 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.802179653 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.802623689 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813584291 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.808682353 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.801595382 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.801764496 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.803644098 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80139316 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.79975087 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.801233154 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.800277145 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800986819 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.799719435 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.815779536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811826022 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.806146094 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.801163902 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802654309 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.803233271 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803308548 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80218842 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803171585 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.802875801 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.801513785 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806926038 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.801359725 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.802889962 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.806067209 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.811878446 seconds)
  done (took 1067.723811334 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797650339 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799975017 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.798464215 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.800503085 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799147038 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79960571 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798490724 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798842907 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.799318832 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799033487 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79916971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797765798 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.798506659 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.799795662 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799555208 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79934304 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798250819 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79905866 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799010356 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800277938 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800129837 seconds)
  done (took 39.511981673 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.802571431 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.79904333 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799446158 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802670424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79899159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.802308674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.800485827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803435693 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.801603331 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799248078 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.803477067 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803241992 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.800533633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.801717331 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800681437 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804670957 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.804827839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801706772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.80594624 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.801491397 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805051187 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.802070436 seconds)
  done (took 41.377158912 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.806563807 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.806949254 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.804790409 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.801654735 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.806148095 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.80211997 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.805951058 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.804404624 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.806322298 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.805609566 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.804935699 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.807803219 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.814484965 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.812728392 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.807656809 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.806944815 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.949674014 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.807596811 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.806993075 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.805877335 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.803236495 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.810936349 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.800692134 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.803055677 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.806770214 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.807114939 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.807641498 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.807198473 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.806313494 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.811788312 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.812484931 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.804354163 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.804764612 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.808429129 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.808668709 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.806404001 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.809841676 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.806246376 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.802015642 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.804361542 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.817050963 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.830363173 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.806402898 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.81338391 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.804450222 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.806231661 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.809802197 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.815701874 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.804184664 seconds)
  done (took 90.449690759 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.805835669 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.806780747 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.801515994 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.804566226 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.806217515 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.805063045 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.805791343 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.804536784 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.801253306 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.803239751 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.80566316 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.807004876 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.804707027 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.807863306 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.807841254 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805355034 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.807128975 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.806605042 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.806801618 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.804686552 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.805142203 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.808066313 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.807876467 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.808273875 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.807186433 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805754333 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.80340071 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.809612092 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.806212894 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.805755855 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.807394416 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.80740734 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.807455544 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.805612348 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79894435 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.79224293 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.795425632 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.789442852 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.795493578 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.790329896 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.793664058 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.794271329 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.792343362 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.795173022 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.793653973 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.795113897 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.791792038 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.791385153 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.788911801 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.794097415 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.794843903 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.792595648 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.794280811 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.79032091 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.794333519 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.794057695 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.792628609 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.788497705 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.793737595 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.790975417 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.791474469 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.794687472 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.793951208 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.793995264 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.792596361 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.79199319 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.792771739 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.794525271 seconds)
  done (took 124.104206474 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795468224 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.795531751 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7947556 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794500804 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794615805 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.794277658 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793428891 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.795491981 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.794153784 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.7955844 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797480591 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.793211854 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.795942979 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.793479938 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.794142267 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79441585 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794479067 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793855294 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79367544 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793603524 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.795236681 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.793933732 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.793802202 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.794202468 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.795133577 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796023314 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795463908 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.795720594 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795452198 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.795677861 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795864626 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.795600466 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.795043618 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.795999921 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.795774357 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.79518629 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.795441997 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795220339 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.795648893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.794918595 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.794807261 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795892198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796883332 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.797352197 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795201385 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795620291 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79457812 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.797505425 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.793344838 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798097977 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.795307876 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796595416 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796018921 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.796430804 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798094825 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.795369091 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797363417 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795554877 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794441897 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796192975 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797683471 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.796292657 seconds)
  done (took 113.035790858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795900561 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794273697 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.796495888 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.793409656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795687687 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791937297 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.79745139 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.796131894 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.79788719 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.797527142 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796168907 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792914732 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793396686 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796357281 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794559438 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794670158 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794547569 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.792228423 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796726044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.7963064 seconds)
  done (took 37.627674955 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.79375541 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.795713764 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.79354076 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793868276 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.797971923 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.793798988 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.797007715 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795097479 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793844304 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800115446 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.7941871 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.794193249 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791963559 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791534597 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.793151957 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.794757265 seconds)
  done (took 30.439158911 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.791139906 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.794397618 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.795884831 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.796135768 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.791210218 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.790455029 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.793911415 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.791160638 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.79107218 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.794472886 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.79276739 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.793220501 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.793391081 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.795217284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.790819161 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.794478987 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.791001011 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.790768321 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.792443823 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.794047298 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.794469102 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.790798462 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.794126047 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.791560981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.79016895 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.790663004 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.791797839 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.789679958 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.789349622 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.793176483 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.790991987 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.793183927 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.787103327 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.79130483 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.794355051 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.790394117 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.792574773 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.794667898 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.793459475 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.793415597 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.793195633 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.790949429 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.793607176 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.792804798 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.791805167 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.79258435 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.791385016 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.791919827 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.790104399 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.791165011 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.792036835 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.794972136 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.794845648 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.792941928 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.79369029 seconds)
  done (took 100.307164182 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792667044 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794298113 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790858778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.794827171 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793215531 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.791321257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.793164609 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.789789162 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792527011 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.796375012 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792537368 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.791995093 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791168817 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.794109714 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793021091 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79238115 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.789902025 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.79114424 seconds)
  done (took 33.987755087 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790273122 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792906518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.793208206 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.789533264 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.790104713 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792653435 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789030087 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.796087483 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792763367 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.789476229 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788816867 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.792029449 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795219241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.791780772 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788554325 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788647138 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.792316227 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791352953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.792321443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788180082 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.792356816 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791294465 seconds)
  done (took 41.131603547 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.795717588 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.787756809 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.806235361 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.814742602 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.814014175 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.829451697 seconds)
  done (took 12.567589008 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787763687 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789704192 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787749042 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790813252 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790773374 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789140495 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786225574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787310387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787917253 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78729544 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789864516 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787519737 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789849736 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785051797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790444931 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788592916 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786763736 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78527757 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785746222 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787426895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78585038 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790669843 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783607529 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783710783 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783943798 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783640871 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785914639 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786194557 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783677499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78780401 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787107018 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783576601 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786634651 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785003388 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788559963 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786472037 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782031483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787284718 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791246835 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783953449 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786048895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785563466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787020868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783369768 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785331228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782169398 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783119723 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781985164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78296775 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789136524 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784384665 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782071092 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785503488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78590255 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784653667 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788499051 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783521762 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782569415 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784754551 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783001962 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783785238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78897732 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782328565 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78440589 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786384638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784213231 seconds)
  done (took 119.601590131 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782819363 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783167906 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780712242 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783840912 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783194873 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785840801 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781137763 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781694602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783347896 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782877903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786058279 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783499317 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781076223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783214063 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783882689 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786654743 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785319933 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784274573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78418282 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787071931 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78322589 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783689943 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786501 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78341866 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783508847 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786329431 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785018287 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785793026 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781902292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782369686 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781572766 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782198761 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783059158 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786055794 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782066738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782363109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783108558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7808517 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782886844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784228167 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782028907 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786884692 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782350602 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781920572 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785159615 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780807554 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782219192 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782719845 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780145682 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78236117 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785304504 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783898273 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782085389 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781487762 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784061933 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785422148 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779808659 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781769556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783350654 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784670295 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782383617 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78630816 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785970311 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781397871 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782325469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78377256 seconds)
  done (took 119.422478124 seconds)
done (took 2478.168876432 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.827414323 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.844167167 seconds)
  done (took 15.387796871 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.946910598 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.903483728 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.781795385 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.775683119 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.784991877 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.797411914 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.79537977 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.780600634 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.7819204 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.785486365 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.779850996 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.972694182 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.781892962 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.779669376 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.783638247 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.87575583 seconds)
  done (took 50.82460336 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.786926462 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.787402241 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.796499633 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.786748232 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.78495668 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.79964906 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.820082986 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.786341252 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.821196738 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.797831831 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.862622531 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.795095862 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.786644567 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.832701588 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.797358157 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.80006407 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.871557089 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.862871108 seconds)
  done (took 34.290088671 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.862489654 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.787045646 seconds)
  done (took 10.37036134 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.806055519 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.809075388 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.802917529 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.790579619 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.77993182 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.795953138 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.805548537 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.823239127 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.783795416 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.826840123 seconds)
  done (took 69.739903656 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.787755613 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.784250016 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.782141876 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.783295035 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.779079535 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.77826629 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.782378172 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.775337914 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.477774481 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.817416973 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.791026847 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.786561569 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.786427125 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.786142751 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.781386065 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.806662899 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.921381842 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.786355084 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.779288957 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.787113291 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.783359376 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.834385083 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.794667477 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.785573785 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.812816381 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.473942788 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.79163427 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.789875417 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.897184926 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.781854718 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.782595812 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.784952006 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.784846582 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158674953 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.069505628 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.783237781 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.795326099 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.789072622 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.781901997 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.911578146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.78401125 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.788643659 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.782089354 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.057606932 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.888534039 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.82424837 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.155763808 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.788627818 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.785234884 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.816999203 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.786091263 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.787294689 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.797311262 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.300821164 seconds)
  done (took 128.006083961 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.776385499 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.066960466 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932484486 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.776746116 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05058299 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.983502148 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.777574168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828834624 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.780219581 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983213095 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.941423609 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.888911342 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778702247 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.779312128 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.775817503 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.776078935 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.939879933 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.847713345 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.779494315 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.775935704 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811582609 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988375532 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.902833843 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.782742733 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.800938736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.991630558 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.900524527 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.887742667 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.060112811 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.77876382 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84472913 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.779030642 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.782306975 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.776611744 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935585656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.87681491 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.868786924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.779379143 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778574648 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.776348306 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.442530925 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976803467 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.879754611 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.922766851 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.932105728 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.985341474 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.426612421 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.778554515 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.418224946 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.944726209 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.992852358 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.990735105 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.905330944 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.782908375 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.937102631 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.778938254 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.78000865 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017191863 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924458458 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.884097305 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780546716 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.780858816 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.779076971 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.025207361 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.780238999 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.876059152 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78139656 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.778130488 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.879702441 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.885381734 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.922796692 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996548855 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.814426906 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.506762573 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.999337806 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.995924639 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.849430869 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016424546 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.782510297 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778207572 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.868368131 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.533893891 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.940206172 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030942197 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004222456 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815563378 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.389882906 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.779637281 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.976753403 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.968481563 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.976546185 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.93075785 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.936305459 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.912403182 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.781412594 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.781279408 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.98115841 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.919314308 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.786153753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.144343806 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015543508 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.352390753 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804706349 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078135194 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.918533757 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.183979346 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.409812002 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.785196271 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.951477589 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.822706806 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.783664549 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.783361098 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.975573125 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.595345049 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.782878282 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.522509383 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.847014329 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.787145827 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986966539 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.784256591 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993684254 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783997372 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020070487 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.916793713 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.817029992 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.955758593 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.93245465 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.574958976 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.034341639 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.030385511 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.903574418 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.054195488 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.514112039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.786897427 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060192651 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.786125091 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.783598085 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.952497317 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.785820582 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.932914159 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.785207827 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.013993342 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811288564 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940844284 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787011948 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024327917 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.819868196 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.837058688 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.786695018 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905885467 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786965872 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.66568143 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940805138 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787223835 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.784490687 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.207417804 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.786114563 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931572618 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.018056123 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810454409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854896688 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316820458 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785298973 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871724958 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.81377788 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.526874652 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.784603685 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.943610949 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.757046907 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.224921665 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.783985556 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.026991874 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.018518428 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.788993549 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.784408008 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.529192719 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.470722736 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.7853527 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.943538904 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.007733664 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.438996297 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990111883 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.788890573 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915309674 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.789185952 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.862420155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.136138507 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.785982676 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.786188807 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.786795709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.787781617 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78704025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.995507824 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.818956118 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.284280672 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.923199635 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004740973 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.097222425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.010474442 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.8306291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.789121518 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034225415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.790822454 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.852868486 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.789755089 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.811427841 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020932656 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.790796991 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.004399713 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044639336 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716515473 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.839310329 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.789786996 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787173739 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.786259861 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.937085563 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879333065 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.790605412 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.787472529 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900380658 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.908967752 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980999885 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.382815248 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.861184441 seconds)
  done (took 878.579938554 seconds)
done (took 1188.911355329 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.789998363 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.788574012 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.775090183 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783444485 seconds)
  done (took 28.861315775 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.79235645 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.787901531 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.79121289 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.789999694 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.791095747 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.789062578 seconds)
  done (took 12.46087723 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.82540818 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.784639974 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.782492249 seconds)
  done (took 21.112456267 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.858449658 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.197708333 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.892386839 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.233816139 seconds)
  done (took 9.903382168 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.792210165 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.789923343 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.791174629 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.792737902 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.798426286 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.794871167 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.790731447 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.792416332 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.795024348 seconds)
  done (took 17.857975996 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.145888829 seconds)
done (took 96.065622929 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.774471226 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.594340043 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.591260539 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.492110773 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.870696113 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.311266863 seconds)
    (7/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.026834457 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.861075265 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.414332 seconds)
    (10/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.962024386 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.946800439 seconds)
    (12/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.193946335 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.57158956 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.988443428 seconds)
    (15/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.916977176 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.828161909 seconds)
    (17/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.297002412 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.819029126 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.785760034 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.25751553 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.936164138 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.770633579 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.996131182 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.873038319 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.952349197 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.921656934 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.78333966 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.703184697 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.180984938 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.130567319 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.368039253 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.885250946 seconds)
    (33/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.036686782 seconds)
    (34/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.902898903 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.786663979 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.975127561 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.754276941 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.045789762 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.381744106 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.915350598 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.893174752 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.029292833 seconds)
    (43/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.928367856 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.830059122 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.044219867 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.786067435 seconds)
    (47/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.694885221 seconds)
    (48/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.988430509 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.034554799 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.203134931 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.171677973 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.623340198 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.506187619 seconds)
    (54/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.877670101 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.088160818 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.896224904 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.065245276 seconds)
    (58/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.086521461 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.773402633 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.089039343 seconds)
    (61/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.812655738 seconds)
    (62/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.190584357 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.787809844 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.792948065 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.34460073 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.816596195 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.604895788 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.938100203 seconds)
    (69/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.385010187 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.814345997 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.220658248 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.109431576 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.81662026 seconds)
    (74/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.920165983 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.774081069 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.472376283 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.893449946 seconds)
    (78/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.87060376 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.890317215 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.788414654 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.170794479 seconds)
    (82/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.373504994 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.377819562 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.382837307 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.579877974 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.501450233 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.094112635 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.068163394 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.957708155 seconds)
    (90/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.840903206 seconds)
    (91/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.9319194 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.9222883 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.825591445 seconds)
    (94/309) benchmarking ("sort", Float64, false)...
    done (took 5.619009693 seconds)
    (95/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.603503722 seconds)
    (96/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.998901339 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.964352674 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.87126299 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.083954798 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.686316306 seconds)
    (101/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.859390228 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.298069847 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.78751228 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.37092778 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.137979834 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.118450943 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.976442164 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.793209637 seconds)
    (109/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.138106262 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.813129284 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.198519477 seconds)
    (112/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.790323044 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.165135926 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.017755494 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.117553373 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.135166962 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.78029484 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.891024748 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.894953774 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.791535709 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.378282638 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.795728211 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.096233515 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.08743916 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.865792187 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.134635601 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.79416027 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.281577685 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.816669128 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.983112864 seconds)
    (131/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.935406918 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.050387769 seconds)
    (133/309) benchmarking ("sort", Int8, false)...
    done (took 4.794275546 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.003402662 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.020049609 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.842711959 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.006918149 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.055792217 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.849420546 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.825743337 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.777652533 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.540228391 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.791748247 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.960275321 seconds)
    (145/309) benchmarking ("sort", BigInt, false)...
    done (took 6.793838757 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.874987857 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.925826977 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.013535189 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.819134102 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.985134514 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.086034303 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.910907227 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.88971882 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.684407727 seconds)
    (155/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.782098066 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.660042415 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.797663238 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.916090614 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.814937229 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.151869423 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.589697447 seconds)
    (162/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.414972605 seconds)
    (163/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.372735118 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.781884278 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.805492041 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.938633222 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.674603824 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.685915294 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.157229463 seconds)
    (170/309) benchmarking ("sort", Float32, false)...
    done (took 5.562617163 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.650327807 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.947397501 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.819822971 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.794100654 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.890486627 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.889499869 seconds)
    (177/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.822279017 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.116694197 seconds)
    (179/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.977807546 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.172725654 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.793905462 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.074346215 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.682548705 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.821861244 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.890825971 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.63276485 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.916361052 seconds)
    (188/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.083732425 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.064776528 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.824130988 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.961474478 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.840863498 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.820813924 seconds)
    (194/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.819835154 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.032716202 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.066771962 seconds)
    (197/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.804302138 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.858588332 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.411749561 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.959191328 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.995978333 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.264940051 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.907379066 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.781526279 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.861693492 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.389513956 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.137235326 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.90644524 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.927096194 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.872102773 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.007453314 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.583468667 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.839474773 seconds)
    (214/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.907269208 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.45049613 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.47400103 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.830659086 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.795822806 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.821813315 seconds)
    (220/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.880376388 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.163279321 seconds)
    (222/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.941239413 seconds)
    (223/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.14570284 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.838636876 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.782970538 seconds)
    (226/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.848713919 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.870524863 seconds)
    (228/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.78174214 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.287754443 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.794758955 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.460188442 seconds)
    (232/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.280849918 seconds)
    (233/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.867362703 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.002874945 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.781891709 seconds)
    (236/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.811508692 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.122065323 seconds)
    (238/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.285662938 seconds)
    (239/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.959103882 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.136816346 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.44092527 seconds)
    (242/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.962949993 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.898122778 seconds)
    (244/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.883354034 seconds)
    (245/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.97500401 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.193181495 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.783098169 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.442104989 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.954400041 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.828699221 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.798952092 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.824720255 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.896129326 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.184157798 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.762894859 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.806027666 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.090439437 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.799606137 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.801402891 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.859206016 seconds)
    (261/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.893671546 seconds)
    (262/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.141445541 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.903903661 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.799966789 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.325512627 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.02195134 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.033350775 seconds)
    (268/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.889719785 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.954689614 seconds)
    (270/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.1051741 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.097992559 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.926928507 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.504669459 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.718751659 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.915825593 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.083970649 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.787421094 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.969833861 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.784501505 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.888818099 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.158948331 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.935749369 seconds)
    (283/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.976691629 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.190837683 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.586855849 seconds)
    (286/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.320967188 seconds)
    (287/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.800544263 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.868759438 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.987833402 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.484351848 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.829001358 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.838807007 seconds)
    (293/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.067374594 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.843761022 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.099720394 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.734006715 seconds)
    (297/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.92030273 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.801477796 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.822217872 seconds)
    (300/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.492411373 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.933959878 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.902454667 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.140409315 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.94973292 seconds)
    (305/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.825253583 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.192399315 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.083068217 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.799285272 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.176570941 seconds)
  done (took 993.053389993 seconds)
done (took 994.839817116 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.836539321 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827894614 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.813116137 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.832513435 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.924720281 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.844483843 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.823251053 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.814355788 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.860860103 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.861987396 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.811226248 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.845238711 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.815057065 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.814165849 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.813491691 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829737534 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.118270031 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.835763097 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.829782588 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.822975276 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.830349938 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.816860414 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.860963971 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.845591328 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.817708488 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.815502503 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.81585398 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.834617132 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.923810896 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.816459222 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.814963484 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.825435756 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.118476726 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.832444717 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.810995747 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.833069719 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.823676587 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.821779508 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.820473552 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.844771805 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.248624274 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.816406804 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.813426659 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.813938609 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.812617738 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.81610176 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.813722458 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.819390671 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829225155 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826110448 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.242644919 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.832827577 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.817011656 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.81451845 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.824540533 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.812492019 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.816155157 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830847923 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.831770212 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830520192 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.105678753 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.841242091 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.816411075 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.830365719 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.824391457 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.279434755 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.812607796 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.818717782 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.246929995 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.824706462 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.280902019 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.825384578 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.816230755 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.828616488 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.846725934 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.117176228 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.830995049 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.8125672 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.821806975 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.812747546 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.826432996 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827091731 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.819214999 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.814864778 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830196873 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.847375224 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.825958721 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.815361061 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.824153066 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.835614204 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.82364974 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.82714559 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.819188537 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.810216102 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.824583254 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.819191375 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.818099472 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.818479 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.820347362 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.824867976 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.24797758 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837225001 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.810330987 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.810961112 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.814830136 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.829653184 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.247705548 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.821446244 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.836905381 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.862216406 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.818541134 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.109090352 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.842090622 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832490846 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.825637395 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.818747528 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.810969529 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.10907297 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.269130035 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.833583476 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.817236215 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.816367599 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831927685 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.817946353 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.813962646 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.118524858 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.839284556 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831066627 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.936632496 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.826544004 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.849932325 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.817234458 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.821840596 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.849696947 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834296493 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.849627077 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.820312176 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834955956 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.834780352 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.815041392 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.830172893 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.826802162 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819653242 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825325071 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.811685505 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.849397192 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831911689 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831311023 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.838251104 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.940882038 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.816739549 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.11056327 seconds)
done (took 285.470558774 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.884217444 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.809729266 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.915208561 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.812648453 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.898298382 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.900091483 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.810991123 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.810133452 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.810724001 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.192392216 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.811804768 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.810842274 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.81060745 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.810684923 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.897979007 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.813337834 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.812507032 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.157874283 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.815766962 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.886459592 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.808826442 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812563693 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.8148597 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.254344058 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.808761427 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.81431145 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.885982296 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.815511146 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.162410518 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.815536938 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.809957909 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.161504011 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.904150591 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.833289467 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.823786981 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.822444791 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.900578072 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.81874773 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.895431509 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.897198 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.916192496 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.856395026 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.814069582 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.812562583 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.817474038 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.816419196 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.813020763 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.843002303 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.817252225 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.814238177 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.157799513 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.825884712 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.823447642 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.815005728 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.81263942 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.837050431 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.814590046 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.818212593 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.905038827 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.818269135 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.880834565 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.200531154 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.194753659 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.81716764 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.81265055 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.812750122 seconds)
  done (took 180.743134371 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.882188751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.888751379 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.884868748 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.819217423 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.869086127 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.889461791 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.818182537 seconds)
  done (took 14.796402497 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.824455786 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.815568649 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866358411 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.866546205 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.815816474 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.968601637 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817719542 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.239758647 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.814663717 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.872302259 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.818309845 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.816838784 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.824400812 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.810591814 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.865287723 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.829446769 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.932987803 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.820291095 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.818702151 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.969645686 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81618644 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.82524224 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.872133331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.830466054 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.819130189 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.824381037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.401057693 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.818152099 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815588011 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.818066269 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.815325192 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.863209281 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.819592828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.816025989 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816269142 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935904368 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.818527072 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815622245 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.819642983 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.814907192 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.819847331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.817846568 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.819868727 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.817007037 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.81961277 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.842939522 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819089407 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.818665359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.81895867 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.820914022 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.869484127 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.819728768 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.816892922 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.817386622 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.875991599 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.826950509 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.821449238 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.816548053 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.818938842 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.816665309 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.970915461 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.866034657 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.818626804 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.867454412 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.820625579 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.819888727 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.820535214 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.819174522 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.873958256 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.8202001 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.870215462 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.818086477 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.979470484 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.84322539 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821759384 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.824269848 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.823995434 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820882425 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.814202899 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.827342743 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.818000216 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.822010369 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.827212539 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81923705 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818762043 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93403595 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.928895229 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.820230875 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.834612066 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.828533823 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.817816775 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.87451073 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.820714678 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.818910932 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.873262565 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937097848 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.877974801 seconds)
  done (took 201.259297731 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.826180675 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.829996305 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.822519771 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.838480962 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.822342143 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.822280208 seconds)
  done (took 12.710654074 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.824846749 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.822178086 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.821251994 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.821725181 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.820888446 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.823423308 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.823584504 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822935413 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.825024341 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.821270473 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.823063753 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.826130147 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.823891456 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.82450291 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.82449904 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.822662001 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.824052294 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.820467474 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.822125332 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82380661 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.9657584 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.824254496 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824346592 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.82575983 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.828243931 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.824347889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.831959422 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.824258233 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.824498626 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.829261224 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.82785194 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.825278286 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.824991118 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.829034415 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.828288289 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.825182227 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.829116643 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.827630641 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823018911 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.825508436 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.827933714 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825541422 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.824496014 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.826831153 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.825617266 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.829637596 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.830725025 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.831741017 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.825594984 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.827594083 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.828152153 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.824132036 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.825956899 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.827911496 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.827821466 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828809992 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.830899933 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.825803153 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.825120974 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.826552082 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.825190079 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.825077268 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.827082493 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.830282496 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.831081972 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.829683672 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.826379962 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.829872793 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.826092828 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.823544126 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.827258517 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.822452353 seconds)
  done (took 134.353915676 seconds)
done (took 545.617356049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.103565121 seconds)
  done (took 8.856637538 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.923318461 seconds)
  done (took 8.775557359 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.260172111 seconds)
  done (took 10.024162879 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.84850425 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.858590711 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.840762516 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.829176167 seconds)
  done (took 29.149628356 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.860123557 seconds)
  done (took 8.622766877 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.842648473 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.826290314 seconds)
  done (took 15.469796116 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.880570599 seconds)
  done (took 8.645798502 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.930487024 seconds)
  done (took 8.696377001 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.840080894 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.832805565 seconds)
  done (took 15.450998703 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.814846521 seconds)
  done (took 8.577602696 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.52594131 seconds)
  done (took 11.296615448 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.841946394 seconds)
  done (took 8.619211395 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.832841775 seconds)
  done (took 8.595812463 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.886406759 seconds)
  done (took 9.649453636 seconds)
done (took 162.182849834 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.832367599 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.82427281 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.830527417 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.823333855 seconds)
  done (took 29.07287488 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.869657488 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.86664145 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.872353376 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.883863695 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.87309178 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.8718633 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.862317078 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.86278316 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.883138392 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.87424358 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.874736455 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.874745322 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.886281027 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.862863857 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.875943087 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.87263712 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.882035124 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.873398492 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.862718926 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.880542569 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.839834426 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.88231419 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.874334193 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.838533765 seconds)
  done (took 46.664927663 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.03728758 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.909927474 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.991043589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.891863753 seconds)
  done (took 9.598316835 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.895535102 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.89232111 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.904332497 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.941921214 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.968146906 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.905577422 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.864364428 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.860054625 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.846615086 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.891474944 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.972715175 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.908914768 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.989842552 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.839062727 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.031487533 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.841918396 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.83879868 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.890454679 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.943884895 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.959433398 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.841244618 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.891893402 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.89503681 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.908857173 seconds)
  done (took 47.49021909 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.838472357 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.849286557 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.844718466 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.838394857 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.838979524 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.838725089 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.84612268 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.840574481 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.861100189 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.840175324 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.838425428 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.838988228 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.840251451 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.839409773 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.838589084 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.852785985 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.853681998 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.843863764 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.842961218 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.845201936 seconds)
  done (took 38.638435554 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.835709453 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.687031533 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.185441482 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.091503157 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.833083086 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.835850056 seconds)
  done (took 31.236570694 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.852610969 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.846647968 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.841643285 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.895987993 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.9736451 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.847099957 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.845295049 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.851298905 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.883982819 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.905620087 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.857684847 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.864909699 seconds)
  done (took 24.235043662 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.836616151 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.839562462 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.837208583 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.854933426 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.852895651 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.848129403 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.848991469 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.838397607 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.85345234 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.859285078 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.848904311 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.853287082 seconds)
  done (took 43.946414808 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926899108 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.881974628 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.877666121 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524278142 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214716605 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047361513 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.506345691 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168503682 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.840467684 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111489572 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.89616367 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940817049 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093404845 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246419941 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865670115 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300451914 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134332692 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055910416 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865215937 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.5425264 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900689194 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.951486056 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.594710241 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896172738 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050701793 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.971254844 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.100308002 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838004094 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972457917 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874661209 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849231059 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83856637 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112573233 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221206046 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942235788 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849604769 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458710562 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.552705084 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.828588354 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.629490208 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.558370989 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.963491424 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849901513 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839187948 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773460154 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912285469 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208899418 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.843723721 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.552978461 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84052345 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856124494 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931720197 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.843346879 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.655883015 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789133694 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.841587674 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.83784722 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846897708 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413952579 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.949148595 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.944884276 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.807722897 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.934129206 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601147934 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229326479 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.989268651 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.844205955 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843939007 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776061934 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.539520425 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894760053 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171049008 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.860495421 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490528806 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148123057 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.954535156 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78355056 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121644891 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.279045412 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.807858218 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069497812 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841308546 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777507024 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.787031315 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775424578 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118885976 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878121469 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.593235183 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882867586 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170509732 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850493806 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859385749 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865762498 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064866509 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.728425822 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842049232 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.632040448 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985455289 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862465375 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172441359 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775227088 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.844105611 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099536807 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.052482965 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.826047215 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.333100546 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000284205 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315550213 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.892029662 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.905293102 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.885111448 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.113874638 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901103427 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957854408 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895418555 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.841815279 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158465077 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.350586363 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.975414233 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.88757729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968077108 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.16669407 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870825069 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925578478 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845937068 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84241827 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643365014 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394085472 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.843793995 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.847007872 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.827410668 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886499974 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.845368318 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795987995 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.462365735 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871991652 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.859597969 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068163095 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.331109272 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151077285 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779006123 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173547728 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937571261 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.066058064 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.525099811 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.922590516 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105033122 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.821877797 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.859042447 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888710815 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863627784 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943493656 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866539058 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.908462196 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133469067 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.848488577 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.849783429 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.625183444 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879711515 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853504619 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.851157949 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.595654524 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117143373 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.868152715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850458359 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.73781788 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.859095776 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910316868 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850205692 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856093924 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.383520763 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.557551264 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.850570191 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.42535873 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069973622 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856787477 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.559814267 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95982106 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.929119072 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119138685 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905359883 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.780194727 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.558472886 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.53937766 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846265171 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.783191723 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.845541897 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854810966 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858055637 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.042802701 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122994856 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889835926 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.538302307 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.887677565 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857065935 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.852803173 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847483282 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.357550521 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958157522 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.951131675 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.89025108 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991533175 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.863080333 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783414508 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.851436399 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852851171 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846974113 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.847586619 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88028744 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.556508583 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224808427 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108046423 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.459269649 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862267585 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.587830682 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.90540761 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.869985366 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.510458486 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08725182 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.881900533 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858514533 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.859490829 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.613337221 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.553552103 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414178797 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153477961 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152968764 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284045354 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.97913939 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.874908304 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186650212 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783169784 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.406745226 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911415061 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1909251 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793401295 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93348355 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.49290108 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196887617 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862319756 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078637745 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235137909 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.568448186 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991293263 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061038095 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885639987 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.925920892 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808169293 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.148929994 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992469746 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542928311 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052836702 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183728166 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516279017 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974890308 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.8500398 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.53738539 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937178135 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.564544469 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024815389 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.944646136 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.823686802 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322273384 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.857275522 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.079153542 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215256685 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92639061 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.968189011 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786609343 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.863308081 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862400597 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.852204014 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.84871959 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.72312336 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.104007668 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862936275 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786599065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.876268177 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137653203 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.75586528 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.857299187 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851212868 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154643888 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303472499 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016658626 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.861982034 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.369190523 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860518432 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.787566632 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787061735 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.546290205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860418655 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.831707922 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063535284 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.955470388 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.763286267 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.843879861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930193676 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109830766 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.867268475 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123592953 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128013722 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.550644646 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877453793 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.953975659 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.513886717 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.961181667 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.853797825 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.088872868 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609697637 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078931993 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.890342697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.809656754 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854408148 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069047799 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853294399 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.794492237 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083620017 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.577444834 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.913550893 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166233575 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927319486 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.753690057 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.897993719 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.946885601 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866258138 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934294489 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865280768 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.865778725 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865750226 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90059037 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.766303577 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.97791727 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.869633011 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94828983 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.976678874 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.378870354 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.85909159 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131841207 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206455294 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18123349 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913576754 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855842756 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8558921 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791402516 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003689077 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.08167112 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129905734 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.98530652 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.97259573 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88126232 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.519744756 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.975702597 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093360484 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131669877 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.751977199 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274731685 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.892495854 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.856913735 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867553742 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.068557683 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072833417 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177095018 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994278346 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.846677076 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.212245634 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12992581 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.857165888 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857640475 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448728932 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.868612658 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.645824875 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.901158342 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.787078939 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131912979 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868698221 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242044512 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.881034419 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.017917905 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.631462545 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.577848075 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147708696 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.844698876 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922174096 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132908659 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2575264 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171420037 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924921675 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870125681 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.968780072 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006876004 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.732231835 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858192835 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859479192 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90675402 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.56885836 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.868596793 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137091643 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171046285 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.856132819 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.720426584 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881539149 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.869079374 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083741758 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152315155 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114118865 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868849864 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.868314718 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.675951863 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135661108 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918983869 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794161309 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.862779617 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959709794 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108321902 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880708219 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.311966999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.571441879 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168681927 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.878753868 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881526936 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.943036564 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.227433949 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185009207 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.402517644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077865975 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.448520667 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354241246 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157317901 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.866526747 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.930561193 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159636242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.865036871 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.85178597 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896087824 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.131442139 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173088281 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.876514572 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.650855534 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.831198664 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204355446 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423251331 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800334458 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870149075 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.923695951 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.861503227 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.993224743 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871922807 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.734559624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.940880762 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.61790646 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135580016 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.865036686 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.85359858 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.550626603 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.066744454 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890714998 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00534098 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868217051 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.536853823 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.212615447 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.121318993 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.863398685 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.867556999 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.867463853 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86245958 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850567668 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057885293 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.059965449 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145683144 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.889539532 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.895338463 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868575324 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.079889021 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075126557 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.750590856 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00082145 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856721544 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901833705 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.769128971 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.366098381 seconds)
  done (took 1661.856915714 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.90018842 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.889291582 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.922188678 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.952712751 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.88262477 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943833162 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.940805672 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.889212213 seconds)
  done (took 57.117757799 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.861675301 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.068451523 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.87162427 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.864687961 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.872023565 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.864646358 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.027404474 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.885808224 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.872446994 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.875148322 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.865259688 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.862816094 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.175818881 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.884799999 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.86517234 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.85064389 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.871866371 seconds)
  done (took 74.255403711 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.879518569 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.927733521 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.90320864 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.881317003 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.814559425 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.875013535 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.659925206 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.881672939 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.865506081 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.087959088 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.501850795 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.872513136 seconds)
  done (took 89.949725653 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.875175865 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.872059726 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.872477604 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.871672708 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.87302757 seconds)
  done (took 11.165749719 seconds)
done (took 2167.015861597 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.118367054 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.083493569 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.087291427 seconds)
  done (took 5.970307778 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.007608703 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.055984099 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.175426676 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.180710676 seconds)
  done (took 10.213874051 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.146754171 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.243375085 seconds)
  done (took 6.181654755 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.250029151 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.868225304 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.234831643 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.856313013 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.859520443 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.858985708 seconds)
  done (took 22.373041028 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.864522547 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.865402921 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.860624985 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.866387274 seconds)
  done (took 9.248756948 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.843422968 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.532163403 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.845140285 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.860429263 seconds)
  done (took 20.871559814 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.612488241 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.619967074 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.607241933 seconds)
  done (took 9.631611978 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.339185954 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.750789126 seconds)
  done (took 8.880399028 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.126491426 seconds)
  done (took 3.918448751 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.995799716 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.170578877 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.422486568 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.371017814 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.465290638 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.531922779 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.167435439 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.097223332 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.262542181 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.289709659 seconds)
  done (took 24.568806245 seconds)
done (took 137.128633376 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.239553434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.098609533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.056552636 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.197536178 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.086234291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.055409682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.065262171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.174775045 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.701624513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.69999088 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.191769181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.087839154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.226567989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.109685892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.225809906 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.104352206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.085671465 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.253481946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.891989721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.127336803 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.066147965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.833035009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.035070134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.846723214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.086621002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.013700788 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.410324309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.108661804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.051005607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.421440307 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.014547725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.280191708 seconds)
  done (took 172.640981952 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.793743846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.861347125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.861278085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862469198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.480398406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864857858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.863593363 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.860682482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.102372717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.095668276 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.859522621 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.468588197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.86231988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.863036674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.862511589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.864497862 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.237505411 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.819119185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.861624524 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.862755997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.866429431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.379819531 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.863727632 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.400738956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.187760307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.866497129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862691289 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873125135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.864086562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.868611335 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.872731255 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.86336707 seconds)
  done (took 208.775910362 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.865759974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.864118635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.864420176 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.864076041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.861989176 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864165676 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.864062129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.864739579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.424530487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.419567699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.871384491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.868282564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.864538182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.871784873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.876434808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.864684975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.883999967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.876225767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871039443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.875334833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.880752037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.677681704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.882238604 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.66372476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.869200499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.868762784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.86683147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.876743154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.875203484 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.878195757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.87646643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.865323474 seconds)
  done (took 220.369194814 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.069921357 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.870511278 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.871788772 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.822325037 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.873918023 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.871894697 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.865275933 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.069110224 seconds)
  done (took 19.127892461 seconds)
done (took 622.717218451 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.305533891 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.144961578 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.046876501 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.897041692 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.132384404 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.921929267 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.892550037 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.955156371 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.613321027 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.956109936 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.577148295 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.906161624 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.669827435 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.912309846 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.019686897 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.950695512 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.463580833 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.542924259 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.063038335 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.955904317 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.062133136 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.853302333 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.963126057 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.625478953 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.689358787 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.886825238 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.069789092 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.467807574 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.90105588 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.05654643 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.593144756 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.2576168 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.899583645 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.888129571 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.941737729 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.925633003 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.246613405 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.89755481 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.022688352 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.661328054 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.946660446 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.501841627 seconds)
  done (took 103.085347556 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.865478678 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.864860487 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.859748611 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.863708012 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.866283009 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.862908483 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.863253964 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.86238103 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.865069689 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.861797507 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.862991693 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.862828837 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.864578508 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.865102384 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.862562916 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.86221868 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.863577847 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.866375178 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.862676365 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.862915761 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.865457894 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.865662933 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.864410245 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.863934359 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.865223958 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.864867389 seconds)
  done (took 50.272994016 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.877186186 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.01913778 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.095329084 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.892565226 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.878408133 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.881293079 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.895617543 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.880792909 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.880341351 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.881153159 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.970425508 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.883582442 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.894450071 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.094942911 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.888306483 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.875832804 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.876615983 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.875850474 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.023830277 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89236312 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.897035717 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.880934387 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.893584952 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.890130023 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.877829324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.878735408 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.879497544 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.352911328 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.885522079 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.970289029 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.918028365 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.89406447 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.321955645 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.103256154 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.924750721 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.882620823 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.876812152 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.975702424 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.883294677 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.878281984 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.894981831 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.883079853 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.097015043 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.376862518 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.892806834 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.879650443 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.363483722 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.98311719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.920801046 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.890733439 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.104020503 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.891270419 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.880854841 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.880371947 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.91651872 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.889779532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.880142197 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.25020881 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.892157555 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.898453458 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.884217684 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.879097419 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.034974312 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.887663869 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.020593705 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.888511054 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.888904775 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.881213741 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.097662963 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894707947 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.38649955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.90208966 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.880546 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.973061549 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.02649493 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.386734836 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.890763059 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.037601364 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.338239392 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.90051508 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.88773398 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.343776797 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.907484511 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.886793602 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.883964139 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.884206158 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.881879854 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.924472563 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.8975117 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.317473057 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.383851522 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.264128111 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.906123704 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.897893259 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.884372976 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.257631163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.885296787 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.883785811 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.093557663 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.395193887 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.892989236 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.889935834 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.370754776 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.891525769 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.9006067 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.890660892 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.105972359 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.893772926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.926426284 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.883419758 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.89005492 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.886842523 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.901791137 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.888294573 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.885893748 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.357510829 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.988527013 seconds)
  done (took 233.190422721 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.877664576 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.876284108 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.878767254 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.875870008 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.876632973 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.884034743 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.876581856 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.877579535 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.882444413 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.8775724 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.876286704 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.880118251 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.879228061 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.884977957 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.377965751 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.890263637 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.495962686 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.884423518 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.884549474 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.881704074 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.565213288 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.889665487 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.88611357 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.883062799 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.885644065 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.888193641 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.88670483 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.921317274 seconds)
  done (took 168.337172312 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.892065198 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.073071059 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.907802521 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.927304413 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901326082 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.889839903 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.916012748 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.911433924 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.898258072 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.888255562 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.889510397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.951077441 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.902778645 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.021723309 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.920641005 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.923938648 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.996768529 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.896198072 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.890853459 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.888961006 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.918879712 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.88810871 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.953270645 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.016252504 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.906728536 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.008238726 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.896213999 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.893304641 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.891391053 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.007609371 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.904898863 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.953357418 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.916863347 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.909829821 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.014454025 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.005486722 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.995886413 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.919080489 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.896269564 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.888952622 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.890110052 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.879761377 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.005979774 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.9080187 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.891985608 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.998390629 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.907697483 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.892670731 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.901541106 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.891644446 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.90656988 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.910954891 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.961440831 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.022721827 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.925053752 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.919197997 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.917209819 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.185375292 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.902698104 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.98989779 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.885641728 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.011910237 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.909009353 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.881057541 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.89272825 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.89926345 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.922214727 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.924234116 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.997283032 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.898601036 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.993590079 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.925611076 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.900109672 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.891494856 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.894623739 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.010035589 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.009174849 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.924793643 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.932025997 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.925442666 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.890468847 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.893682475 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.882032257 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.90882222 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.896246394 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.009485714 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.009565348 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.900258284 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.895018412 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.895593714 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.89477753 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.921257672 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01800413 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.929055958 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.991869225 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.960724783 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.968055717 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.905636713 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.908266483 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.898892836 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.958759307 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.907557823 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.90617558 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.232409751 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.963978488 seconds)
  done (took 205.079629627 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.364952428 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.947488484 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.95186411 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.185623451 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.310110213 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.778889618 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.941938774 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.943345443 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.970594907 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.106375739 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.999910638 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.956739478 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.929382019 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.917952944 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.942043272 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.963830885 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.947725672 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.232382715 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.062104031 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.060329024 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.926306943 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.233626279 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.264186155 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.336534218 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.978086865 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.265594574 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.631589412 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.185312339 seconds)
  done (took 62.161589843 seconds)
done (took 823.924747876 seconds)
SAVING RESULT...
DONE!
