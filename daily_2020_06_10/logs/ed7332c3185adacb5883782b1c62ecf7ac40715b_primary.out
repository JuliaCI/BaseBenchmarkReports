cset: moving following pidspec: 26901
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.327144892 seconds)
loading group "string"... done (took 0.568529912 seconds)
loading group "linalg"... done (took 8.244111932 seconds)
loading group "parallel"... done (took 0.17274535 seconds)
loading group "find"... done (took 1.260611771 seconds)
loading group "tuple"... done (took 1.993502263 seconds)
loading group "dates"... done (took 1.332779295 seconds)
loading group "micro"... done (took 0.204194215 seconds)
loading group "io"... done (took 0.950663997 seconds)
loading group "scalar"... done (took 40.211624134 seconds)
loading group "sparse"... done (took 12.836430473 seconds)
loading group "broadcast"... done (took 1.123175672 seconds)
loading group "union"... done (took 14.715960805 seconds)
loading group "simd"... done (took 4.77450137 seconds)
loading group "random"... done (took 9.853116545 seconds)
loading group "problem"... done (took 1.58429458 seconds)
loading group "array"... done (took 22.836730853 seconds)
loading group "misc"... done (took 1.72664909 seconds)
loading group "sort"... done (took 3.629775432 seconds)
loading group "collection"... done (took 18.623321014 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532178068 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126815623 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13816996 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120797665 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150291393 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117738736 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125217002 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087538436 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.9252723 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150150267 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114599872 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434723451 seconds)
done (took 5.414934572 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174921103 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088288902 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079286901 seconds)
  done (took 1.231731547 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065988488 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127993042 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067131749 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06775393 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067512669 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06775611 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067481809 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067133028 seconds)
  done (took 1.597651329 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073252923 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070506946 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068022945 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069651121 seconds)
  done (took 1.34497099 seconds)
done (took 5.490145947 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.797339076 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214976613 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191047507 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412159718 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138364686 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182765002 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.660699067 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324830133 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208909941 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098901509 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117264129 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.366131107 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127272528 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664602854 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078128449 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096529035 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140819973 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460058021 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072430441 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086060081 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093569293 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131881609 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092284359 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076980891 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150131364 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071218293 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14396079 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083988802 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069255324 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220846323 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175287388 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665377735 seconds)
  done (took 10.516339362 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101506892 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099308723 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069311718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12554887 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098358208 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070135316 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077697224 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069916755 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093217934 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132446043 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091439682 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108268825 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06698543 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07062026 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086121371 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204273628 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08081097 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082296743 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069024906 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079187544 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10817249 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078264794 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084358232 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080174579 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129576482 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171982614 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100416018 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100441138 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070061475 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084649111 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117701105 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130510634 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066546155 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067291163 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125720446 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095615844 seconds)
  done (took 4.599870761 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107930708 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.157455778 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092957976 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144526353 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067343647 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115801643 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068033108 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086242299 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242722506 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.463591077 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.630944296 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.148848435 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11700705 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105218036 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074049928 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069472474 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068657071 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.266322501 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102244236 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121537965 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086020532 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072778273 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072390923 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067304668 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074348646 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066276619 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071524199 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091601374 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078616093 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333531133 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127831642 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069062603 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.832783529 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168772854 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06864198 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10688017 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166016383 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09703917 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143090173 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068144112 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064495424 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157939865 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063633955 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.207489536 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068219933 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085534397 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113653945 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120723427 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066080905 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066837149 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16717094 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065639342 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082432357 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.257976215 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153326798 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06960084 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300858191 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097227477 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074427838 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068183759 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.216806676 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118060117 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069509929 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070625577 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071619873 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071443296 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379043709 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069249065 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.109265575 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072186227 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080302156 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072768243 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073671517 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081475631 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081253321 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09355192 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093878577 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067417434 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07427678 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067555129 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070416987 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069513912 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09565495 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.399258115 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069928129 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074728735 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067271165 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096322707 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101460566 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070314349 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068334432 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104979415 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071010397 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066795743 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068752241 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066118325 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122330073 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072708408 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112973467 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066997123 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064328226 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178739293 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09796221 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07086015 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101691008 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077537247 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071569926 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.470641917 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066098124 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064874553 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072902465 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066705295 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068587932 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067290035 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081137699 seconds)
  done (took 22.232282211 seconds)
done (took 39.519298975 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245212022 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084981168 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085244501 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086353607 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084611167 seconds)
  done (took 1.746822984 seconds)
done (took 2.887591073 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129095168 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102190518 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066395533 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100613632 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06684482 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104489134 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106699919 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086449871 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103246258 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066750892 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101654564 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066617594 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06691648 seconds)
  done (took 2.328171963 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084132033 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085116715 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070866366 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084483573 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064208452 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083885885 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082505641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090405725 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08310739 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074293173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064602319 seconds)
  done (took 2.007553128 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084303046 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085618304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07090314 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083820583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064792367 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086417528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083389303 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087296997 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084091903 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075558459 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065048788 seconds)
  done (took 2.000841912 seconds)
done (took 7.46919829 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077321511 seconds)
  done (took 1.195732423 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.539753179 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.635431476 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081992652 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103252497 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198292393 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112482734 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239910404 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085752177 seconds)
  done (took 8.294563209 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097082581 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071100739 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072957555 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083790645 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070854457 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071293865 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071073603 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072724303 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071960885 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071462113 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072614232 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072016505 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072502401 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071358389 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072723648 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071331028 seconds)
  done (took 2.390818779 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099325415 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097740104 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075341845 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077717938 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074930756 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074512364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077143048 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076765736 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073661607 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075521121 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078419328 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075527094 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075598712 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066442831 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076536062 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079178345 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073494418 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076920005 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077211966 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077991901 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07860781 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066097823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076461823 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076640039 seconds)
  done (took 3.090907853 seconds)
done (took 16.101194442 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115793013 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077924145 seconds)
  done (took 1.319500674 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079291027 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079574651 seconds)
  done (took 1.293050764 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07748561 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063797596 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08650834 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076638536 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065514293 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065115367 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085113846 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065649717 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065091206 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065811772 seconds)
  done (took 1.848671316 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066364554 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075244237 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071295124 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081873506 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072780143 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067133342 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072225878 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067785995 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076617325 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065819025 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070576834 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086399907 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070438035 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087417388 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071594605 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070051678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07259632 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069244475 seconds)
  done (took 2.456259683 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063778141 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065678737 seconds)
  done (took 1.269657439 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067891498 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065109187 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068433844 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067603336 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064868111 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06432958 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065468507 seconds)
  done (took 1.598994401 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400545902 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124497409 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33029671 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072470517 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082639998 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257870023 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06639201 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071091335 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071693178 seconds)
  done (took 2.65976271 seconds)
done (took 13.590603399 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082978186 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088878894 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101049518 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41577755 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093732392 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068617886 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115268925 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184549595 seconds)
done (took 2.309056194 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219723135 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.862328506 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.485376916 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215487029 seconds)
  done (took 2.712044934 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346907712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0832757 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078721723 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067158312 seconds)
  done (took 1.727777339 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067696864 seconds)
    (2/2) benchmarking "read"...
    done (took 0.187871124 seconds)
  done (took 1.404110139 seconds)
done (took 7.220064857 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066679557 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066522432 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066890322 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066332741 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06621134 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066472756 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066285436 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066344781 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.066397294 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092115071 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.066195726 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066445826 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06709442 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066978628 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067170396 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066469617 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066710046 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066759549 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066834007 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066399253 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066568191 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066831251 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06708221 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066733778 seconds)
  done (took 2.806874408 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08223384 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06918609 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07048587 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070998359 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07128632 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070770597 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07139204 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069345447 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071245247 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069263034 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071565245 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071412838 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068867843 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071852534 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068692222 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071537042 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07177753 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069463342 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068786109 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071590308 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070463563 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069152823 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071583755 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070505449 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07134525 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071223058 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069105888 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069070408 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070813093 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071322686 seconds)
  done (took 3.282721252 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067421749 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063038111 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062921669 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072129513 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062806525 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064049728 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063017875 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063695936 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063728799 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063407486 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064464575 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063477494 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063698197 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064233379 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064052752 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067745951 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081054813 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062933132 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062863513 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063585298 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067472999 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062723243 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06326073 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062534121 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063250543 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062413575 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06353914 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066128556 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064142203 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063122461 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067250662 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067485621 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063792547 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068407593 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067472047 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06295075 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067331045 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062959934 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063412877 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062830395 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062667212 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063121146 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06312495 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072019392 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063266177 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064603152 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063241109 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064326497 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063399816 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065051111 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062551541 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062628868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065356508 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063770664 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067993769 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062639532 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064163405 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063067579 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06365845 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063012058 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062572552 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06275027 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066230193 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063526739 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080196485 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072246389 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062776692 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064112672 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063925813 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065998253 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064509806 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078778594 seconds)
  done (took 5.845053907 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086639493 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087073833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066289408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066824427 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062760023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062404557 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070497786 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062301941 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066858287 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08135888 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062459716 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067114757 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066993529 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066706731 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062211256 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067576142 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072387704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064113301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063210022 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066166821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062398778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070941437 seconds)
  done (took 2.686148911 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153372833 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068569581 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105964142 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072453832 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071213382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072671793 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067970188 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068351201 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068398799 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069001675 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068894289 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069510975 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072466169 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070306369 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070088207 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070068358 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069927338 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069993724 seconds)
  done (took 2.547592192 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080319772 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068947075 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08907749 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069073878 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068928528 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06902355 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073335379 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073835938 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06883158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068883014 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073935873 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068688715 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068600463 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069606961 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069152971 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068884862 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0685285 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068833499 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073729357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0732911 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073312662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073834472 seconds)
  done (took 2.751167056 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08017058 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077186339 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084269106 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070607912 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062076876 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063508991 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070120408 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06853401 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069878621 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067767092 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06811665 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063673214 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070572395 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068862411 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071338739 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068643924 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067862784 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068232861 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067782642 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063828805 seconds)
  done (took 2.563833894 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085395569 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066950175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066876587 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073059682 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066573997 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066952071 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073975881 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066832052 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066940116 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088429609 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066827417 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067187098 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073496729 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071052903 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067293389 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074047542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073674049 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073476125 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067288165 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069412348 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088628979 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066739745 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07352931 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067131994 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067399886 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067144341 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066996123 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07091555 seconds)
  done (took 3.167918713 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066585948 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065823035 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06637763 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066413613 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066452503 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066320017 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066764077 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066099324 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066638974 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066688747 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066987551 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066146257 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066579999 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066960242 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066733524 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066698038 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06653811 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066661864 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06684428 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066789529 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066357943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066674104 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066651878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066989773 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06685502 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065820123 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066614554 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066067375 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065684708 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066335484 seconds)
  done (took 3.167174428 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077014605 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07517104 seconds)
  done (took 1.329880327 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064865634 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080734453 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061953635 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073104563 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070872431 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065312276 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071436098 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070541004 seconds)
  done (took 1.727867459 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088004768 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077092688 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065979195 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078138945 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077060948 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086826766 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129426932 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065898264 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076240459 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066787524 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084535895 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067815422 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076132676 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070979984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076206934 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079524642 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.0632724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070495915 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067227645 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063924339 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066004656 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079014616 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074932165 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063706776 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071031316 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094009669 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082202909 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065132962 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072881927 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078016612 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075793337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062786685 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065333033 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065727798 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06350726 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076529482 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084759898 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072430262 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078606734 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066741627 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074117023 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063093392 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074390122 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076316779 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081325224 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0653007 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065428568 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063190683 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066087944 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071931938 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063134717 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06971182 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062687457 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077342217 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073316712 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081108572 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064123112 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071271482 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072152369 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072881268 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076813851 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071681501 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074902763 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065185716 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081431511 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075474567 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077294827 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063156491 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062390734 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063600515 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079827296 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094968254 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074886595 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065551728 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065927664 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063198876 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072848415 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066027557 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074669728 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076519827 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064736808 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070216441 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077870816 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070120459 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071368377 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071791262 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063475297 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068747962 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066492508 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085675092 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064255425 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062888522 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066244754 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080664834 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072330737 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065193012 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066652457 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079697227 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062729701 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06577926 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066179176 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07124184 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079327282 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069426857 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06954807 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078630532 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073451217 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069519258 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070943711 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061732581 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065105073 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066383399 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07555266 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061582248 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071257471 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068452797 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06480873 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075907006 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0626082 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063798171 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076813237 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075931033 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062913832 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06141955 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07092003 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064055718 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066292367 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077359246 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062847953 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062803503 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062243706 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07251086 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063808816 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071762116 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067987619 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071226725 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.191125385 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064791448 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07146822 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079340606 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070199386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072795713 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076453844 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072392824 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065685102 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078609656 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072332305 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068164848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07562806 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07001245 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063939846 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067705877 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072595149 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063986157 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072935314 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06783377 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072037741 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065719994 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064929454 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071646017 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065735348 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067781823 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070347566 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064734072 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080712148 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071228804 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063163574 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06260731 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072579975 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06701493 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064596382 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067715663 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071924792 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065780561 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063609888 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064987476 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071627133 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073628659 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068558293 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066508082 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075068903 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082766198 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06496134 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072204222 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064987339 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066254291 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066134636 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080296634 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075773455 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069680878 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072573311 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063112582 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07565539 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077831257 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068139094 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063559695 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067993799 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069244482 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077560351 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069462658 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065841617 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063836126 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071144676 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067705918 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072575644 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064871575 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067790617 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070845148 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06399641 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071486051 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065921728 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08002289 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073199164 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063594042 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067680442 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063925288 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077090005 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063446319 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067037951 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067717081 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066177234 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064923591 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071760316 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062834215 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078501292 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077982969 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068956458 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066518029 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063387746 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076013159 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069312914 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071773712 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07105281 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073205832 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079233058 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06620963 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070678002 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080908804 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065117359 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062541149 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074974132 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06394918 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064399253 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064528122 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066986096 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072516506 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072823662 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075630088 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06201405 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071674957 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062955155 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066790513 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06276683 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073063506 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071287841 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06891068 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076586758 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064684428 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064347043 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071770153 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063945567 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064658321 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064746429 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07083074 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064650663 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070175637 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067129099 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070544511 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065607274 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061581859 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069783611 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064012187 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069351652 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073363492 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063722915 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070063032 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070869033 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.194519324 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073339534 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070982542 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069261631 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073820818 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072793987 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071227014 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072602615 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063929489 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07791153 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065004643 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078574527 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070443624 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062505741 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071298152 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072217923 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070396527 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066341329 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065685875 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07069452 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064687351 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071990392 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078177611 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066473942 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081158544 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077032068 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071022462 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072155322 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070465266 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070815084 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067420639 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069252375 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065813127 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070911623 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06532376 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07472174 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072913397 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07015332 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071666085 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065809975 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070932429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066206613 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062706232 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067389122 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067457839 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064798257 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078073812 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06552215 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068696143 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063335108 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064117031 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06321767 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061587088 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07040389 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071452229 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064118293 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074299686 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066440505 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070419655 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079349072 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061376504 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062370343 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061876296 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064905919 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076345562 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0640934 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077517147 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069655702 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066454815 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061477999 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065527182 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062778423 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061574211 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062636951 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073728685 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067600718 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06443648 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06533796 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072591672 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066447967 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078491899 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06453243 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069510317 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065413033 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06264249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068508452 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068158866 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072639111 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064472178 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065259675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062241512 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065116248 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069605933 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071136554 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064810449 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071178626 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077641891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064981645 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072368257 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067825725 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063706235 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072520198 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065570414 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065057769 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067158657 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071274505 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071810855 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065206829 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07877486 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063065201 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070048042 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06375698 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061601583 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06526163 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064968594 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06513714 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067713348 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066233494 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07767553 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062755881 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070832048 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069432679 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067564657 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074885826 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064869728 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070392452 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069300258 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066060514 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070548449 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077201399 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067978777 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071640948 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064946533 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070180934 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074056968 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066866383 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075714155 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069663733 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064475059 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069657409 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065640951 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063929777 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064140631 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063489236 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074385217 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.202485414 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069055895 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068550788 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064160721 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071303014 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068686493 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079180585 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072704195 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073004999 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063841627 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063495097 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066264895 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066827678 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071402596 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072584599 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075329213 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072224613 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068749053 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06461487 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080013415 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075286809 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073671492 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066869241 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073026346 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065820958 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072779169 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070335587 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070521159 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066952797 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073287698 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071369211 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068001964 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076331517 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073006824 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065808319 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071766682 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072002401 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06969659 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063613786 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06613079 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072034265 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074260285 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072107079 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064983133 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081020207 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06672556 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070625418 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067880959 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065271894 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074407273 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063693407 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072117004 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066777393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066392947 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063654169 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068224372 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067244864 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073355643 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068047699 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064386004 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08149536 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078128882 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069831619 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063268575 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063127836 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062222683 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063055305 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068253334 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065694909 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070258229 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081365455 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067547522 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066824914 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063630809 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065728546 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073145106 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073847953 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062934418 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063483727 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067912485 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072499339 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077289702 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064292046 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065304359 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073233108 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072402389 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063507721 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068332507 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062686741 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074133236 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082994567 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066469608 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07138734 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075595904 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078329744 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065344913 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063352241 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065747174 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070921018 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069534771 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064225313 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065052558 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083075917 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071592703 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066317515 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062888268 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070575439 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066369503 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077327799 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064633265 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064344557 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074244773 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071638698 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073263769 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075444471 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07990723 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071584881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071766031 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064336009 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070276891 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064292232 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067821157 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06648508 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065086925 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06779968 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068734457 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065454564 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079937278 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076339204 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065459493 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060664366 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065464682 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065851596 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061531965 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063576523 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061861574 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061412925 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06168697 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061926721 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068499307 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071183166 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067225631 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06314066 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062424228 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.193999983 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075311292 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072652777 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070962763 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062134101 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064678279 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064865034 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072934446 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066868168 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066052553 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070505788 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07005828 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069822003 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062395229 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075588001 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063281697 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070762419 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066579541 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064458196 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06456687 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071399574 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068257936 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065651991 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070907905 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070762347 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065987803 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062044142 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062118908 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073726595 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062365202 seconds)
  done (took 43.144730823 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102442517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066069894 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063738984 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064155072 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073849853 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065447465 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064791367 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064985283 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065453893 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067390819 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06406797 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064256939 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071730143 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079869802 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075140042 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068615457 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064766291 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065664142 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064559578 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065562839 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072543014 seconds)
  done (took 2.715907439 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072516922 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079737546 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076395672 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081645216 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073326515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069705178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077103036 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069599035 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078035278 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075248688 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077633693 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069259999 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074693512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075610664 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075077664 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070442321 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077909276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07350477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069815939 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077996199 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070345091 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077239598 seconds)
  done (took 2.894735534 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066457562 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065731896 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072092589 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063563546 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065005307 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063310815 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06867949 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063725239 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067615552 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067771774 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067611042 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067439202 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072068344 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064031546 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069201523 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06332554 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110978428 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067705264 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065910832 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066426159 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064412462 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072491747 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063911303 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064411486 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06736876 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068096272 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066073062 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063601054 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065843967 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067565191 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065554691 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063566768 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072264362 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088409072 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067447971 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067594698 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064210609 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064768626 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063414496 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063666408 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071144261 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063756337 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065335737 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071631545 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065904621 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063086092 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071352066 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06456504 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062732865 seconds)
  done (took 4.576489392 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076550233 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112481655 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069460972 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092813292 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07848776 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071181158 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070002726 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094216488 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06534993 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065963316 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079977214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080130931 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067335691 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069055273 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07188759 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067281094 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068441746 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066078213 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070145421 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06684264 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070630398 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071306397 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078645453 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079161882 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068395173 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066038749 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066967823 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068410228 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076637993 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069245027 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067406023 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067919156 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076954124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072399312 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0666026 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066805873 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079710379 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067264113 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067347423 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065127718 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066374994 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068515436 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071353491 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080117972 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067755875 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072312893 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066951398 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064789071 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078927351 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066494611 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072078907 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079920927 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068438847 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067528794 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066678613 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076337445 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065505594 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063948795 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065934042 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076344591 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063431194 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066446719 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077192181 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064812474 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069242628 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077550133 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070086658 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066377727 seconds)
  done (took 6.287999711 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075011373 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095510196 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081041031 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08142394 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074932432 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075442611 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075234886 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075348972 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075184923 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079287138 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074953088 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117153865 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070999697 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077486967 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075336763 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075411708 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075354776 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075518569 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075449943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075371317 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074835438 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081431954 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074994032 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081732166 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078164655 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070792654 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074730378 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075109003 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081539098 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075870526 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078418192 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075020155 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075286605 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081689436 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078211722 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074660333 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064427183 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07498498 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075277495 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075003536 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070858817 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081670083 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075081436 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070618387 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075257901 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075248159 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08142438 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076243225 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075372851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076823929 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073000015 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079521502 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072876835 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073415493 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079252621 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082172994 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079408325 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079542474 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073666045 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079330467 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079160515 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082914713 seconds)
  done (took 6.089109887 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080303984 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071745343 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084419349 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062387971 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062060552 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072389947 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06219339 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062266588 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070754222 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070507978 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072584702 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072105461 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077642435 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072745215 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072644872 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074395789 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072012009 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072095441 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070317609 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072340775 seconds)
  done (took 2.718296693 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078577289 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082653231 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069544853 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07362404 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069642505 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07409716 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068344442 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068098143 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068342462 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068031726 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073979607 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07359784 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068028569 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072191448 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074462052 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074310969 seconds)
  done (took 2.435383492 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086030469 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072080536 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078938452 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06526191 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069220784 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064011983 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064834291 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063589371 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064170718 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07871404 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065189688 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076813877 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065093496 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064029696 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064526532 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071102249 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064390247 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065227356 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065166691 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078382014 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07212607 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066368428 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069995354 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065208521 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070690455 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072695304 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067189713 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068865345 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065267714 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065355151 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070828273 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072444338 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065014004 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065759869 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064061926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064692464 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064780391 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065720445 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070760636 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065247228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082185609 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070067449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065014997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066171468 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064184862 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065218144 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064108606 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070856841 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064952284 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070444945 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06503798 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067310294 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065236173 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072907481 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067667273 seconds)
  done (took 5.04182443 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081130938 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069089657 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063319748 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064090036 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06914576 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070043282 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068994484 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069366701 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070466204 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064140101 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070092233 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068856993 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070198293 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06955502 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069949479 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069767787 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063570276 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069844897 seconds)
  done (took 2.536946762 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075165346 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068618132 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072976259 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068549245 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068669435 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067777343 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063584175 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063890468 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06405281 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068955205 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068595764 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068047422 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064010715 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068632739 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068596845 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068693323 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068727441 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064235064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068743635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063960597 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068351622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064096459 seconds)
  done (took 2.771799737 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098410337 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085313372 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143525075 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081272081 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089424194 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074157244 seconds)
  done (took 1.858134742 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096068423 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100154676 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068543917 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068791864 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074460951 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072050631 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072312441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072795733 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077055756 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077923511 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072693807 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07730052 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077749828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079984663 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07465376 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074963627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072544936 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072603306 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06899606 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08514951 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073053331 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077372575 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072663069 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072406975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072805684 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079003142 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076716993 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077735898 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071787576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076709095 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074419085 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072262752 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077215441 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07560274 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06729737 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075098289 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070903519 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081718288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074792312 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078932918 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069008214 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075040807 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077049998 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07636941 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076869675 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072633211 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07678223 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072018841 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072698518 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086768338 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074562853 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078654081 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074380877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077548944 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076681414 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084106597 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076889543 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078363815 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075237911 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077361536 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079143798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074973563 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07887092 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077870451 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075025558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079150172 seconds)
  done (took 6.319964447 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107547278 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069437765 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072295525 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075868761 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076984924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071500051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071751557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071036207 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071024493 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068505572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105953565 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071188031 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077491776 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079648231 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071836913 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070938321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070820864 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077285857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069865465 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084630603 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072930959 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079102909 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079146242 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078993225 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077525566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075077121 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07267237 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072411317 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071239642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070618719 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075853122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072839194 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079513732 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069567993 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078966502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073019717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073180039 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077147134 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072619354 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075187188 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079045914 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082389567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07260062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072378371 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077414133 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072329621 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072304832 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069370959 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071228598 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068615575 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07512604 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075070524 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075185416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076635499 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071972708 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072216715 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072133828 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072288464 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072491836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07432671 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079052747 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074066924 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083532844 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072772496 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072759075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079105428 seconds)
  done (took 6.281917111 seconds)
done (took 128.699391505 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211482893 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184728517 seconds)
  done (took 1.668452475 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076516191 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105188994 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082909497 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133205263 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07119951 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105597444 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104055431 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08376213 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07152931 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071934196 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071782746 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074192071 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137612241 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072132668 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071355746 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074068605 seconds)
  done (took 2.70341349 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10768284 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2178309 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10837547 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068778179 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103899309 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078897875 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071636317 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084627987 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078272921 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0732195 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079832331 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077669626 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072690005 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077524163 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078736582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08030242 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.075178232 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080016517 seconds)
  done (took 2.913648685 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106552729 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096965972 seconds)
  done (took 1.504122726 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.176991345 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133616023 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201913049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344977079 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.151089801 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.431475085 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138707403 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.137889509 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113096644 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135328713 seconds)
  done (took 3.258243258 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106980612 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.204192339 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298787838 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120947099 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076392594 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111878368 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122378532 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082049494 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081401978 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081029962 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081450684 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079152263 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101942644 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077278677 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076120218 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078830157 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103945993 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076669078 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078483924 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079075674 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105742275 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070205933 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078079211 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077157558 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081156967 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081032942 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072796129 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071517886 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076941541 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075543238 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079268965 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.109049358 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078503922 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105106844 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074031743 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106200839 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078413453 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074311354 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075548981 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07430279 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077766357 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077761644 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078764527 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078623216 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071392309 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078506722 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071853236 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069934976 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080541183 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071461047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080324756 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079269681 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104893477 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071173362 seconds)
  done (took 6.17961091 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111976319 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106688644 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071399802 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113114938 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104828162 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070816987 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10623449 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099340828 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107541495 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071213195 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069533916 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071436784 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079587625 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081619871 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116206943 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108287548 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073042949 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070813773 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108509792 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107987554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069794328 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102482739 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098572915 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107338197 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069036576 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071132186 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06947541 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071266833 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076384245 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077850174 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070075638 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079898359 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083786205 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077204084 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0687198 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06961828 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069586593 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077950189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078953808 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07848341 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077230555 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070214811 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071402957 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071892811 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071908108 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070793855 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079713683 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081429189 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080094555 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07187095 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07303029 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071158988 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072467869 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081276053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078970982 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081898936 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081342885 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071210621 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070991985 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074038422 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082175469 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081168092 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080818173 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072065143 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08106446 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07131309 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083153471 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08536029 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070402899 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072258683 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071180799 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071537714 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072297067 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081505277 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079013472 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072738094 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07177964 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071414404 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081684711 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079542054 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071522555 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078429661 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070330494 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071265833 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072415997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07256457 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077603717 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078411146 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072095589 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07095844 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070302172 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070254198 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0681649 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075966373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078292728 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077775593 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077096003 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070266817 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077116259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076058811 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070481627 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076559844 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068594244 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069887248 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070700721 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077969817 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077093414 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079544044 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070738858 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070112706 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07762335 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080058459 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070434748 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07717079 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078851867 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078035181 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069978535 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080210473 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068504648 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077194011 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068452049 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076482489 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06806339 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075072375 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068092398 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067506461 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068027623 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076017224 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068977247 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068469525 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069239787 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067968521 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075548857 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07870977 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069353267 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075142937 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075053338 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069293207 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075042586 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067999029 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075889477 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068117042 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068690532 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067439849 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077997285 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067952014 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067978738 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06807189 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076708291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068307413 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076948294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074597003 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06731828 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078247004 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076819573 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073811208 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077057409 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069171019 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06775919 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067984943 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06817849 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07430239 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075705096 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069310546 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067770127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073428701 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075184295 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066511083 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073530345 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073104964 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073290056 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067723425 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067587133 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076112382 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075683072 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073249286 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073337059 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073395085 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067549722 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073610928 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073878995 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067900545 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079430807 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067471294 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.076931898 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074571211 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072150982 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07464084 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075680568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074872926 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075425163 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077256754 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06735036 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066832139 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073989225 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067820454 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067450591 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073277393 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068613761 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068878436 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.07847846 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067973413 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076044446 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066976001 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073971889 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066948568 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068092084 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077732371 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067376931 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068138429 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073641136 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066966518 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073813932 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075720486 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073803158 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067588662 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068076559 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07552479 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074790664 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067150319 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069939013 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068070584 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073641384 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073054034 seconds)
  done (took 18.211330139 seconds)
done (took 37.751427738 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.219946257 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163176691 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.196518196 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121648474 seconds)
  done (took 2.139031074 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115152044 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105011622 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091348365 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068435238 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096630983 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068992716 seconds)
  done (took 1.910903381 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308772879 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209432735 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187581755 seconds)
  done (took 2.065929659 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216673611 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202161823 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473454647 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291193186 seconds)
  done (took 2.647471406 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147315718 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.084923303 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06597561 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084580885 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125367954 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.151722833 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.094064591 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119347059 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077185808 seconds)
  done (took 2.371874605 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149865405 seconds)
done (took 12.781079948 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.243066076 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111482733 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073635519 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067324937 seconds)
    (5/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074178214 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070508615 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.205158547 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.128259302 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07651832 seconds)
    (10/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.099936838 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.241125867 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.205666456 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077529697 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.216197296 seconds)
    (15/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.204248462 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085549066 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.442663082 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075696447 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201815379 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106905856 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093460818 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075460305 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075830219 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077366285 seconds)
    (25/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069801012 seconds)
    (26/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073400683 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082835675 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085943713 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.150962238 seconds)
    (30/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.164876935 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.203457447 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.200938784 seconds)
    (33/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07681725 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085685267 seconds)
    (35/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079586788 seconds)
    (36/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.182181562 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10142677 seconds)
    (38/309) benchmarking ("sort", Float64, false)...
    done (took 0.133675982 seconds)
    (39/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220517768 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076755117 seconds)
    (41/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.126432967 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067544911 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.088666566 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08833363 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075235821 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067198749 seconds)
    (47/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.168504492 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066123928 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089414003 seconds)
    (50/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07641258 seconds)
    (51/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.171083382 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084348934 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080115393 seconds)
    (54/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077739506 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166855807 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121466129 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067422771 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.162876659 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075162153 seconds)
    (60/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.172136963 seconds)
    (61/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.128678006 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205293405 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078476311 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 0.068280106 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075154318 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073944068 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070923088 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066859787 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075788522 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146497924 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.206213386 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183969612 seconds)
    (73/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143125183 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065868426 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.227447072 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.226823477 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086748222 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.17408795 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088607146 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065983238 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074797806 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076566587 seconds)
    (83/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091173581 seconds)
    (84/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.125515629 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065834185 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066043307 seconds)
    (87/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065198274 seconds)
    (88/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.139661153 seconds)
    (89/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066281418 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065595699 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144406385 seconds)
    (92/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.193099798 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137915036 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.328448523 seconds)
    (95/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07907451 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096026382 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138564708 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069415127 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06931928 seconds)
    (100/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180209548 seconds)
    (101/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.131596094 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080571313 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069814635 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096508719 seconds)
    (105/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.17817687 seconds)
    (106/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175450291 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.180203722 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.132627426 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08246402 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098071963 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075122981 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140131791 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142483248 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070909042 seconds)
    (115/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070720825 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187877747 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122355584 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175859159 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073458738 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070006693 seconds)
    (121/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088110481 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.148907306 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092505254 seconds)
    (124/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177729754 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066698592 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130305199 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088080919 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100655601 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067423681 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091582591 seconds)
    (131/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066965929 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124945334 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075615246 seconds)
    (134/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.127497559 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075959216 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094154847 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.233828302 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136618837 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067690102 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176984464 seconds)
    (141/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073284608 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080231848 seconds)
    (143/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074482911 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06828743 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.181090472 seconds)
    (146/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076678648 seconds)
    (147/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07796471 seconds)
    (148/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068901908 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075450784 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170292915 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088405348 seconds)
    (152/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075660107 seconds)
    (153/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077531557 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074312258 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.215106707 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101493699 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07450928 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065895449 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066074409 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073968971 seconds)
    (161/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078905331 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121813556 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065496254 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12112798 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181657261 seconds)
    (166/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067399798 seconds)
    (167/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093149383 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073992711 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066480056 seconds)
    (170/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086872952 seconds)
    (171/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243672358 seconds)
    (172/309) benchmarking ("sort", Int8, false)...
    done (took 0.168930534 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141725105 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077500529 seconds)
    (175/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.079427323 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07706401 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090893084 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08820647 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067861842 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093672192 seconds)
    (181/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075061059 seconds)
    (182/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06754081 seconds)
    (183/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125834374 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066736925 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080495019 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067228628 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066626692 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074938472 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081425392 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073626028 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087178885 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064841719 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.215067788 seconds)
    (194/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081299026 seconds)
    (195/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078249624 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065850299 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06657233 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06588662 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068108603 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.202753136 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066452822 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066925017 seconds)
    (203/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072419459 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068409966 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.071369214 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066738315 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.258090369 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.183530723 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068456951 seconds)
    (210/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.081320436 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178135573 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075070545 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077601157 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071639926 seconds)
    (215/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06932785 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070356105 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122138463 seconds)
    (218/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070233163 seconds)
    (219/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069918325 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073231129 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068696371 seconds)
    (222/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082994732 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075848587 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068216984 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06682484 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076950878 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073822734 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066548549 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073149249 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067113235 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077657991 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07533484 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066760916 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129594355 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137662521 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065496976 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067835205 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069030741 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068343853 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076740186 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069961152 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069169298 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137697027 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.0910394 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073633459 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068819956 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093543619 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072941756 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12865631 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094129291 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096624369 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069319212 seconds)
    (253/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069680589 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091278868 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148220218 seconds)
    (256/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184516288 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084158367 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069894923 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068404157 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.069246463 seconds)
    (261/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.069500299 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07781666 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069174133 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069627815 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.072604788 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094384091 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072774086 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068257033 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093291584 seconds)
    (270/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078307823 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075694541 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071823819 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.071231095 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078341607 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112948445 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075993043 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069657153 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.081332463 seconds)
    (279/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079361177 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07263556 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076779523 seconds)
    (282/309) benchmarking ("sort", Float32, false)...
    done (took 0.13681585 seconds)
    (283/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077375182 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072478782 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.0684058 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069451373 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068637456 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069859337 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1242639 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094332127 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077715887 seconds)
    (292/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073217732 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125262575 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091687388 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069174038 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08092952 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075418216 seconds)
    (298/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09590897 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068723916 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067781879 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089428615 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067915881 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067553688 seconds)
    (304/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068586381 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173791931 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06823766 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115768963 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067944585 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070269625 seconds)
  done (took 33.590210705 seconds)
done (took 34.965668786 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09027837 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102916272 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077014383 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096938693 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084506413 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099944431 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076975922 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082440095 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084540131 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083425563 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08246021 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075268953 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07843028 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078210899 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076534654 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101503392 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083303523 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077458303 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077221919 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068220612 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077424925 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068946335 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06812253 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075656828 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080115622 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076197886 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078400836 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078031301 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069101002 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068615158 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073768811 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077876634 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068561864 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08151164 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078192341 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077077334 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078832235 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081490656 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068777732 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069223014 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079125013 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068568213 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076868114 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07504008 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073262937 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075440332 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077250647 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081380097 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098781648 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071276114 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076796821 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077717393 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078403624 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071951183 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072050378 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077022434 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074346159 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100944086 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076685364 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074135266 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078799002 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077224464 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073421163 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076878849 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077595908 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079543032 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080881912 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074973495 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07931198 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075365911 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068254919 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07670954 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073111259 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068415303 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080306657 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081894077 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067714175 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072923565 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076560261 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077068789 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068622254 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074049417 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067961426 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073219587 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073446734 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.078219666 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073461438 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075494696 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06814455 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077038315 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075467685 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076083413 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068131338 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081429281 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068426452 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.0743518 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068750069 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068317871 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067584064 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073939954 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068630989 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07381003 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075063605 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065685209 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07127591 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079571615 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066439902 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073767678 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067593831 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068118964 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079784905 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078900219 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06747564 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070771953 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0657107 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071494984 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066304095 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067449836 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066677525 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066222593 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072231263 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068272364 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072683909 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073158065 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079984506 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067594991 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072195855 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073032913 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068028537 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074459561 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068228999 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06769487 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067235226 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082013857 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072495968 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067979465 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072898264 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073328601 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076193345 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067056017 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076853643 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073892028 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072331603 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07308048 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066868315 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079325711 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071226485 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069397208 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065110571 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06541721 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064706582 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06524051 seconds)
done (took 12.884103252 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074074853 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.121530241 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096162183 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096665577 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08591112 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070039568 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077149417 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095602777 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070721984 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100489627 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092102736 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090675909 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113850388 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068735244 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069110051 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070365554 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070477505 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081854844 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09730899 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092105628 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109226095 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069290859 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089785411 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090634994 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087147011 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093584076 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069435643 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068645215 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070066077 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087734542 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092066178 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070123472 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068296165 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090720731 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084824781 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080161628 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067606077 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075565928 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068071237 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066958531 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069114314 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.088027233 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075361613 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075795046 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068206031 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075236652 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068912577 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083116364 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087844583 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07580619 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082853787 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091061163 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071198352 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083847094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066041471 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083039719 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076066038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067382423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067538306 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072346641 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067561263 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069951861 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079007043 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076258948 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071965981 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082177535 seconds)
  done (took 6.7378364 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087972045 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096844796 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086556213 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085979142 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06885813 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069213562 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069227227 seconds)
  done (took 2.03091811 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069875214 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090217593 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09324969 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091730381 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083823984 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093744658 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075062559 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068218006 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096637789 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06695257 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087049941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098376303 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070958899 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080575012 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095227548 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069812485 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094683974 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069666368 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070454818 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094627599 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074473067 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097556507 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081079208 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06987688 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082471443 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069648786 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102787824 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077326806 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071242461 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070568331 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07056236 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097341371 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082372095 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084464755 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070811446 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084692284 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083817887 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073109699 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080723286 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079175692 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083058416 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070980325 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068457059 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071299137 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072747633 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08149916 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068266666 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070958516 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070690435 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089665884 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068195933 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082768745 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073611774 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076171931 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075224207 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075001933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078512612 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071685848 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089829133 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070712018 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087369408 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086638791 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083158705 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086941278 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06993036 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082610973 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083273117 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070660157 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071598587 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071120846 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086921809 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072955762 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071760452 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081434352 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069556577 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094559766 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095393601 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069798702 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083867775 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070268337 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071443155 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082029626 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094560448 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076010365 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070913002 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074652413 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072075674 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07293667 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069113304 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073782125 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071081034 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075190164 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071163562 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074317897 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072352444 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086995913 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069455648 seconds)
  done (took 9.096262605 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072545017 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070761476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071899722 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069660115 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068582466 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068357707 seconds)
  done (took 1.917044794 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093656157 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068463883 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082697736 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068543988 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104108567 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083785297 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083968276 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078011816 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082545162 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080231835 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08417704 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087039222 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088473511 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07130007 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083956131 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069541621 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084059569 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073104429 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080258302 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07292777 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085222945 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073266615 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073603051 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091391766 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074654885 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071927599 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080602445 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080202835 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079903965 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078645823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0709607 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072228143 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076460622 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078044234 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084251793 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076224989 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068730949 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075189364 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071655792 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071989186 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086644513 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071048281 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070942999 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074608293 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077991464 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076366605 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07477676 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076696571 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.0837759 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077723354 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07444534 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06948312 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072867221 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075139216 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078366668 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080630016 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077315873 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086901776 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072735382 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078619689 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070545116 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074495603 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079862362 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074253549 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078950485 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07721127 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078933169 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073224072 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073344112 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070786856 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078156171 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07046321 seconds)
  done (took 7.053352835 seconds)
done (took 28.321623543 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516759201 seconds)
  done (took 1.960093078 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625287675 seconds)
  done (took 2.100457969 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.818930593 seconds)
  done (took 8.294184842 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405428294 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476733083 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.750365482 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134383311 seconds)
  done (took 3.279015082 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708947096 seconds)
  done (took 2.197122611 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240361955 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227751588 seconds)
  done (took 1.962302429 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.351126656 seconds)
  done (took 1.82718851 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.066216092 seconds)
  done (took 2.541180596 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.24209586 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160958192 seconds)
  done (took 1.880955987 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448118913 seconds)
  done (took 1.921798186 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.237895174 seconds)
  done (took 5.719097848 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218256 seconds)
  done (took 1.738569239 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239310424 seconds)
  done (took 1.725876365 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.750443273 seconds)
  done (took 3.234666676 seconds)
done (took 41.873063644 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086015207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086075406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085394814 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081452335 seconds)
  done (took 1.801137913 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078486635 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07289534 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076911719 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072759171 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077278354 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073199626 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074965345 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076305245 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073164929 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073619232 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07315754 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073441747 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076546553 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07547883 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071997548 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076630483 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077350028 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073522469 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076667182 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073474153 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071486981 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076112387 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076352353 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073101043 seconds)
  done (took 3.282975841 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08173747 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075490298 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078112435 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074519372 seconds)
  done (took 1.806266056 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079895888 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091214432 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08900631 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079708375 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091725969 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087034609 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069991845 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069845848 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070737647 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079892225 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068490992 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096812554 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088915628 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079726994 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07982631 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064144785 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066139868 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085415955 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078138683 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078145348 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071522731 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07987427 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068641591 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.0902618 seconds)
  done (took 3.392958095 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089430187 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068151894 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088150005 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092187544 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093151068 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066370416 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084887089 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093915386 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141632273 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06708263 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072522277 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066525612 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105697254 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066590629 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086367686 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10974458 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115788536 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072749555 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102416184 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069135566 seconds)
  done (took 3.254309028 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086292499 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071824201 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072740711 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068218255 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078630385 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076189767 seconds)
  done (took 1.956434064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07131004 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070490365 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.07014098 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069633149 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074990879 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07027404 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068512077 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070596627 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070428806 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069941457 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070364869 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069755467 seconds)
  done (took 2.345491992 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.213485701 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070662261 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071004966 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066693224 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075912908 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067500545 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085871132 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072219702 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089625841 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069656332 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070186805 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071892741 seconds)
  done (took 2.525442809 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193212362 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076036076 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227720901 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147449213 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102337227 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109463058 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111208575 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107905666 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133362168 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097504574 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153380052 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159209286 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104877606 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130665142 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091287511 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124373076 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14881246 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15472555 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099811125 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153122367 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134884805 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120804389 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142566864 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098085612 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101051776 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11628629 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07186095 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07782529 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158527283 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122529182 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135718037 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104883717 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08993098 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170054023 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156835893 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131699017 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14151387 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08154307 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11794257 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127740648 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196694718 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090154528 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151720841 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103077632 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077484634 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120038108 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108420995 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112182107 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098521937 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085580835 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272311523 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171632945 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127341919 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083928218 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116077858 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105041165 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1113995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118292351 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172877111 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151946596 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121366523 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07219039 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110516973 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145031028 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126243217 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107496006 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119175098 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089718961 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123735885 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147770664 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124509601 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132803278 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11207184 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085062759 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113428427 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130294205 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123841613 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163097487 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117940599 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073479923 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118916156 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098644788 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080755972 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145828797 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07589973 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167426432 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097237285 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.122316029 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1255425 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104722496 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104874999 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149419744 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134338943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100676998 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084151546 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099367578 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114338086 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136425161 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084341906 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103139785 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108378463 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076760367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125772369 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072542075 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111192876 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092397365 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113065378 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116627091 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076117608 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259083989 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099544808 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098156447 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12165928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147676084 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085165556 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078833478 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154828599 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11425573 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102492635 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138667573 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151837756 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121428467 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09783238 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140618391 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16337305 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088482445 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150450159 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098561699 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081185864 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102180987 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114855475 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108853092 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118033719 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078816871 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112119617 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153274851 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072295824 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092882054 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123003779 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079191797 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078278452 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100502167 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099858396 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093465143 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097754387 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100328327 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129960599 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114282523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100345961 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118028697 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09369147 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155841669 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084853451 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098134419 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100596507 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070813941 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125674563 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145591868 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07619041 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150844932 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115729007 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111495761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112424577 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080613554 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128969984 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076621389 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070175728 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131441388 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105973608 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103625535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.287897089 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109824122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118301955 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1120858 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125162842 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122280729 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121444814 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102940215 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08614493 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108871962 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123734927 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071086225 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089701902 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07967315 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098750605 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090734978 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081180834 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131622046 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11504444 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106489514 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108143541 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093017871 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139187488 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07620401 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118173476 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115428558 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091902002 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144461159 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1424019 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122636249 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097260955 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129127859 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071620621 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072452847 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085710361 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117518262 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081550362 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081268847 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108516821 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1401064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120932491 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128937266 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117746 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111545536 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147368934 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070794569 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116069039 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136112674 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113000572 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10077653 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088610415 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094466804 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134265491 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099839224 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169399761 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106731015 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115084098 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144613052 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096506321 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075824444 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098747172 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270324621 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097975318 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135182558 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09567623 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08403608 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103730013 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07639063 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094693754 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119111987 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111818604 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128762505 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10693758 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122579758 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075414553 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107059953 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114248475 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114895887 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08161129 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111466065 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156389797 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093275461 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110886184 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141776345 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077559613 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134703956 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162711633 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136458302 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084714776 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104172808 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116544804 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121418845 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112656357 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130873663 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100267245 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128505511 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105321748 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082619781 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083705099 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092211337 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099881084 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109596615 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100697174 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107101964 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093134946 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125226338 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098692257 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105665203 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111733883 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096699257 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093087729 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093348092 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162832487 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111130697 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157145447 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094954948 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13319827 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148651046 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072244126 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075831394 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077297967 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1286393 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228322429 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120930168 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108175781 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111423777 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114950476 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129871051 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092868516 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070024645 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103316284 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12603353 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117441151 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093276322 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099743134 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148613479 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115521763 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076493709 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107507179 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111086613 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099887126 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165535012 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082614137 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108910411 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077568146 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080558142 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121375152 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143097259 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084175285 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101748862 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113088082 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106320853 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120492743 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097758926 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11088501 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129065053 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138789262 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123359265 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09084988 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109660282 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124214502 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144807006 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100054752 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096962711 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163992197 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142135413 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149744876 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085139339 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107833728 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107680394 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103767482 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127690954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081220491 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151129671 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079475859 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125347154 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095995026 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085809089 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120371062 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107007808 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084201253 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283335221 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11016988 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082260069 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078019062 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109021283 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112188125 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09925574 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075716574 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132684595 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073973173 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129335062 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161365721 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081092385 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102958828 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096243115 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083177379 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10310439 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101480005 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086320933 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099580937 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16414175 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088283612 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141681784 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128676801 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108471534 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132022126 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102225345 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642165095 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080459093 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145653402 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114525564 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169010898 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09656288 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111851578 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108320785 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118985387 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137581133 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100133293 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177316685 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124461437 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110602515 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0767742 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098488142 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099388364 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086163802 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105088122 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110584341 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109819821 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093085443 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110816776 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115636782 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080095396 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093564302 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144796272 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110717524 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133217666 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129919987 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081244011 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110337728 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125211286 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076752328 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.260818497 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142454586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101543684 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096951424 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081268047 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097140439 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159494294 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074359966 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148308845 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111954246 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104620768 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106846327 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105316064 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120594713 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099521422 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112558929 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089495713 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104926761 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10630872 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117321803 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076521938 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100080857 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106258083 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094102021 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093669382 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096177252 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141152856 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070426239 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094421718 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109525192 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135454972 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160252583 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102108913 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082659535 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117537516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115743014 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106964743 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11321056 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079013689 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078698521 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079499428 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098751031 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120779789 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106524009 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114414638 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105023278 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150663206 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081387222 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219306795 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09291619 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100188938 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086444226 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078309229 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092619971 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092998525 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099591292 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106841582 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160490912 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090427286 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.085781571 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087649995 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072135644 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079860562 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117529226 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103643535 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257593739 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100240062 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080574591 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09945889 seconds)
  done (took 56.699084437 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106088702 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077980116 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097093941 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14288072 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121038327 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199528881 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150783659 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189137607 seconds)
  done (took 2.678781828 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070971672 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093961739 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101833187 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08280715 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066743742 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068304345 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228700782 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081342033 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067039352 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091200524 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07706774 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06912714 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.462769677 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069134047 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070268021 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080916638 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069321299 seconds)
  done (took 3.434396855 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.380678732 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.606364419 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359021965 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076143888 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.868669434 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091787055 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.154574537 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14071847 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081420679 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523298417 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370938941 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130534844 seconds)
  done (took 18.372085134 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084546035 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077824464 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092662518 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089796968 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077207564 seconds)
  done (took 2.00723533 seconds)
done (took 105.059511513 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083993328 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.544944203 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071145262 seconds)
  done (took 2.229442575 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094072968 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091243752 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091341531 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08912319 seconds)
  done (took 1.967457099 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077291656 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078759283 seconds)
  done (took 1.7459704 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234497061 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177700189 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101150726 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085440037 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08270091 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08292438 seconds)
  done (took 1.854174017 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075682217 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074962485 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074964272 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078698746 seconds)
  done (took 1.902317479 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070592249 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068882109 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.073711995 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074506987 seconds)
  done (took 1.883836637 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088001953 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086868628 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08224122 seconds)
  done (took 1.857141083 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104954907 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097066468 seconds)
  done (took 1.800334572 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084163897 seconds)
  done (took 1.685182084 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093823854 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103382331 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136080174 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118668139 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142757022 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.12238619 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087372515 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092208788 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082047834 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088183671 seconds)
  done (took 2.665705987 seconds)
done (took 21.771100339 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081687845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371640311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360055235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090783096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359482295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99305863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096360911 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112165303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071887917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0906664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653294054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986778927 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330302871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97159066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334241284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656389247 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072183073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071213673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072336862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978522957 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071817692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07194049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071956082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652755024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376924111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073602418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335182614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07230796 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07696271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362569193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074753555 seconds)
  done (took 16.239046487 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073777641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126051988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075919874 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087880447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070538153 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070424387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071821253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069535163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117918477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069707466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087550567 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068639046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07549047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07221792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091237959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069125916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07218233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070527403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070637627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072355876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089023179 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069482216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070764754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070292595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070593359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08280881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071215494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069588231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070094123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073784361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075102167 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071255557 seconds)
  done (took 4.078390268 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120274054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129366778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073745065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110198897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121715011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073821755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150539239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096752337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120294084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071878065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088544381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07123146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107579002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071944343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091077694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070137063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072830607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070117453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069547406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070422904 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08942529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070004084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07044428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070307489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070564454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085061529 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071436286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069948954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069751698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074463568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075832546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071377696 seconds)
  done (took 4.351070043 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073382952 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07561258 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083683457 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084506492 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070414574 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072272548 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074004022 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07077174 seconds)
  done (took 2.218340142 seconds)
done (took 28.485310935 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081318855 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070794751 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074188829 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089322562 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076638449 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081767814 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067697295 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076979136 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07456722 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074429283 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076439151 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069971484 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072697246 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067934753 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075727362 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071933403 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084146023 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073378344 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083108537 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083948285 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072421641 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074866066 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075577402 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080947712 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081229877 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080824398 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076782208 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07304944 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068149883 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070885439 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071819861 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078581726 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081164003 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083201841 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070551655 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06948138 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072569647 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068704372 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.0824617 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076384162 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069065959 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.0766395 seconds)
  done (took 4.761979312 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088462088 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091657642 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084093744 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080516157 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094051663 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085398112 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090331817 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081131727 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.080732069 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089638288 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077224453 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.084311963 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081425262 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075896082 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080042943 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077801334 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082966293 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07682476 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080266776 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080938513 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090643009 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076033489 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090444161 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082988265 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077407247 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083795113 seconds)
  done (took 3.786545522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076466882 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088331586 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095214369 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146282355 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111711619 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080655603 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081454886 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091929109 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096337362 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068820568 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073156585 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093135888 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093174004 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074563653 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.11101943 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084257296 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084002563 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070929959 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075554971 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097373235 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089215344 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085472807 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094389498 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084608741 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067989859 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070710945 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073072567 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084414864 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070860548 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080273764 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071413689 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07229733 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0698316 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078809905 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071054829 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067711433 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09202631 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079455852 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080688913 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068928838 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077884623 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069419099 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093442245 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12749095 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067466093 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071810286 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072291174 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07950157 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067925726 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095284246 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079669801 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067964884 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06866589 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067607495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067860933 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070670853 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069930556 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070480629 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078088597 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075186307 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08933578 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073380182 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085750792 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067943002 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077900387 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067520395 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069443563 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066877039 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09596551 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06975997 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111375561 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069193556 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06659518 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079129976 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078328393 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073905947 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067786534 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085333432 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080089208 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074537778 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078808963 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073953122 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073912547 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100616553 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070587267 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070016469 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069153326 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074224723 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073978177 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070933117 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082945683 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069807467 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073987216 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091368362 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06968363 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071411039 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074462649 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07326337 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070109472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082140145 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074259386 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071686608 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08122508 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070879317 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074120253 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083729309 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07758243 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069325349 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073087217 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073950711 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071957401 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072054896 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073969015 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072202579 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077645157 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077095689 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076492068 seconds)
  done (took 10.845459968 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166831217 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154820246 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070320073 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14741657 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076169155 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080512388 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15119763 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094754612 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068242008 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070440485 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068783685 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110303477 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105468995 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115700279 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081234125 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069644268 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093800094 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114279621 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15373417 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146598164 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09138647 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076424834 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071430952 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070529892 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070520293 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078682046 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085097423 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077170693 seconds)
  done (took 4.421471531 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081315094 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10471976 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072486619 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090679922 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08800931 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069053975 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070538568 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070359649 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085069546 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077980281 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069183493 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074204622 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072889439 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072091841 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069886652 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075686343 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07586236 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068240029 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072535575 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074544176 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078776494 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093297589 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072466827 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069117588 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071962368 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068466332 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076933548 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081384054 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069011915 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104322654 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066900272 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075849983 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085849787 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071969816 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070867515 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071448703 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071171688 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071250932 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072475474 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069645839 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069867137 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074838686 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070132434 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078972387 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084334728 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072810414 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073138973 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073691973 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073660472 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068929251 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073717557 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073849011 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073996551 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078941684 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075601053 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073711311 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071874506 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099044632 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077498468 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070447044 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.07004301 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069714289 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073384605 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080879561 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086702808 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073387679 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069765425 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071155341 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084081402 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08370811 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070854172 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075679538 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068674773 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073143209 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073761869 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073760749 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071665259 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070264156 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07102136 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071049562 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074829152 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070621737 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070430408 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073941521 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069114149 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069534137 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071193699 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07315092 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079660911 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070470882 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075032026 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071884319 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069916951 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074427989 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.079873495 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074146119 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082032089 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082270628 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071769155 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06982897 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084881071 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074370052 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070594786 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07735967 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076118476 seconds)
  done (took 9.545123092 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093854508 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069789647 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084977787 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091953886 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078812374 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074312802 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078351407 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068604777 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084421005 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073639649 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076882957 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067645464 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07926206 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080086952 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072038605 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081601708 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074179871 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08889324 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085406289 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069966753 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079949955 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083313522 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083119469 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085815789 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085163891 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.0869781 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083264678 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081332878 seconds)
  done (took 3.909339785 seconds)
done (took 38.876894315 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.704895638 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.935581866 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.684880582 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.884079087 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.742719879 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.897163399 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.766976224 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.673764334 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.952094411 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.714809137 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.001132374 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.156802826 seconds)
done (took 64.870494696 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.705345364 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.831933532 seconds)
    (2/2) benchmarking "String"...
    done (took 1.927072667 seconds)
  done (took 5.371229505 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.856916459 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.353127529 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.911379789 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.67505204 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.678631853 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.925483645 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.456757444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.122662273 seconds)
  done (took 29.738094925 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.884212377 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.897190898 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.376468632 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.419715553 seconds)
  done (took 15.235171674 seconds)
done (took 61.609900552 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.694164005 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.714711268 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.675568618 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.673262687 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.769089678 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.683541845 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.786199321 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.889422956 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.673854206 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.680891 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.677125676 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.095889127 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.686775138 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.828159335 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.673209462 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.67375607 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.711986324 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.147168318 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.83049772 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.688928324 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.686918323 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.720861536 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.679193506 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.673626187 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.724498545 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.674468296 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.066488722 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.684150766 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.504781617 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.681053366 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.723645827 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.030378284 seconds)
  done (took 201.714356862 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.677117079 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.833836347 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.904336564 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.706895199 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.369846997 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.866342138 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.7807801 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.37958094 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.67645862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.700035981 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.999471859 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.673655722 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.012497526 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.621133627 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.715499625 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.688125917 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.931552879 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.004932407 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.711333228 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.825054233 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.690087222 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.855923321 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.817932696 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.965104151 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.707053519 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.681062255 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.68307824 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.700554912 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.862269795 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.918980246 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.676358887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.692388265 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.874817993 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.543395551 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.68885954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.696656143 seconds)
  done (took 167.750235909 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.860745132 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.682365882 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.67963036 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.678453252 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.685366512 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.680972252 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.800292501 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800566033 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.350508221 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.319044897 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.732391732 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.681097202 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.453511804 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.675630558 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747726449 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.688789433 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.674909527 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.695029981 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.710016812 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.675896247 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.681332198 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80273041 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.693495172 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.679346002 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.687867233 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.681972677 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.686217695 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.068782708 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.676186083 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.897729942 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.684302211 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.683959292 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.923845795 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.676955015 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.683714375 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.514721569 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.409622133 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762025122 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.679426811 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.687056663 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.681184938 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.899024872 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.677761711 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.682292693 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.682150613 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.682100427 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.801989602 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.681942701 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.802069808 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.683116486 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.163401299 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.683213907 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.684628315 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.141276641 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.261632357 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.681606982 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.683288375 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.679759123 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.682907283 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.687183197 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.111686657 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.750996308 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.683198626 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.682927201 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.687263387 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.685427749 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.699291168 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.6824819 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.190726404 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.693887784 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.91637659 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803334632 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.685986689 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748757248 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771236096 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.679118238 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.681491538 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.683424589 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.68238504 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.681336585 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.763918265 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.678675647 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.76407108 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689884033 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.683816562 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737111628 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.753763691 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.680498345 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.503283274 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.681576871 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.684197859 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950329283 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746763956 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.680868984 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.690103309 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.684709666 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.768393583 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80574345 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.395657886 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.68952846 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.688051956 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.138821205 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.757718225 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.683241091 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.801608698 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.688236572 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.769092284 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.689005717 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.689586854 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.688155187 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.720496368 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.688866984 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.701989907 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.684237601 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.062148227 seconds)
  done (took 390.617826728 seconds)
done (took 763.615189262 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.290207192 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.250738503 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.347842626 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.271686277 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.242591981 seconds)
  done (took 13.025225582 seconds)
done (took 14.646496798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.767356335 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.772272786 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.706918557 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.768616974 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.705387675 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.769578542 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.75308766 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.710628707 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.738670375 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.711899287 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.741110312 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.709272736 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.696811536 seconds)
  done (took 24.173383983 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919710576 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.916184211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754313169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.912739803 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.730935986 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.918685854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.841855253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.830635747 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.829253919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.698690098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.69765029 seconds)
  done (took 21.674959087 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.91597114 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.927773421 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.761279405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.921356354 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.73258664 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.924124146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.846259399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.838741588 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833224309 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.722367878 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.698215955 seconds)
  done (took 21.74452831 seconds)
done (took 69.215886082 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.691351032 seconds)
  done (took 3.314270565 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.711737596 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.868053476 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.69405115 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.692096538 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.692372714 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.694983874 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.693138688 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.692352095 seconds)
  done (took 15.363491398 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.692464754 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.691424788 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.6940007 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.690869202 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.691609225 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.69241976 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.692000705 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.691326744 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.693887698 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.693033578 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.693063142 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.692597678 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.692415911 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.693438498 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.694214085 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.691806505 seconds)
  done (took 28.705271712 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.693953847 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.694127789 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.693761945 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.693177343 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.692233049 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.692923884 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.694719142 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.693039751 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.693128708 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.692892545 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.693880545 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.691565221 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.693197832 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.69104409 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.689342081 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.688981018 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.690394766 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.692311849 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.694394586 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.692609236 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.690054264 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.691114456 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.690859923 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.68911784 seconds)
  done (took 42.238957391 seconds)
done (took 91.245513154 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.392645389 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.527496905 seconds)
  done (took 9.5432315 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.693336015 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.693226433 seconds)
  done (took 5.088624818 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.691801275 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.692179242 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.693359055 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.691132792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.692883848 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.694263209 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.69351356 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.694862705 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.690418068 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.691436919 seconds)
  done (took 18.55049216 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.692912086 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.693269526 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.688351189 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.694388287 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.69302563 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.693108628 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.693989012 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.69315105 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.691206355 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.690923617 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.692048523 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.692206149 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.690835743 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.695251768 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.693605657 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.692961155 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.693026532 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.694254718 seconds)
  done (took 32.092472333 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.691435261 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.691791011 seconds)
  done (took 5.008277998 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.692459993 seconds)
    (2/7) benchmarking "second"...
    done (took 1.692210542 seconds)
    (3/7) benchmarking "month"...
    done (took 1.692157512 seconds)
    (4/7) benchmarking "year"...
    done (took 1.693484387 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.694505404 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.69234321 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.696426144 seconds)
  done (took 13.480474504 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.695594183 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.844128085 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.91159106 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.310653818 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.695087276 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.696425505 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.630006332 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.69755552 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.701733982 seconds)
  done (took 18.81018442 seconds)
done (took 104.195807234 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.54835317 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.694171723 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.950333361 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.835866343 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.70829518 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.987331259 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.711092054 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.980233514 seconds)
done (took 42.039176795 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.722942573 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.422175536 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.487087457 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.721666709 seconds)
  done (took 15.256688117 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.6975361 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.008285899 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.71603904 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.541904432 seconds)
  done (took 21.59837029 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.061041649 seconds)
    (2/2) benchmarking "read"...
    done (took 2.044994083 seconds)
  done (took 5.740581598 seconds)
done (took 50.948720501 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697107708 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.6996505 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.698614836 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.698585143 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.698393 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.700686668 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.697881916 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.698698603 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.699703571 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.698827543 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.698944403 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698557808 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698975873 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698210356 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.69967411 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699259048 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.700351514 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699681499 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.699503245 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.700317982 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.699603921 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699859357 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.700527387 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.699001411 seconds)
  done (took 42.41240578 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.699321112 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.699672574 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.700295846 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.700288258 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.700626131 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.700395834 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.698631618 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.698629561 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.699789749 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.700040198 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.701052434 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.699060097 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.701545797 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.700203993 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699352238 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.700264046 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.70271117 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700955709 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701121112 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.70110275 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.701488385 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699140967 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.701836199 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702475942 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.700085785 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.700590975 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.703077309 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.703316596 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.700382223 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.700034258 seconds)
  done (took 52.649856807 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.702530219 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.701625295 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.701917661 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.701524175 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.70086864 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.701545846 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.700153071 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.700787053 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.701825488 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.70022046 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.700711372 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.70109143 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.703054344 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.701791975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.703935748 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.701264374 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.702946597 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.702071061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.702290304 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.70076921 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.702301614 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.703416179 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.700942886 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.702755573 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.702137452 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.702255535 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.701061779 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.702609433 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.702283455 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.704149684 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.702158206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.703794432 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.703826857 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.703863498 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.701554278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.704851487 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.705610081 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.702655702 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.704191195 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.704384791 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.702649893 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.703263086 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.704050179 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.702480407 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.703643058 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.704447202 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.703733279 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.703835043 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.704582757 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.704867785 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.703692275 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.705421306 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.703585941 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.705324477 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.703686713 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.703110146 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.704811049 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.702409684 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.704308388 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.702913311 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.703659549 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.706864786 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.704144735 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.705529294 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.703837719 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.704155357 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.704347917 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.704971709 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.704646537 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.705858703 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.705356018 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.705480433 seconds)
  done (took 124.262526402 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.703042697 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.70440821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.703816413 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.705601544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.704928688 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.705767086 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.7055365 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704841446 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706199729 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.704677608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705318821 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.705204508 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706105306 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.706011716 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.703468044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.705320826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.705949416 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.704718467 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.706230245 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.70535338 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.705202575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.704034775 seconds)
  done (took 39.148904042 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.707160236 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.70747334 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.706169071 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.70534923 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.706102928 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.705250423 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.706864491 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.706467218 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70592037 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705975745 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706938817 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704625432 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.706908933 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709050546 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.708586952 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.70684455 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70814534 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.706782292 seconds)
  done (took 32.35782125 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.707879046 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.706776696 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.706663474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.706588287 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.706771872 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.708276281 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.706387476 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.706643378 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.710533324 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.709359781 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.707497421 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709204261 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.70778812 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706508118 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705249873 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.707412967 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.707015434 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707186607 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.705318569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708325705 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.708334146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.705760029 seconds)
  done (took 39.19997637 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.707621511 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.707521681 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.709491052 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.707779988 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.709950344 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.709334611 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.708322355 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.707326777 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.708977587 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.708886264 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.70737892 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.708778855 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.708885952 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.711201625 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.707478378 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710721572 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.707379091 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.708122884 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70870214 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.710719021 seconds)
  done (took 35.815430828 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.710161649 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710245725 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.710045437 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710276995 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.709779521 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.712099335 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710460134 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.711968561 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712880766 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.709951845 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.708983764 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.711222622 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.711800902 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.71184436 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710305176 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710967797 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710184358 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.711409636 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.710971368 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712064788 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.712295233 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.711334394 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712761113 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.713201142 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.710931286 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.712543322 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713094163 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.712179651 seconds)
  done (took 49.555963436 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70801782 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.709975442 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.710387607 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.710030606 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.709111147 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.709885883 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.712064665 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.709426283 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.70872041 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.70939813 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.709607865 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.709167552 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712319603 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.711489746 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.712038797 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.710224315 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710877481 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.711419239 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710330681 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711869719 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.711180796 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710525481 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.712289842 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.710957899 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711588094 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.712858237 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710210664 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.711628208 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71287269 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.712142837 seconds)
  done (took 52.964093854 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.731988033 seconds)
    (2/2) benchmarking "in"...
    done (took 1.731805451 seconds)
  done (took 5.105834586 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.708583379 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708864773 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.709860059 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.709482089 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.707945296 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.711166699 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.711993132 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7126573 seconds)
  done (took 15.322834829 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.71172226 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.709588843 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.706816773 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.710814046 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.708785906 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.710967038 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.716419188 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.710083523 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.71126206 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.710882025 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.718176149 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.720150425 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.713663425 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.712658592 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.711762315 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.712531306 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.709013944 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.709492586 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.710711538 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.710373758 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.711632004 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.714553206 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714043693 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.709622278 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.713124731 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.722036358 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.715543738 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.711809274 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711075636 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.716009698 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.713648725 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.711166623 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.711523417 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.710160171 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.710324007 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.712714366 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72117689 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.714032171 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.719825284 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.711727441 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.710928519 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.711754132 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.715819192 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.715303755 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.715350797 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.711272968 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.712871489 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.711881988 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.712174686 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.716089471 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.722272061 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.71380575 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.711620362 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716502636 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.714842713 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.720501464 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.712344 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.716533719 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.724544717 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.724390655 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.72322208 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.726736697 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717234708 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.713704863 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725808692 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.743961243 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722289926 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.712822159 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.711301293 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.711649732 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.720423664 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.724971423 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.72463767 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.713120472 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.711765027 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.713010265 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.716315761 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.710871772 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.721786845 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.718946025 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.713919092 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.713212183 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725125891 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743296953 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.714802313 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.714241062 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.713722194 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.713394425 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.715425032 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.728333692 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.714441866 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.713228453 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.714765509 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.717304283 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.715004917 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.716623418 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.715919507 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716988319 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.714078721 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.716186747 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.714758365 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.721910724 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.728090399 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.716303188 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.715774068 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.723554633 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.716963037 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.717834322 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.725536341 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.715340666 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.715028562 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.715680951 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.724065673 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.714371802 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.721374504 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.724558688 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.714484856 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.719077819 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.714856227 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.714285905 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726087051 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.747165452 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.71428247 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.716219491 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.721427322 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.730635015 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.715526636 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.721869025 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.714296835 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.715034227 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.715806248 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.720176721 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.71614479 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.719333457 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.71728978 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.719805365 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.715309025 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.717479482 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.716268789 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.718626188 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.718614313 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.719710197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.719861813 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.72163439 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.717622206 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.721777087 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.724201946 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.720071859 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.720704028 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.718255197 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.714928572 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.716735054 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.723192285 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.715307005 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.718703055 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.717908839 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.719889274 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.716610694 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.7180144 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.716031983 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.716682032 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.720273151 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72609965 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.720055398 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.725201045 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.72153411 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.719312772 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.717878137 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.717431927 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.719588853 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.718484213 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.717318198 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.722100172 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.727496779 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.717115967 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.717452923 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.722892463 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.718416303 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.720442503 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.719299306 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.72338946 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.7310701 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.718022366 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.726744841 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.717161643 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.718685261 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.717471337 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.721879339 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.720979686 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.719937186 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.723553922 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.727897886 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.733234564 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.731354759 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.720560053 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.723962526 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.721146229 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.724493843 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.725574937 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.720020606 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.721631458 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.719652473 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720847529 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.719701822 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.72283965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.720375903 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.718475015 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.71964422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.721598319 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.719920687 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.718774307 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.723098208 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.722782691 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.720483916 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.721048927 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.720850696 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.721476768 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.722884549 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.721834051 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.721562559 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.719429443 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.723519548 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.729676066 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.720054159 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.724590102 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.724596027 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.723114947 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.721398391 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.721538057 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.724978969 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.723359854 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72794813 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.723200099 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.724865026 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.730454535 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.723120363 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.72167013 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.725404687 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.721457104 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.721690629 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.724972186 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.729138968 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.721905535 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.721540947 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.72292436 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.725981267 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.72077685 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.731539278 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.721363852 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.723176115 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.720470731 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.724460116 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.72226474 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.725024852 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.727152195 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.7244101 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725186479 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.723632363 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.721147141 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.726630194 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.723186382 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.723566056 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.723288455 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726091562 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.730153725 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.72990093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.721351173 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.722993881 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.725219967 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.727764103 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.726527135 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.722989237 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.725143872 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.736215058 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.732583996 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.729512451 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.724694212 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.721490673 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.728031694 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.722902615 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.729051576 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.726446931 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.72361803 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.725408095 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.72603587 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.722151675 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726685525 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.723650208 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.728763014 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.724860978 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.728818732 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.726924972 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.725890523 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.724529158 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.722654947 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.725498973 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.727196843 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.724167568 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.728995789 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727440202 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.726233204 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.726694914 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732245763 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72663936 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.725331518 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.725074994 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.727184534 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.725096681 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.72656642 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.725235757 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.727389543 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.736545834 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.730606609 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.735846061 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.728014653 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.735450689 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.72326548 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.72939484 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.733646426 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.723993906 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.724721122 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.72533247 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.72356709 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733418398 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.724293829 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.723785058 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.73105337 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.723829505 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.725491423 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.723222484 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.725647456 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.724799967 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.724795203 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737448758 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.726931812 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.731271585 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.729553011 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.725428079 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.723877626 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.724527405 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.725850538 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.729670415 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.725448335 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.726558641 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.728767214 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.725795674 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.724708333 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.726188948 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.726316767 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.726737299 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.72613802 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735507962 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.727736395 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731267061 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.726575453 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.734117585 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.728968175 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.735713867 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.728356846 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.732060659 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.727605985 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.726480352 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.728618028 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.727724666 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.729667397 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.728551432 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.728867644 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.729120187 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.729471034 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.728859924 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.728739302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.727675148 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.729239886 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.73755318 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752572019 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.732109116 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.73123708 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.727125059 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.730629576 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.731545372 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.728718542 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.725030959 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.734031584 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.741146824 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.735523535 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.730153045 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.728003583 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.729121163 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729007214 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.72924608 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.729168154 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.729383889 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.727875045 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.731055962 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.728554202 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.734704366 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.727977946 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.727359779 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730280542 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.729444377 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.738173268 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.726609232 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.730248686 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.728681762 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.729841549 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.730244531 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.730168938 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.727704308 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.73127461 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.728937365 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.730908212 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738730697 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.739239811 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.730936749 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.730038944 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.728725201 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.730627113 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.73230087 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73063895 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.729428826 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.72970741 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.732333243 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.726612634 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.729543292 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.730859461 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.729063517 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.729272335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.729401111 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.732618655 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.739279056 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731995276 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.728189542 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.726461843 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730488091 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.731101338 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.733428243 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.741409915 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.736295289 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.742754888 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.740410226 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.735851763 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.732620513 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.735190875 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.740350764 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.728755959 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.734511483 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.731988812 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.735113748 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.731947421 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.737123985 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.732313505 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.740924277 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.732738121 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.731771922 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.740668828 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.733605762 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73196135 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.733907962 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.739675163 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.733887489 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.729148976 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.732543568 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.733194554 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.738359113 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.736355743 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.732578817 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.734296775 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.730089213 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.734351354 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.736525342 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.731114279 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.734554682 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.732659046 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.733058999 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732636486 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.732949621 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.730969612 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.734130275 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.733689547 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.735461426 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.741226166 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.732296474 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.737116022 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.733088341 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.733122878 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.730711797 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.730802466 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.731684308 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.731251112 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.732578186 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732415226 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.733005257 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.736220436 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.732081219 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.733141588 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.73611176 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.733153608 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.736308829 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.745634394 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.741658148 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.733020249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.732912194 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.733318294 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.736760807 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733010084 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.732988664 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.73319418 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.73653638 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.733294947 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.734360595 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.733256914 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.73966227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753978668 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.733604868 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.736392022 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.735367739 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.739977569 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.734747254 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.734487451 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.735196114 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.737843753 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.738825551 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.744967621 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.736113798 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742162177 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737391797 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.737123247 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.738934159 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.739231707 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.74486516 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.738880295 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.732501832 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.733810383 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.740713066 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.754306641 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.735100749 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747479877 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769631287 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.735682601 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.736662065 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.734872996 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.737388652 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.736100311 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.737349128 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.734010578 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.7347042 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.735435382 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.735022209 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.735127228 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.743257168 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.738929529 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.737063311 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.73466385 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.736865043 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.73672498 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.735138618 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.738599019 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.734460432 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.735831939 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.734738781 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.7349119 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.739085582 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750108961 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.748119874 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.735691316 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.736072764 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.734988987 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.741816549 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.740772723 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750973238 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.745230268 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.736458238 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.73720122 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.741842474 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737471816 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.73621443 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.741233569 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.740202984 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.740008702 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.73913642 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.751602742 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744770214 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.745521901 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.740432341 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.737531244 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.737433983 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741778431 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.738075042 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.736973671 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.739330792 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.739853381 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742171025 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.737788133 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.737696143 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.739509467 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.746917712 seconds)
  done (took 1030.820741524 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.738166757 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736174666 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.737777652 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.737141941 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736983301 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.737996176 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735796952 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.739147285 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.737223815 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.736083598 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.736004085 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.738532931 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.738534075 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.738955549 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73783151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.738546413 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.73796179 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740494252 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.738722846 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.736821665 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.739489359 seconds)
  done (took 38.163860829 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.739324209 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.738830744 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.737664253 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.738461471 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739792962 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.736853404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.737831478 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738042538 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740267868 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740807215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.738892699 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740664844 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.73781997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.737869164 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739229374 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738962481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.740698929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741846386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.740638952 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.740348707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740235487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.738404711 seconds)
  done (took 39.932420265 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.740435694 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.739376307 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.741476374 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.739486157 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.739215177 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.740102264 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.740031592 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.738738149 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.739909747 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.740426577 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.739771515 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.740833669 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.749288481 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.748642174 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.742182935 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.740913596 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.886541507 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.738731722 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.740044464 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.742157613 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.74142034 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.747749553 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.741815995 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.741592754 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.740581954 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.742711536 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.740569902 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.743971791 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.74273901 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.74344647 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.747425577 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.741534727 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.743801974 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.746907763 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.743137719 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.742919429 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.74813295 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.743302428 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.741608944 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.741055075 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.752246975 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.769257919 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.744425422 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.748114604 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.741214296 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.741514835 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.745181933 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.751855555 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.74281209 seconds)
  done (took 87.243930923 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.741196225 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.741045585 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.739914644 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.744281846 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.739938458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.740831361 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.740827629 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.73850293 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.742360733 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.742354797 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.740985767 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.741071553 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.738280376 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.741704136 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.739944095 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.741604941 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.740746433 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.739632387 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.740163071 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.739507603 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.739974943 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738990972 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.738457877 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.739552032 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.739964308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.741136681 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.742478106 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.739774802 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.741347462 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.739354624 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.741506885 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.741054899 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.740898132 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.740453113 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.739419228 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.738176541 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.740338304 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.740049503 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.737685241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.731114981 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.735240361 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.732225567 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.733862739 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.734906059 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.73389506 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.733000756 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.73210014 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.731811686 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.732210214 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.739272504 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.729939887 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.726731769 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.727212223 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.727596976 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.728166457 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.733958572 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.725774496 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.726560984 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.726540223 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.727503518 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.726671913 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.726531327 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.726193585 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.726637838 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.726818931 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.724749676 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.725804348 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.726085428 seconds)
  done (took 119.70825711 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.727224145 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.728260752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7278964 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727993387 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727345577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.72787475 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.727502822 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.727898672 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727041521 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.727647483 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.726804801 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.728303175 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.728286939 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.725993094 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.726033603 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.728404343 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.727814337 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727733962 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.728277122 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726048315 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.728788505 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.729862419 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.725450187 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.728486187 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730205987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.724220551 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.729498658 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.731864224 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728202465 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.728493986 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729927835 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.726515549 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.728650704 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.729163282 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.72682175 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.729002188 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.727558948 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.727623891 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.72785146 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.728780438 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.730214259 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727608453 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.731729587 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.729013265 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.732472376 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.728508829 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.729587154 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.729290622 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.730062916 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.730464105 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.730934465 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.727174642 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728934377 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729025138 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.728376401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.728635714 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7341962 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.728534041 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.727365525 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.729453926 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730675548 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.733564532 seconds)
  done (took 108.832630079 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727811857 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.727706992 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.728686626 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.729465679 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.729626225 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.729122579 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.727315451 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.727195339 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730360258 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.728042072 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729270539 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728715244 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72983311 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728380212 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.729290006 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730486474 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728140154 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.728182934 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726305263 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.72797961 seconds)
  done (took 36.232225675 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.725437017 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.728352188 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.726168706 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.726532842 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.728237322 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.726216628 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.727580855 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727265952 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725374581 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724869821 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.726679538 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.725696569 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726857554 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.727237957 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.725312765 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.727932527 seconds)
  done (took 29.285107105 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.728358915 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.728007952 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.729697509 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.726191984 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.728695654 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.727772581 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.728844449 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.72689415 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.727593075 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.727655408 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.72834459 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.728464778 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.729132261 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.730166056 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.728361357 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.727480033 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.726155414 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.725903019 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.727875757 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.728832331 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.72869668 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.727530907 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.726524403 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.726707208 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.729978554 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.727052335 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.727840854 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.726768708 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.72680075 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.728278772 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.726153168 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.726133768 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.72667347 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.728658041 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.73003804 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.72905264 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.728945576 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.728084764 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.727680021 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.726457495 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.72827382 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.729264106 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.728521112 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.728407838 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.728251491 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.72768082 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.728873852 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.730765404 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.725945217 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.726291823 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.728688684 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.727961679 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.727278898 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.73072461 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.727759539 seconds)
  done (took 96.699355635 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727219621 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.727904887 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.728383622 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.73159001 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.728202781 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.727988263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.726928711 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.724525342 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728660119 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.729335582 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.726961314 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.725540141 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725367094 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.727680633 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.724072663 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724987684 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.725718789 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.723233498 seconds)
  done (took 32.742484374 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.725331173 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.727967653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.722648717 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.720250635 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.722602362 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.724869379 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.724699583 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.72781245 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72049853 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.722862648 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721831671 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.722333035 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720489748 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.726265243 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.720529588 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720997568 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.72201829 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72065788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.721524564 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723046833 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722899726 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722594653 seconds)
  done (took 39.558382606 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.718791615 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.720889214 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.739838845 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.744046819 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.740864635 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.756323965 seconds)
  done (took 12.072418986 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722192792 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717233312 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.719118698 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716941272 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719776108 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718613886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720174746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720629429 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719811246 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719321271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72049529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718281086 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72250337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718534544 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718332622 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715865283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720329546 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717472055 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720742246 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716227109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718078213 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718555599 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718689919 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719319005 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72012923 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719285295 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720659505 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716152223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715946218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717393578 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716904221 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717333745 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715965271 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717017415 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716670606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71973959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718401285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71691003 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715738631 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718336152 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.717593596 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721735617 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716644388 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716513291 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717844592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719535876 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71771137 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718200293 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717825719 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718262092 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716743451 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717740905 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715683099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719212567 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71747337 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717090519 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716346334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717540374 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7178623 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722878223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716712854 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716998254 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716878392 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720219795 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719893547 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718523058 seconds)
  done (took 115.061622873 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716666668 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.718768309 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718733148 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717691162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713322194 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716249773 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715671778 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713649156 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717537147 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718717226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717106459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715967062 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715032939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717782278 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716695623 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718251608 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714656305 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716949394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716220337 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715649347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717577924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717526369 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716615701 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7152696 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717614722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715087265 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715849825 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716842028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717461425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717538377 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716193869 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71455444 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716553281 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.715773395 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714478795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715114446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717779695 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716031154 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716528002 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715385729 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715862891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715706012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714424401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717874763 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719156474 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716966921 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715961503 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714150946 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715698366 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718019703 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71796727 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715193024 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714536663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715561873 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714106638 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71504651 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720329122 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715175313 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715623605 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714753578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715595668 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716272329 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716142271 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71427145 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715669732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714972133 seconds)
  done (took 114.92427581 seconds)
done (took 2391.705673008 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.751502726 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.740066622 seconds)
  done (took 15.138551915 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.881193781 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.83136149 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.718768479 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.728641287 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.712666314 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.744782371 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.736363733 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.714421939 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.716463003 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.715703661 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.717486412 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.905778438 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.713440515 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.711735987 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.718875804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.803890356 seconds)
  done (took 49.723008425 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.718005445 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.721407934 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.727772624 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.722379108 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.716801225 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.728373351 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.746177907 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.721232349 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.751053076 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.725042208 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.783377547 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.726161159 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.715157896 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.765927907 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.727774555 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.729228468 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.808284647 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.788254702 seconds)
  done (took 32.967686289 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.792861971 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.724155592 seconds)
  done (took 10.170071785 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.715918906 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.725253304 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.805775864 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.742217402 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.705093842 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.715411569 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.742639433 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.742790721 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.736699086 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.729700724 seconds)
  done (took 69.009824663 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.720695607 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.718371756 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.716761363 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.716219648 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.713641456 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.714166758 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.717215327 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.716924269 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.370592349 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.745912134 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.719377984 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.722220367 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.715493866 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.717124267 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.714807128 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.742025095 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.83599443 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.711844282 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.711166441 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.722477814 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.716752618 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.776043628 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.727307202 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.715718945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.744591518 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.373245119 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.717798987 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.723082625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.823019668 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.712637583 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.717103961 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.902016206 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.721704348 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.175414277 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.976242387 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.718022263 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.726021092 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.723781557 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.711172534 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.829986303 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.720998459 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.719584236 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.644493658 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.957113341 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.815496498 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.758469189 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.016053062 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.731013805 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.720181787 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.744905783 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.719941973 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.71853105 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.729139843 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.229648565 seconds)
  done (took 124.26583688 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.714049718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.059623551 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.880564353 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.717547814 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99760028 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923107405 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.712761971 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.760382616 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.714361205 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943574241 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.968648729 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.816703218 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.712038822 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.716026247 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.7144076 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.710054637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.869002664 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.783489875 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.714692579 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.71204841 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746042077 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954607611 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.834851393 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.714360301 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.740323347 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925504523 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.832321623 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.81321556 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.480418508 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.713286449 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778664598 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.713379257 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.71831448 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.715060473 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.870670627 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.806028293 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793907106 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.714986785 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715461056 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.718490409 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.467458208 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919908498 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807770103 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.842816716 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.964138496 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.918805504 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.491980421 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.716895527 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.457520856 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.884093467 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.943720012 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.943709845 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.833702235 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.715437467 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.24570176 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.71750783 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.715474414 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.963843642 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936369177 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.809440721 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.720275807 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.719908506 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.714512892 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.00773631 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.714738163 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.816257043 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715790395 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.715691364 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.81607049 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.811974735 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.948227941 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.93340085 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.7435788 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.056146023 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.232305542 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962421402 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.779828412 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96283622 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.719062752 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.717271338 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79676402 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.547764014 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.970686361 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998824595 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962108847 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750083044 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.433107022 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.717358792 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.942343774 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935429934 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.97139138 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.968384198 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.953538562 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.05108337 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.719467152 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.721516541 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.94767239 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.838162994 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.717515924 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.065051474 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945235686 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.241327283 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.744321266 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.02023335 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.844983769 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.721351676 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.347404283 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.722163968 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946100022 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.758556026 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.717993241 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.719312849 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.934037916 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.703337509 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719400265 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.632622044 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.781652508 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.721648772 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951158664 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.722302715 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984495088 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.718728668 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951991871 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.163580549 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.749846332 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.950333122 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.964352556 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.720048909 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.957618987 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960406517 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.830322236 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.992436342 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.625022586 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.7199982 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004393628 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.717825086 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.721281431 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.893873274 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.721202994 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.865222528 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.726885073 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.013339235 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743332538 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953082978 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.721211505 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97848316 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.750483817 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.766846676 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.722053952 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.851568799 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.722209937 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.552302342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.29549637 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723879163 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.72185041 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.533653487 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.723519413 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.872166884 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.945586903 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740857281 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792162211 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378101667 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.72639586 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806465142 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.748797304 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.107453939 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.723886167 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.972197407 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.722740179 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.725572332 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.724478391 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.010205773 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.954274291 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.72243753 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.720532382 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.627631399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.724516511 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.723342117 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.906145561 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.116203159 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.724529866 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929567916 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.724624634 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.847055225 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.728322388 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.786670708 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.063265775 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.720316112 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.721796334 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.719959388 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.721839806 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.725256642 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.985546818 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.749273562 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.214697373 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.859990054 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991789509 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.03089799 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.967779515 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.761683949 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.724875642 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97650969 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.725982044 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.784606697 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.724200548 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742916122 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952199761 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.726787601 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.930481861 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.9976474 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.722566803 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768817328 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.725850142 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722736483 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.722385196 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.871681056 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802057529 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.723758722 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.722408891 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.836382037 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.845237188 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.93080986 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.724464433 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.774999216 seconds)
  done (took 870.470473187 seconds)
done (took 1173.391770413 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.724513156 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.721520769 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.722328114 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.723249291 seconds)
  done (took 28.548147434 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.733507626 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.725555886 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.726180676 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.726038958 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.730670903 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.727470301 seconds)
  done (took 12.026935899 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.737167501 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.729044335 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.724073698 seconds)
  done (took 20.84907292 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.79800052 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.11050742 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.861616572 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.138930767 seconds)
  done (took 9.566150516 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.730246244 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.725740397 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.726394309 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.733073428 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.739284246 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.739077959 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.72738734 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.727055243 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.738796909 seconds)
  done (took 17.245130503 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.876131374 seconds)
done (took 93.767112407 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.473733365 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.809158328 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.791507543 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.073699187 seconds)
    (5/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.803544282 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.825344454 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.724922321 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.818154675 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.758246028 seconds)
    (10/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.735975129 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.725635182 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.337169284 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.844457193 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.922601024 seconds)
    (15/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.855881692 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.728434523 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.289012534 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.88755856 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.909555905 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.304607049 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.080369946 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.722860791 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.29338372 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.805154632 seconds)
    (25/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.880546273 seconds)
    (26/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.819197614 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.728787197 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.037656086 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.727426198 seconds)
    (30/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.946131877 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.048116176 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.89247707 seconds)
    (33/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.757919617 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.820006511 seconds)
    (35/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.378339108 seconds)
    (36/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.927688437 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.128145425 seconds)
    (38/309) benchmarking ("sort", Float64, false)...
    done (took 5.521945156 seconds)
    (39/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.1807698 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.746887406 seconds)
    (41/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.809105935 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.105360295 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.027130861 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.891853716 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.903406183 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.024200167 seconds)
    (47/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.976919726 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.840953687 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.993541776 seconds)
    (50/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.757143902 seconds)
    (51/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.836352638 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.735932367 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.970462448 seconds)
    (54/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.733847397 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.970024911 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.872066729 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.07835473 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 1.954240288 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.757983795 seconds)
    (60/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.971073467 seconds)
    (61/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.832250173 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.91882979 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.869267054 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 5.38362956 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.984830767 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.868362353 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.800783096 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.885565051 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.756240308 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.73692836 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.060745527 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.739245542 seconds)
    (73/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.734642638 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.098029226 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.007851538 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.066876628 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.701695702 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.957026708 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.042072836 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.847131928 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.760922362 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.751499773 seconds)
    (83/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.220308658 seconds)
    (84/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.819336952 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.127348533 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.044853495 seconds)
    (87/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.83264601 seconds)
    (88/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.966060824 seconds)
    (89/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.81777412 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.887716234 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.736590176 seconds)
    (92/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.065317177 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.876280037 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.952845065 seconds)
    (95/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.740806545 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.737721203 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.858841565 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.734942766 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.814991365 seconds)
    (100/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.694317307 seconds)
    (101/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.835429725 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.865688873 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.049378345 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.003785648 seconds)
    (105/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.014907393 seconds)
    (106/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.842555217 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.894688454 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.03744152 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.989845488 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.897655004 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.770904725 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.780756846 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.738219843 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.12759842 seconds)
    (115/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.936836265 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.73728066 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.675401058 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.952718239 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.80104841 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.179736119 seconds)
    (121/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.113975488 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.73958826 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.753703196 seconds)
    (124/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.838653935 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.115965033 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.834045708 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.631979168 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.136022433 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.737434449 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.450797453 seconds)
    (131/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.91411262 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.866851511 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.930752947 seconds)
    (134/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.018736354 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.762214084 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.381738014 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.163292594 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.832902406 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.100574674 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.924010432 seconds)
    (141/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.743011561 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.405467512 seconds)
    (143/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.823430634 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.737636942 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.103725395 seconds)
    (146/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.768944242 seconds)
    (147/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.737741606 seconds)
    (148/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.052148039 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.117989126 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.840090653 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.003354997 seconds)
    (152/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.820535629 seconds)
    (153/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.897030866 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.294404677 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.003819432 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.8118466 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.767670692 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.059239584 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.077460687 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.815610773 seconds)
    (161/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.994459238 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.870535183 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.75495491 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.737978289 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.852542611 seconds)
    (166/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.03560693 seconds)
    (167/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.634326144 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.894879535 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.853118767 seconds)
    (170/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.107796253 seconds)
    (171/309) benchmarking ("sort", BigInt, false)...
    done (took 6.740751313 seconds)
    (172/309) benchmarking ("sort", Int8, false)...
    done (took 4.639722202 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.741171716 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.745906734 seconds)
    (175/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.943944241 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.214154962 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.417100081 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.70695 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.747893542 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.308180305 seconds)
    (181/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.736927119 seconds)
    (182/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.452162635 seconds)
    (183/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.84494023 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.920114516 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.576531492 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.742368902 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.957822969 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.743002635 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.054122422 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.880107669 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.86631996 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.750485355 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.741795725 seconds)
    (194/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.585750575 seconds)
    (195/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.990595405 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.082434519 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.740639798 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.881469676 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.075450503 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.737823439 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.148708196 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.871302764 seconds)
    (203/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.765588832 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.752949262 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.976012037 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.837846199 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.753620323 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.851159115 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.128302516 seconds)
    (210/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.893013896 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.884875339 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.978728821 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.824332574 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.885016434 seconds)
    (215/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.016171368 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.761339587 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.92830651 seconds)
    (218/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.02270208 seconds)
    (219/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.849829289 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.924291473 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.097625095 seconds)
    (222/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.249542229 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.002165359 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.43351561 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.066279697 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.756085196 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.181173572 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.930757427 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.768663173 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.106736298 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.612205713 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.957974863 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.154528864 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.890219819 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.756685186 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.854758455 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.755373809 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.099253424 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.943376684 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.785663106 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.885455396 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.140926687 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.889375534 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.141122848 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.852180912 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.007874271 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.110697616 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.541566803 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.89231168 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.436857869 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.799213316 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.67685228 seconds)
    (253/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.852010363 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.90528324 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.761834175 seconds)
    (256/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.761503967 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.6650911 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.093387658 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.871144723 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.867432748 seconds)
    (261/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.957542652 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.792780844 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.379484425 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.757474686 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.188957437 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.558885493 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.076950194 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.843577608 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.772641154 seconds)
    (270/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.783579832 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.775282462 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.784136138 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.973998711 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.697634239 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.881917941 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.771175441 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.153016922 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.935020121 seconds)
    (279/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.22075449 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.826608718 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.774884375 seconds)
    (282/309) benchmarking ("sort", Float32, false)...
    done (took 5.44599594 seconds)
    (283/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.788408722 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.814413305 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.066351713 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.883127055 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.21679776 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.054702911 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.755379728 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.547476453 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.581992006 seconds)
    (292/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.766538941 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.937015901 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.713890705 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.500320207 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.270974693 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.784002249 seconds)
    (298/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.790133406 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.055684843 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.993574789 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.690812272 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.033329244 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.89359622 seconds)
    (304/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.831428941 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.753865083 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.755185907 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.967818288 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.969913076 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.757006527 seconds)
  done (took 966.388545719 seconds)
done (took 968.109524555 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.785549295 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.77401215 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.757647366 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.77931991 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.869074497 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.806548915 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.773524523 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.761296005 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.806052078 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.808119819 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.756106174 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.801352588 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.758497636 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.757449675 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.756168865 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.770676917 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.071599837 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.794130277 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.777531839 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.771826525 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.780134193 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.756763463 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.806944834 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.804150945 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.761228955 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.763330829 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.764091704 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.776695561 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.872636166 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.763346332 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.763502533 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.776476325 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.071811643 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.789869437 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.75703704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.778657972 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.771836883 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.771007021 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.763421936 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.793771827 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.162079987 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.803117882 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.761313848 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.758139033 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.762551197 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.767745401 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.757863956 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.768851426 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.777896865 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.775896031 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.156847538 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.820021802 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.761735966 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.762949732 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.77667765 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.758788448 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.764324733 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.777352601 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.7812339 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.779287643 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.056174626 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.807227023 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.763715155 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.780044715 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.771645764 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.189772567 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.804693713 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.771571436 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.161935871 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.813687062 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.194491011 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.811942559 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.764698334 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.776540698 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.794371093 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.075530793 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.794307064 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.762926435 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.772301653 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.760339602 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.774266648 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.775429333 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.766495202 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.764883182 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.777827201 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.80759208 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.781695164 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.760836571 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.776500537 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.781468181 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.772736002 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.779402453 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.770771849 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.760044467 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.776681968 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.76816045 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.770746141 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.767779852 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.771076572 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.780571307 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.160336984 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.820082004 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.76111976 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.76375505 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.764598524 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.776984174 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.159971366 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.808421507 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.791793999 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.817033094 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.764964404 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.058650858 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.801843726 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.782199851 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.778047263 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.76846573 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.765174046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.062246822 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.190565557 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.821703304 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.764770418 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.762194613 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.779722617 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.770671123 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.767592024 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.077818801 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.797568243 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.780471548 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.885846699 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.780681984 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.800151553 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.766069156 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.773548892 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.813396739 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.780564195 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.800318868 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.77042296 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.782555437 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.78305142 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.765316893 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.779829048 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.782718814 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.765611011 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.77491527 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.763558793 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.815907084 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787074884 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.780112009 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.787435064 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.889707296 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.766449201 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.062886024 seconds)
done (took 277.932702215 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.847573164 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.759802465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.854704678 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.763901307 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.854872653 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.837804271 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.763443751 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.767136269 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.762208014 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.25081286 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.76543929 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.770802157 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.761781935 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.764798561 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.839701794 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.763963571 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.763623203 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.199489737 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.768855647 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.845004402 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.763034151 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.763948751 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.767044276 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.260814771 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.765835473 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.765459364 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.845252214 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.76265515 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.214744061 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.763703448 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.764197302 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.217471178 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.845562078 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.796343516 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.770814949 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.773445741 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.856843836 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.774887337 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.832246058 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.833679554 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.860708474 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.79772451 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.763340449 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.767823615 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.767504721 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.768289914 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.763367899 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.798448395 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.762466179 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.771616712 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.200239115 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.775404535 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.769417092 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.764353168 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.766734823 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.796654268 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.766130544 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.765213892 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.84340474 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.769123669 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.834388988 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.262298473 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.251912289 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.767031271 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.767924346 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.766940532 seconds)
  done (took 178.231078484 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.830641865 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.845209486 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.83136321 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.772860874 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.814227363 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.835100808 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.773782413 seconds)
  done (took 14.402041142 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.774313639 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.767820344 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.817641051 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.816847142 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.768630777 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.922762665 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.769559597 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.779124567 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.774859148 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.795303306 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.770622645 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.76903693 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.773878448 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.770854742 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.817208497 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.780975401 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88602423 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.768345466 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.768978418 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.916317455 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.770550106 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.773522184 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.792906444 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.781443536 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.768568393 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.774853389 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.344131794 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.770181703 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.768933244 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.765354582 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.768654424 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.814425579 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.768964427 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.765423061 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.764941164 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882978827 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.769659278 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.768408005 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.765871213 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.76574816 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.766858351 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.76686131 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.767320794 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.765662082 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.770190516 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.792974517 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.769163195 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.770854487 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.765994656 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.770179395 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.79424649 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.770651742 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.765489087 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.774392123 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.809155007 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.77724508 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.771770535 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.768332871 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.769643511 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.766364234 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.915490734 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.820263755 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.767767421 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.820246195 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.766304745 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.768395213 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.769335844 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.766942888 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.860409568 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.770187805 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.819300545 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.770845011 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.927506206 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.793430091 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.772470211 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.774642885 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.772910823 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780147527 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.773026051 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.781430581 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.769822728 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.772357244 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.781785196 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.777203756 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.774121631 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885127389 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916940622 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.774475452 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.773069839 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.779919474 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.772159836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.820971057 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.777116467 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.773659947 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831214025 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.891573609 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.800639603 seconds)
  done (took 195.992183981 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.781045383 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.782981287 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.774909069 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.792620339 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.776130378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.771494289 seconds)
  done (took 12.388561778 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.777306268 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.776209507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.776227874 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.775737524 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.773471448 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.772906983 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.7737751 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778105692 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.778326891 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.775993368 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.776519443 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.775205019 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.77549266 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.775516443 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.772346467 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.774841739 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.773031766 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.77442844 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.775419507 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773085881 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.021668418 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.770541954 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772665069 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.78000239 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.777680919 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.773463693 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.787028366 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.771922331 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.768425813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.782236656 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.777847007 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.771433497 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.776944319 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.779391571 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.779329457 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.776634221 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.779954746 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.773534682 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.772589813 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.772500476 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.772458316 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.77255838 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.772586453 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.77254976 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.774172491 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.781158439 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.780680416 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.7857145 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.772005948 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.775501255 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.771811277 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.771651059 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.77362368 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.77618083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.778371826 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777803392 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.776882731 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.773657029 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.775446373 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.780759482 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.779150044 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.772770539 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.777236053 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.778091039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.783531633 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.776964004 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.780778478 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.781462446 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774903905 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.773213909 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.776207086 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.775532881 seconds)
  done (took 130.821473101 seconds)
done (took 533.552535049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.041452341 seconds)
  done (took 8.747630813 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.849070332 seconds)
  done (took 8.613853197 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.338718867 seconds)
  done (took 10.051435665 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.808298282 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.804784863 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.792016222 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.780716415 seconds)
  done (took 28.922935344 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.094321381 seconds)
  done (took 8.800898909 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.802079921 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.775839552 seconds)
  done (took 15.357906038 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.915096515 seconds)
  done (took 8.622460331 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.138915985 seconds)
  done (took 8.859280288 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.799871695 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.794271619 seconds)
  done (took 15.324093266 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.783760598 seconds)
  done (took 8.493439946 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.99452284 seconds)
  done (took 9.8062527 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.804225423 seconds)
  done (took 8.585500208 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.800385377 seconds)
  done (took 8.50876051 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.90574508 seconds)
  done (took 8.615539242 seconds)
done (took 159.011091911 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.782047341 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.777417709 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.775447561 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.774613495 seconds)
  done (took 28.819190053 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.812517487 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.812866217 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.81594999 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.825739053 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.812903891 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.812752896 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.803415058 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.802713944 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.824502008 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.81497568 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.830028473 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.817453512 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.812797224 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.805624746 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.81749573 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.814172266 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.82577405 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.815096885 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.80482454 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.815465729 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.778231216 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.823970122 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.817087907 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.780465649 seconds)
  done (took 45.207038694 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.96905571 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.852829302 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.934464544 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.834401239 seconds)
  done (took 9.302612372 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.832685801 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.832540933 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.844100426 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.882915165 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.909304106 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.843925012 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.804997662 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.803338859 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.789258009 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.833149143 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.911418094 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.832159373 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.920849637 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.78335246 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.970930226 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.781731236 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.786844998 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.835188821 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.884957198 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.899551026 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.780176337 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.832765225 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.838960233 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.828264274 seconds)
  done (took 45.97628845 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.78151638 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.791088333 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.79231509 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.782359309 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.784154283 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.782147946 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.789563438 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.781640899 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.804076677 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.781458959 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.783097123 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.783093374 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.792046514 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.780891732 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.783763972 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.796517881 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.795912985 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.785320865 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.790292522 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.79119527 seconds)
  done (took 37.463394929 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.782727417 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.630336656 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.125598263 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.029797866 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.777734727 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.780652142 seconds)
  done (took 30.838055992 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.797143307 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.789291265 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.780825431 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.841514959 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.921799287 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.788270153 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.783857256 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.794237908 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.826901285 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.849886606 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.802943298 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.812769668 seconds)
  done (took 23.503960062 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.785204634 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.783489957 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.780647035 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.794060403 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.793287524 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.788754722 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.791320518 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.781225785 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.797540678 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.799311243 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.787534942 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.795123727 seconds)
  done (took 43.19670548 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862019727 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659124281 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229743939 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24976373 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.306366631 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982935146 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.782505416 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866746121 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.784468352 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05424194 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.162529153 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991778538 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026233767 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.547222623 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.787861638 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.286069794 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074819016 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009988726 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810529736 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479963923 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892601273 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322072382 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.436566263 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894439934 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986182436 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.907231849 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.041739323 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.731061542 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828641468 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785502438 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787394398 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784976211 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056017198 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901531555 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854546786 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786628004 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.196311341 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.489841452 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.791978034 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.435487982 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.318879191 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908667255 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783827696 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786226292 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.708672206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319807959 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877579607 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.787801942 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.485038556 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.782384192 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789362863 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859881446 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.788025839 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.589942977 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476956251 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.051915343 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.787366547 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788048384 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339650418 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828527334 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422644922 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.718463947 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.871104844 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.441964034 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257379155 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.943533291 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.78690996 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78485203 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714729865 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.445491418 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903855099 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921111673 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.80213815 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428016639 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07846819 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.231904681 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842789946 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064765513 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.615118495 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.717303124 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004772279 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.736100444 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716447475 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.616539472 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.713501069 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003244664 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820955865 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.410658423 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824911457 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.869443693 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.792707993 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802164905 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79298693 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001846573 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.682312121 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790499289 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.127892004 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052341557 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801454449 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871824074 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718353898 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.789523645 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036490661 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.990490134 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062156287 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.294477505 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882859963 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76588431 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.8060057 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.733875246 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.797491582 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.072070804 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851840711 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838400516 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910744013 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.740456208 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041606689 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789149873 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.89366141 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.208006186 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.034243257 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.151450756 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035985701 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852977702 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.799902818 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.793840866 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.519114368 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407064714 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.007422165 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.806030502 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321513945 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798463653 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.795086385 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730489904 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.410819767 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.206705586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.878919797 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.007042134 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.781379425 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063670189 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71887864 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928435292 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.802488069 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.005499469 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.4502955 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.878565148 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043890079 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.064467942 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.046036826 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801369833 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803899291 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887431534 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810487126 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.239658834 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039440195 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.792594733 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.793596536 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.517783213 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852331956 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797536193 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.794701349 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320251664 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074661074 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.815322811 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.797713793 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.66735426 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.805352904 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855310209 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795218602 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.799913384 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.309911705 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308296035 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.796935537 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.435992879 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005147982 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791315675 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.499956416 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980302843 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.801634184 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067209481 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85775992 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.717049951 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.488633944 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.489528161 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790829126 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717056877 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.790825153 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794879281 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796874776 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.979061689 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075462899 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843853372 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.449972835 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.901911634 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796973031 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.792284268 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792015087 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.306320235 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841399018 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426441156 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.798193991 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918736628 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.800635011 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71697 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.792996048 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78942638 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.792203545 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.736578135 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839544107 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.460943634 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005848314 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037106834 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.194703132 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799733475 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.452946698 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.911908575 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.801344545 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.138726091 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45566151 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.797357366 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849536163 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.79512625 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.459742507 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.531326311 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34213682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093729128 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117847937 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149052792 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.349121861 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.004328847 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878664841 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016252844 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.311675184 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847778208 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88038658 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72617523 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803693835 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.449900075 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153039381 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798022327 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007849011 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085799658 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.204297736 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931715966 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99383106 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819151108 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.726135316 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71137105 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.325850411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814992588 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.247607924 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005833943 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882032482 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.150962416 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.881660472 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.794072349 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14041697 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832901017 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.496712772 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.145668805 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.188738236 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.324018004 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028085869 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.795805525 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.236127572 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164807314 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.988095078 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.911649129 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724035772 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802169188 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797944701 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.807728624 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.76978716 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.633018032 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.035676591 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80008175 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021069024 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.908266922 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172297162 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.704533132 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.798005554 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795724574 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049443693 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.552753406 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94662766 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.101947766 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364103781 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801316244 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721940973 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72360937 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.501089718 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.794187861 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.765550195 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009003292 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.901488089 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.490592326 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.16433987 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108564272 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039716954 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.806402997 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.076322377 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07581061 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.294935453 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818146777 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.892037182 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.154673738 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.544106431 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.015277206 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.02572595 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358440861 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014220301 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250110382 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.770479581 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.800440818 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007485057 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.017388123 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.241194851 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980435172 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.511015211 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.814053661 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154272799 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864884889 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.221193115 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992588564 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.889042329 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808401002 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878509734 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80331505 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.805695696 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80508554 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810984493 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.217140797 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926235287 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.813440894 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875682812 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863480016 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.375465658 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.804533867 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07888954 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157297204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1439364 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868203732 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.802931033 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811488941 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729383448 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929799668 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.240466027 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074566625 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.920446724 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.933765225 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821071955 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.169941133 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.047644201 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107706687 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077362281 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.685432011 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431846993 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.920589293 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.019381644 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809114681 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.011509709 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020888035 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119517359 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364406298 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.935345234 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990841506 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0738717 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.168177754 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.803420312 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389067145 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.814540001 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190000479 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.838796827 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.244311651 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072324645 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804781279 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924284956 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806369061 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.009123722 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.252436866 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53554783 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154880092 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649560576 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.807593454 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084543446 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144449746 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112327235 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880972826 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811120044 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.494929337 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938986441 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.66846697 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.018167545 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804402678 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009617174 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.514562512 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.807936043 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087838689 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113561106 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.806001952 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.700422418 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835051124 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.808448343 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022180235 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023201767 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055619917 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81261676 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.814263607 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.614529523 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088703269 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871349554 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732998045 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.80449118 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853505456 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034388527 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824118442 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.320954037 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.508248646 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102588309 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.713496877 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824665629 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.195111208 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187847545 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153373321 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.331240446 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040188677 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.357641599 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.636143858 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181856198 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.807521084 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.195199844 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183514904 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.808181125 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.283072384 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911820538 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.085691553 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13641978 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.822013622 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582868115 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.84240782 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027785206 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169184684 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73855192 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.813601864 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.85638414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.806037908 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.792153887 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813988377 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.742563828 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.224998671 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.642574773 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365011844 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.808131817 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.935605977 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.223021901 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324769575 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909047849 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826172394 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809000214 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.507465006 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.093546108 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052240793 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.300103233 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.896312123 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.811271523 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808319854 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730357208 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.99263014 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.998292188 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094036854 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.136667964 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.911604494 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809788036 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.014149209 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012102081 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.237391939 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948224775 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91000831 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915652837 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.749243043 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.516807804 seconds)
  done (took 1627.621299172 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.829629661 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.836374265 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.814690065 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.808261105 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.818844589 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.828357236 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.860238707 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904178365 seconds)
  done (took 56.439070701 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.809300735 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.981710443 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.813621565 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.810019371 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.825273515 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.810515899 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.96693006 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.821157345 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.817955309 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.816121114 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.811464581 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.811166697 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.095372542 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.83319375 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.829805357 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.817191005 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.819061319 seconds)
  done (took 73.237852141 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.822128816 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.974821716 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.848843442 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.815097083 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.522426327 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.829141652 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.72206408 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.874581081 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.819268374 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.852012515 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.114629338 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.860852552 seconds)
  done (took 88.80099109 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.830329879 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.817208466 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.819409909 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.820178287 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.818472378 seconds)
  done (took 10.858435875 seconds)
done (took 2122.993046723 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.050825318 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.003065433 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.058745824 seconds)
  done (took 5.803969186 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.959180094 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.010906392 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.123908141 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.131056759 seconds)
  done (took 9.97370847 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.123704919 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.194567557 seconds)
  done (took 6.062939125 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.133957499 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.849043071 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.188222738 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.82050451 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.817492691 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.819639854 seconds)
  done (took 22.207923186 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.818170459 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.820469083 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.817228163 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.817720362 seconds)
  done (took 9.020107946 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.81679646 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.481909986 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.811606631 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.828268378 seconds)
  done (took 20.681576197 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.971756741 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.935249809 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.962261473 seconds)
  done (took 7.613104323 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.96014748 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.677950684 seconds)
  done (took 6.382067448 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.957704615 seconds)
  done (took 3.704339375 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.845140621 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.087572559 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.304100585 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.836527855 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.445700012 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.129957531 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.161536046 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.050094954 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.265164542 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.297779315 seconds)
  done (took 25.17317213 seconds)
done (took 131.590659664 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.389801964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.849913462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.024513481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.197805269 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.058020902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.022349227 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.031933584 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.192632951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.869975388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.857649368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.191876463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.088916448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.996931349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840682041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.999580074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.840636377 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.049475673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.218263443 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.89208814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.092169347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.05392693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.830759218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.025897651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.84624105 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.054851064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.975256202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.374972232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.847714465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.003864344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.385207993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.979049511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.235024068 seconds)
  done (took 167.065877767 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.824195214 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822775304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.818826593 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.821247749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.35715888 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.822260683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.820725235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.82322785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.244171171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.21652392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.822446633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.344620201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.823759808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.82111293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.822115552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.821642298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.374293095 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.824130321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.821462197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.821729489 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.820236833 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.178108166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.821303905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.183224683 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.375671374 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.822496132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.825281403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.822474859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.821733501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.822343181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.825846646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.823545841 seconds)
  done (took 207.764209306 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.822185211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.82158611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.820613797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.82248709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.825862495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.821990432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.821402671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.824117254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.449684064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433773847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.82150265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.824429877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.824968365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.821006356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.824515585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.82230766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.822239125 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.823876144 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.821771941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.824259069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.824340539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.577091625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.822580724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.552046651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.822898737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.823988305 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.822483212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.824372862 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.825547334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.826680939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.823179442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.822901872 seconds)
  done (took 218.816931522 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.068824607 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.828930268 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.829777284 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.745657886 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.823906623 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.827822289 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.821513572 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.072094948 seconds)
  done (took 18.774158661 seconds)
done (took 614.176205449 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.211594 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.048780517 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.005975392 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.852125589 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.086257289 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.897967693 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.845384172 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.918070043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.66622211 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.922625085 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.488578719 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.867933501 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.585917683 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.876165622 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.971851271 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.906289874 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.43883783 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.538296251 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.021077405 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.906237525 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.032321896 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.745406027 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.930465586 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.691905215 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.612935066 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.796173412 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.869654056 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.442253068 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.858653308 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.008399954 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.522639439 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.102538304 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.861042859 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.846147184 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.904240844 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.882028119 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.04495714 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.859685709 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.974993952 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.54866873 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.909534524 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.577971315 seconds)
  done (took 100.831143008 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.841137132 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.835177009 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.833677929 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.835888675 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.843981962 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.835351116 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.838027819 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.835311497 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.833036702 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.836779501 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.834531693 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.844599217 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.837000867 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.846004054 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.834637119 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.837140068 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.836823633 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.846067961 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.836226074 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.837806666 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.837394025 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.835991446 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.833995984 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.839887112 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.836751458 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.838007117 seconds)
  done (took 49.549496359 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.832423899 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.003416617 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.075622041 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.852888886 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.832366254 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.83578264 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.850504273 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.835554654 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.834812616 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.835510667 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.924403875 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.835259235 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.853642566 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.077246724 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.847414593 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.831940307 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.831337826 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.83397811 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.013850885 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.846321159 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.852365497 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.835354218 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.85127732 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.841489826 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.836005075 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.83162615 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.835052956 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.336561618 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.838613233 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.9232922 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.888623825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.856675731 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.283250674 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.080289064 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.886717222 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.844226822 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.831432086 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.926475616 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.837070366 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.83337546 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.850963997 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.836245015 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.075398867 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.362963168 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.845365736 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.834617032 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.343826325 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.936003364 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.876016431 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846598073 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.080673639 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.853540424 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.836168437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.838815715 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.874124705 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.840262266 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.836423333 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.20695192 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.848863147 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.856563776 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.836912507 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.839602767 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.018581925 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.842493949 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.00701047 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.844116816 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.844009337 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.839493437 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.081935252 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.854005728 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.377025822 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.849141675 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.835287708 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.924363573 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.005162044 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.369085724 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.847132136 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.016056215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.302551334 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.859310375 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.839010523 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.327844829 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.862226818 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.840071008 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.836469955 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.836495991 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.836805622 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.880568912 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.849178771 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.288291098 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.373143562 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.216378695 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.859156569 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.846866795 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.835155128 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.201714911 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.841386516 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.838412822 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.066960321 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.379917788 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.850827714 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.843843472 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.351870899 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.851017625 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.854691539 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.843682751 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.084565418 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.852272072 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.878860122 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.83730533 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.84236742 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.839240882 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.857896272 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.843858773 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.838316082 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.345514479 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.94506303 seconds)
  done (took 228.585653408 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.839632529 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.839175456 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.837310955 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.835856822 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.837447587 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.836482022 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.83549688 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.834861649 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.837026667 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.835477244 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.837128701 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.83650958 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.839231187 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.835381706 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.841783033 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.836622034 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.438726486 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.833819353 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.835154316 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.83293197 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.47639728 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.83860454 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.836973781 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.834028801 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.83842763 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.835262394 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.841960382 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.838175006 seconds)
  done (took 166.44421204 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.839194681 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.948887868 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.859992199 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.867006454 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.841212935 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.837699117 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.933321674 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.851095724 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.844212659 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.839207779 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.838977948 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.899636352 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.848589788 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.937894872 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.865678614 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.943524077 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.940588931 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.841180223 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.838173725 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.840667887 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.868642347 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.840664231 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.897459801 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.958085429 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.852427959 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.950151494 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.856681039 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.837253391 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.837895743 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948501062 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.855653993 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.896449756 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.863038973 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.855416927 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.956875798 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.950250917 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.938432348 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.937766795 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.843936932 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.837216267 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.839247994 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.839854387 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.954029261 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.85966746 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.841396386 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.954270095 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.853982736 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.839847977 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.837036842 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.841587142 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.850394368 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.856822754 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.903039885 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.968263934 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.875944183 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.858898533 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.937081337 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.964456966 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.836783459 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.937587695 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.840567075 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.951443176 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.855554069 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.840685799 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.839410299 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.841671149 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.86825772 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.943155297 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.943748812 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.845291829 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.938263608 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.873515141 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.846752048 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.839295836 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.839558953 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.954098411 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.957198851 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.874370398 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.877461205 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.867140386 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.846809305 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.83996285 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.840133984 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.856365601 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.840779718 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.954091963 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.954710534 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.844078558 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.841260452 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.840891078 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.83864205 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.862862118 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.959987954 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.875010844 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.944966768 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.906965997 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.912648957 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.851497887 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.852377824 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.846570782 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.905286734 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.853027871 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.850753002 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.133190342 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.898139999 seconds)
  done (took 199.446381274 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.247124038 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.884935924 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.897603145 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.162239998 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.187365674 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.82682924 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.883381058 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.890493515 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.909350153 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.071505854 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.96358289 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.90714601 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.874619421 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.862059084 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.888677024 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.910172932 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.89579554 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.237929543 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.093628185 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.022502805 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.878418793 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.160652881 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.199052936 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.471871301 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.937158226 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.283569573 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.453438836 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.018309628 seconds)
  done (took 60.794827152 seconds)
done (took 807.404199062 seconds)
SAVING RESULT...
DONE!
