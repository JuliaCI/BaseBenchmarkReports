cset: moving following pidspec: 31623
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289601323 seconds)
loading group "string"... done (took 0.582675306 seconds)
loading group "linalg"... done (took 7.142089838 seconds)
loading group "parallel"... done (took 0.165326853 seconds)
loading group "find"... done (took 1.122759472 seconds)
loading group "tuple"... done (took 1.98162648 seconds)
loading group "dates"... done (took 1.267268305 seconds)
loading group "micro"... done (took 0.235598734 seconds)
loading group "io"... done (took 0.962784032 seconds)
loading group "scalar"... done (took 38.400965259 seconds)
loading group "sparse"... done (took 12.348503901 seconds)
loading group "broadcast"... done (took 0.967780172 seconds)
loading group "union"... done (took 13.129826776 seconds)
loading group "simd"... done (took 4.416842456 seconds)
loading group "random"... done (took 8.956492961 seconds)
loading group "problem"... done (took 1.974360335 seconds)
loading group "array"... done (took 21.168898651 seconds)
loading group "misc"... done (took 1.918268164 seconds)
loading group "sort"... done (took 3.204450513 seconds)
loading group "collection"... done (took 17.932196172 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534149892 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141024267 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116504885 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137674208 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182647185 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130877071 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144111657 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083959879 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.044616491 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168961113 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139340679 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.480060992 seconds)
done (took 5.06157316 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199892048 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086059368 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094850544 seconds)
  done (took 0.878920587 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065236816 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125901145 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079634445 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066868398 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065853792 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080240512 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066132159 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065172973 seconds)
  done (took 1.258377388 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07332138 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067337226 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083779048 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067409451 seconds)
  done (took 0.999041179 seconds)
done (took 4.117527168 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.903730495 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235777171 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187480767 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453834036 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147161199 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187440158 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670004875 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326159074 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213888106 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100656908 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103525882 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.381229417 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105775054 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672561978 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075089715 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104663988 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15771894 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423486045 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081350343 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082043703 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103871595 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141939701 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100318228 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076415462 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167735752 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069103002 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147262086 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094741719 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067552658 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242762631 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189478757 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690223342 seconds)
  done (took 10.447005167 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099050503 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116057045 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068051562 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139357107 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099840766 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085625229 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070878243 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082528367 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091059038 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157028665 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114159136 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104746748 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081276557 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06929308 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099607928 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211144834 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108310176 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08563438 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086775738 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074828903 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121152792 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082127419 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093500879 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077223887 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15164456 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19445032 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113550425 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110688308 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069340031 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080325915 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131037734 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14111786 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064972642 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08135228 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139249172 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109815392 seconds)
  done (took 4.526102336 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.0423281 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159784133 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09124738 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151370619 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084793327 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109083059 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082292478 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099116863 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244762983 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.141711392 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.462921146 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127698363 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101125094 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066536201 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08305286 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066733486 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.539839264 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144948123 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119365133 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084498295 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08893944 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069441458 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10079605 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067212667 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065064326 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085899126 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103190785 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.318861535 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14419729 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067362628 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.231555824 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088050262 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087293174 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101174597 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195062857 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09638377 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122074369 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080691387 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066620717 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168710617 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072672686 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082505992 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087516496 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108031451 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117377504 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103959925 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063182618 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08478686 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179866181 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081770502 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065119237 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098240776 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.877577221 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165675223 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079136404 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066396398 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289187981 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083247482 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083248243 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063889461 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.253789278 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.154100865 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067483338 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.088934061 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065932209 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063025546 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083585012 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368896037 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06945953 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.724390826 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084863422 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079089238 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083429075 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06690563 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071918562 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088745967 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083688115 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081388308 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067953113 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065265464 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082644025 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067825896 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099970012 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205801723 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065896519 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082363062 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065448358 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084312726 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112660226 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083263768 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065823168 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113668783 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068548514 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066753692 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118087716 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065708166 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100934444 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083874537 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113719981 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083235828 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.117107496 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067618851 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111313085 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075764222 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113605796 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092661392 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06778204 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151977103 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064247182 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081350167 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066525491 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064217657 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083917436 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068256622 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096619829 seconds)
  done (took 20.893420005 seconds)
done (took 37.615365727 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291259265 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090013863 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09068199 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073905655 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090459846 seconds)
  done (took 1.421790612 seconds)
done (took 2.18084915 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119002712 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115500347 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063100327 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111226848 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062634314 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116147792 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113894028 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080449524 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117688711 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06448852 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112441637 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063729493 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062932753 seconds)
  done (took 1.989649875 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08204896 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083797404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084932891 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080587168 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077531656 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081718641 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079744358 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104113269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079825289 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086842008 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063962381 seconds)
  done (took 1.660070947 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081806846 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083381232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084221345 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080549377 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077762569 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081538238 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07910719 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101442263 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07965216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088398774 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063625698 seconds)
  done (took 1.657502462 seconds)
done (took 6.058304206 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0772306 seconds)
  done (took 0.826570587 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.698045296 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.546033011 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08244443 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133703408 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220834997 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15263178 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.443870649 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108706312 seconds)
  done (took 10.309414023 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101613244 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085514523 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069229376 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085832939 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069125712 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086850852 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068170152 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071247703 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082506161 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069368821 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086306753 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071398049 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086623978 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072068484 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068019585 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085527561 seconds)
  done (took 2.078644911 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093408913 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090992617 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089835798 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075531046 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088554808 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07225943 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090823528 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073701611 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086067326 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071931101 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091010294 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074847354 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086717091 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064972521 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089956055 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076037371 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085833588 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073705794 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091055972 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074318848 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090996059 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064785504 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087228518 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074557575 seconds)
  done (took 2.820836153 seconds)
done (took 16.792078268 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129648814 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074947817 seconds)
  done (took 0.96235948 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08059768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096718301 seconds)
  done (took 0.943737345 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082025152 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080068114 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088002935 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092611395 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080509153 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065606702 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101840542 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066152451 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080409845 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066287547 seconds)
  done (took 1.569812791 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068752948 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092067274 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070418375 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096629629 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07341404 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079732691 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072015959 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082910066 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077132996 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0778487 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071493397 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098018421 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071027 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.098968452 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072140011 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08272138 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085873443 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066982119 seconds)
  done (took 2.205897728 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065398766 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067183182 seconds)
  done (took 0.901076701 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066578771 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06305238 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081146512 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06641114 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077602521 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062951857 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078227479 seconds)
  done (took 1.264361768 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397168503 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107591775 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241418663 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086649726 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10209309 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260756942 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082211926 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070888962 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08673974 seconds)
  done (took 2.241238334 seconds)
done (took 10.853434912 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078703554 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08501237 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108983036 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420605218 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10601003 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065827803 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14067602 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.207304836 seconds)
done (took 1.983961192 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124764994 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606206604 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.396415612 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211657943 seconds)
  done (took 1.98743579 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368680739 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090735735 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073311839 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066003153 seconds)
  done (took 1.375433979 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065455584 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06919348 seconds)
  done (took 0.909437022 seconds)
done (took 5.171532903 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06618563 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101841245 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063284241 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066212224 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080028442 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065466282 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063276551 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080646342 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065317608 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065417477 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08100359 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069061114 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.080916908 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065655508 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063736158 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078884281 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065816006 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064019069 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078645393 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063528484 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065189092 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078611777 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06344324 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063527611 seconds)
  done (took 2.50803703 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084141442 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082480197 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072034686 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087498603 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069781163 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086531112 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070800411 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066154934 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086888511 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068045257 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085525722 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070141964 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083717815 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070256625 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083472577 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070618178 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086640812 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069662834 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067551294 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085089415 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071035541 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081374652 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070429493 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086365088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070687701 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085129158 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068140259 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081933134 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071081183 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085302302 seconds)
  done (took 3.096364512 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069527373 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063398163 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079989862 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070130609 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063457693 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080409655 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063297487 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080141648 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064420474 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063724981 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080352567 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062980315 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063225902 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079455425 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064174148 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082681195 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08023231 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063995744 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079190696 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064449884 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066421593 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079163799 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063670708 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07958842 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063174986 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063634329 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079544382 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063278527 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064465136 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079269576 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067092676 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066826052 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079599514 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070591128 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083936377 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063463952 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068638365 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07864323 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064281714 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063219991 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07870838 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063607011 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062724069 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085885125 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064242358 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081397958 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063934736 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064860974 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080252416 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066006349 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078719316 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063239848 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064832641 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080335848 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067459689 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062774657 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08020037 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063375619 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080641545 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063694546 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063712246 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078800054 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066204901 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065012874 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09410358 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070207856 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07889972 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065308776 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064237684 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082034823 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065955459 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092711868 seconds)
  done (took 5.909657844 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117439614 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091555574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08270331 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065473907 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079008717 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064377062 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06789861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079403272 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065512912 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085437246 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064429401 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06494953 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081280704 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076731112 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080103152 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066049678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085499958 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06151189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063529014 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082908902 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064284083 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082963652 seconds)
  done (took 2.455436974 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188175503 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088730515 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109785793 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090801238 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083777361 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073525878 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085692623 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070102378 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07048141 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084240818 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068831789 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085522303 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068749063 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083436621 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068703207 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08442049 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070032038 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084098963 seconds)
  done (took 2.343620253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076961073 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066066444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105084827 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066464555 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082918294 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068946907 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08804395 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075771595 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084551337 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066327827 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089681415 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068981421 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084289206 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066139648 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068297831 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081423007 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068688884 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082038224 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074580787 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087141123 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071423362 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090481335 seconds)
  done (took 2.499897859 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0798598 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067293729 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10045392 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085115892 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062070894 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064820695 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088002107 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066984242 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088012253 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067615204 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066267826 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080781599 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071458195 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081884118 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070624361 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082082455 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068596806 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065951725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083899267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06248327 seconds)
  done (took 2.291191455 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08690834 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083345275 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067546982 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091347801 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067987811 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083510374 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075693322 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083266155 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067243131 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107135092 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067143741 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085172545 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075653651 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087433262 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068077256 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091336094 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075334389 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090648886 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066762682 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084154041 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.216408952 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067294825 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091843936 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066804658 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083628977 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067105524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067294503 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08845898 seconds)
  done (took 3.146882547 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066334621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066539002 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080029108 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063238893 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063870765 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080454205 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06329084 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064367133 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08224447 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063748478 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065834006 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081236191 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066833915 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081640106 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065921956 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065839599 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08168924 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063870708 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064014938 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080184342 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066556876 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065530915 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082022818 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064171119 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0802033 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066321768 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063854843 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079673727 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066153772 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06409218 seconds)
  done (took 2.902672625 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075706316 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089961923 seconds)
  done (took 0.961061262 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063901627 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080513221 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079838535 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07095831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086494155 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067104192 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091076174 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070873342 seconds)
  done (took 1.403337092 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081748174 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077622274 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084212879 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078024853 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093722627 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084116923 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154611965 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08451005 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073180664 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08175068 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080203666 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065989781 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089132421 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067249016 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08887247 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072752399 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064545268 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08775415 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069341444 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081871517 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067824382 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091694284 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068968254 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062794467 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084129016 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075679254 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093511899 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067630477 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086206839 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073562959 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088031622 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061149199 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066688135 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083196277 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064472997 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092337668 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081911452 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085923131 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075147784 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067549754 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092733531 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061362779 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086960176 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072661212 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091997657 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06728881 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083189112 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061745179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064256939 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085036348 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062128218 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066322972 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077471688 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072893025 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086525576 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076916975 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083793539 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068120445 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069013888 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086440844 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072864562 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084706618 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068729412 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065708663 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092062613 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071503322 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092232268 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061811916 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060206385 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081050113 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076821323 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105634613 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073606914 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083193807 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068047679 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080927528 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070096568 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067719819 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088319734 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073117445 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082690196 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073064361 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090279181 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067000273 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068931795 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091148186 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064785564 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084295773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064824219 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098253729 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065327666 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080919005 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064650233 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07649357 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086050048 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066678762 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080728583 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073480299 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061255113 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083966108 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067636562 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083417332 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076572996 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087757294 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071959731 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091538017 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074067439 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066583063 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086882746 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063999437 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084196529 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065912585 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072540204 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077117114 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069467636 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08383262 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066710788 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091034426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064376104 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066187726 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089933478 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072545655 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081725121 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063254446 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069743799 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083049717 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07046684 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090964264 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06555316 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06174108 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077899556 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070648425 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082586054 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07038894 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087797203 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069444227 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061459779 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081225316 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070492991 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091012861 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06689971 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084058487 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072149726 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067765651 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082155235 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073530236 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085448246 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065683988 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071823852 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083758741 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062186335 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086058929 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068941761 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06492251 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086655363 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070060254 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085349735 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067687052 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081747729 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071078297 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067332998 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081866148 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067450132 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081865281 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076914473 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067462314 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078550877 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063835857 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089385491 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064748569 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065695147 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082780424 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069224103 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083829012 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064294873 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065784491 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085047975 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077020163 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087604007 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067457438 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088665115 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078056105 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082937816 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069387944 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066298059 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084406464 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068110277 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090984577 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071516368 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087816372 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069467121 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062912724 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088448838 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07352399 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082246004 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064533699 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064949815 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087497807 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072391465 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086022938 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067452942 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081354334 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067149772 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069879511 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0865066 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066489951 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082817721 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070990589 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082874963 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072465278 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066971641 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094040624 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069573798 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078993645 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070603641 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082038107 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073393044 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062039433 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081934803 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066313315 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084636833 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066527855 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069854701 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077288211 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074435365 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09107739 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066887013 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065872751 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082647479 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072786235 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084591135 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070881468 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069814016 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089789648 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076937773 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082605196 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069884187 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093451789 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066801771 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060837834 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088207125 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065270216 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083069255 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065903762 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064008989 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085977219 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075135079 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090295792 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061458177 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08582131 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065507081 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065702501 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078743831 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071576857 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085879578 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067797177 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072979527 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084262319 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067516886 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086995165 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066606743 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066880615 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084991545 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070007242 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083777783 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069336324 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082412674 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06922599 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065855085 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081390618 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06828478 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083475868 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066915471 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071771898 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08259502 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067144539 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085585807 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067954414 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066568083 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084083207 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066314534 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086331255 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067804089 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066307585 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08507492 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062499878 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090227792 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066529408 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073144993 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083317943 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063848599 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088318058 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069391944 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088090578 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06694643 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067785425 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08496219 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067155567 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086055217 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07239759 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064700385 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094432929 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073423166 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084160689 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069878002 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083639214 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067821498 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066089704 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084106181 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068091745 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083455836 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066603491 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071159131 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085537597 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067826203 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08488745 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067458926 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066981847 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084198272 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062345773 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065352 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084298521 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066949843 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093102271 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067062362 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082839354 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065761632 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068224567 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082709021 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064161557 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090681083 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075428396 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083373574 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073598903 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082898281 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06781502 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076023823 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077388983 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064779663 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081283424 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064663925 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073318242 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084333417 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076429374 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084042948 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066438366 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063438066 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083463117 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065639735 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078149283 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065111772 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070499738 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082608126 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065847566 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083658382 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070130079 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067668198 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093251961 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065605609 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084421929 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067398395 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064496962 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083031915 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066934686 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086797641 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067866617 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064436107 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081190268 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066931941 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0844311 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068415074 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066244287 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08545206 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073588988 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082770528 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07027174 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069940827 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081760888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069676372 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083160494 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066035841 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065318564 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087639205 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070417845 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084925728 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075407349 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083511912 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066958694 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067161964 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081546743 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067017107 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083920564 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067014101 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066408149 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085758672 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074840764 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081537732 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069709348 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06650939 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084070089 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073309794 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083973575 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069195582 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090380822 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066748748 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068249561 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091981869 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070366932 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086191945 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067393897 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085845695 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072635866 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065802139 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089948747 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06673856 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084285326 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068702037 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06434336 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083492252 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066933069 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082368824 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072259034 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067507885 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083365818 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065849468 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081641371 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067668333 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069334073 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090671985 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068488319 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086428509 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062371657 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063514403 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084762137 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064991255 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084994528 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070280374 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071642916 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086362564 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066903915 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083345649 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075125904 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089794915 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070572782 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064661282 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088392514 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067656743 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08573018 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067684767 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066924532 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08478487 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071389631 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085456989 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065377441 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073450143 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087321367 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068077779 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08557419 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067888925 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066470441 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079741249 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067862784 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085828919 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071659357 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08600751 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066766185 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076402073 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081805941 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067231377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087193358 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065818567 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070074184 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079470001 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06829608 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085467987 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06792555 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061869864 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083152541 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065329981 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085750435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066087658 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06193009 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093850742 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075324866 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08671839 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065786842 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082341438 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062394543 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062914078 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083651476 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068397193 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068515042 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094411934 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066277256 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083615632 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062779251 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084309315 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070030525 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070927367 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081854847 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062553329 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06587849 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088495334 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072044063 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083038296 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066973288 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087235169 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068867495 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06459335 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087235204 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063945499 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088044624 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079145487 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084839856 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06710992 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072167219 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091455415 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067140963 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079479569 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067915861 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068671885 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08522665 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067897423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08514705 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081176475 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087385718 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066669796 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06533554 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087024246 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065920895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091842256 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067960273 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084576653 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071446536 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068664698 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09303807 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068833475 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091083643 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069803172 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087318291 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06619844 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066305926 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08261185 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066042942 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085148346 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067789613 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071306981 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092441058 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065878073 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095122387 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075315242 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086072922 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064161615 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065680592 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08445832 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062207463 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084858592 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064854649 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064650803 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082098955 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066212214 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085054363 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073060092 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067476259 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084800238 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066994626 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078134059 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068547762 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06875511 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084840637 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064518954 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083973377 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068050682 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069774162 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087672915 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064739058 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085570884 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068584841 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067032088 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079306974 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072890195 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083235569 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069199773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066160135 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084618375 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068068054 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087673008 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072402702 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084989046 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069219534 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075144905 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086563547 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065088909 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081246361 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071857129 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064940016 seconds)
  done (took 45.902435863 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106160495 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081227463 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062497216 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079795845 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074625924 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081056951 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062482146 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063009758 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08026431 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065625426 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079411784 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061783323 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088667784 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08613003 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093088064 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066725666 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079502608 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063464841 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079271484 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064030211 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089332487 seconds)
  done (took 2.448703936 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074902827 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089260506 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073166575 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094282547 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068207566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088999007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072720023 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08928007 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093665928 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06757208 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094097021 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071302796 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085076347 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067653893 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084497905 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071870309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093931992 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067874199 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088349949 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073899291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089011942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073174875 seconds)
  done (took 2.60848816 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066878521 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06585593 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085684257 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062234415 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065795527 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079123155 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07011381 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081832561 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070193911 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065262475 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082619521 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073867911 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085657891 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061442207 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066354792 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082302425 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132569606 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071361659 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06500686 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086125006 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061866544 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086417015 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061776222 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062027708 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083187649 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070331731 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084903436 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064824011 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066058681 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082977416 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066425332 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081999805 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067384434 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066706862 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082588378 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06531405 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065038156 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083974921 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062158449 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081670869 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066472966 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061992208 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084086839 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067646337 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063293454 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082554356 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068231399 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083169631 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062437151 seconds)
  done (took 4.450605374 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085240194 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129063358 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086570961 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088937006 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100809309 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092083597 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071067994 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10995082 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063652311 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083569605 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08237437 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102677271 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08471782 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070518194 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090300244 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06608671 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084160777 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065798482 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070350562 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085142406 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069964286 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091186869 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099288547 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080113776 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087785619 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066206127 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08338345 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071405817 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097146419 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071053092 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089252911 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072167765 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.098808151 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071076042 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084341644 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067735588 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100720783 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083886148 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069385367 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064420436 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086669961 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070932165 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091187734 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100929532 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067116615 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071305622 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085087492 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06256825 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097296095 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068028192 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093037952 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099744127 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070003204 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084048611 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071109121 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099011275 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066382311 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082669746 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070259859 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096787124 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064238837 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087726469 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080434984 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085690901 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073684433 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099277458 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071215208 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088339698 seconds)
  done (took 6.583935648 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075309564 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090716303 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081018272 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099941178 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091924668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074781244 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092549251 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075247475 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092136531 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0787047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092114778 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11340625 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068670435 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093501449 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072368907 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091031666 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072773824 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091450034 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072409713 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092018843 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091164262 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080563697 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09081682 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098859943 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103081568 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085320963 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072481323 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090678244 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081228725 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092244083 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101916904 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073474261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090503367 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099265117 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084500891 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090291619 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065652824 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09003139 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073093882 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090459216 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068896369 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100054977 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071561408 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086703175 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072127458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090322394 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098823932 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083768379 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094198988 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096571237 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073786435 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099967135 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072380093 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091338281 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099003008 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105472847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098869226 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099824773 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072305794 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098515475 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100206934 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106676391 seconds)
  done (took 6.2914021 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087333729 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094138656 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096527226 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061586627 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064366642 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088874823 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064704281 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082610915 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075318618 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09315624 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077566035 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087664129 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073379354 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096385209 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088170933 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073704074 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088380934 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070633835 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092831576 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071008072 seconds)
  done (took 2.480497119 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075027431 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101752477 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067598831 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0713088 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088360368 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071341201 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087369 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069138605 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084851741 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069817532 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094629063 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077300942 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084976535 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072538431 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094586323 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072956877 seconds)
  done (took 2.140638377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078678909 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095414883 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081246433 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085093036 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064855185 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081916612 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066260456 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062041634 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081853903 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080689765 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085472596 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068879107 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084824814 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065063076 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062466757 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0887466 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062434259 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083072405 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066763641 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.098703558 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07813719 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083056606 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067625184 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066682487 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085792371 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070810561 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085847784 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064534283 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083243743 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067037647 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085787512 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074454486 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081449193 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065475673 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064413549 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082051146 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066337961 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085271374 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070172296 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065316978 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083123835 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06667204 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084537474 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068133245 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081657314 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066898209 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062285669 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09124443 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06522288 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085194963 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066859919 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086684039 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067768834 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076384486 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088754097 seconds)
  done (took 5.038904161 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080033806 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06929761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080825716 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064346054 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087442188 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068195831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069440794 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086913444 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068571381 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082120967 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068286023 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086903946 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068441066 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069596291 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086334099 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07011175 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080328975 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068399194 seconds)
  done (took 2.216389782 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07228027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065972527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092437166 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066667839 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084533721 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068328293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062539024 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083874137 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064937876 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084684611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066520466 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06766815 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08301729 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06904658 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084911431 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066543151 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068883835 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083715675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066902896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080533167 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069014131 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06465574 seconds)
  done (took 2.480904551 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072466174 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092253907 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161334238 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106730414 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081598886 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098967351 seconds)
  done (took 1.477838048 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089887453 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098491705 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067813126 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106048538 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074959015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08711261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068567651 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086781279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077488473 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100156915 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06836069 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095735009 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095475298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077529601 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091406709 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074319844 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087460233 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067950206 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085000437 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104871786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069032378 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094803614 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069229328 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086194756 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06878956 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09471042 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07700024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100649714 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08642864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0770559 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092267734 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068687619 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095873195 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10078122 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070608541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096295285 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069195605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105270481 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073691463 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095834547 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069103248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09366162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09590207 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073254339 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09475808 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06823964 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092194478 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067440102 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087392161 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111039051 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074089826 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094931567 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092870075 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077908826 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0956235 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112006995 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082064512 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095882555 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092668533 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082189098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095534924 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073418088 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09552394 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099261833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074276732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094990315 seconds)
  done (took 6.550017126 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084150237 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10487511 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06851249 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100856197 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095807805 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068619263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08681058 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06873142 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087380117 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067767457 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127734049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068796198 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096143349 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095075646 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068874479 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086683601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06864966 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094425096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06801747 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112082057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086811585 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076665462 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095066298 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095541998 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082253138 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092181594 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069211187 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087512455 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068108225 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086532359 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073565734 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088142834 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095633415 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068174368 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0948625 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068678029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08699953 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0741369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086917933 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074517725 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095989419 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104449391 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068252928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087411607 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082426241 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087657765 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068108782 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087377588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068048393 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086544267 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100255258 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082782528 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101364157 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095969217 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069234514 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087414582 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068872284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087394519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068661529 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092569811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077371588 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087045619 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112689151 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068656937 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088386712 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076283582 seconds)
  done (took 6.443013777 seconds)
done (took 127.407128253 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199896915 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183324138 seconds)
  done (took 1.249043345 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068494877 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095402951 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097052591 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127559512 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086268176 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100325063 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117921271 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078821266 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066613647 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085614762 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066478938 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087320525 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1309108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066978488 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085974179 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0686616 seconds)
  done (took 2.303393955 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102585657 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194304464 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108385174 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065824475 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098191139 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07755677 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084628345 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075892741 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094173141 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065118556 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077005714 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095419815 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064854909 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095237487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074353466 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096834448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065059791 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096714075 seconds)
  done (took 2.508234042 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103205222 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140074806 seconds)
  done (took 1.116970522 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.197795272 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121760513 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202637826 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.417652593 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205245702 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274943478 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172840705 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171531406 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157744961 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.16830289 seconds)
  done (took 2.959684558 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099512387 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170075223 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307969662 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136753365 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08601553 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114829151 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137046609 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089095272 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10181275 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099269769 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081062898 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096631668 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097935736 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095515141 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073903705 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097013533 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120168997 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07423917 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095802396 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076426419 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11763091 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066703816 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093976447 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073964991 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077565178 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098025743 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066107471 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085918136 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075777627 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094081547 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078915151 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113419605 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096458712 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129771058 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08210031 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129753824 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097521839 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071988599 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09457977 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072629775 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097192074 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076778407 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103254554 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095389526 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066146054 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076664537 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085172665 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067382455 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09828931 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077666419 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098353434 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07843223 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.12931946 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095832931 seconds)
  done (took 6.18606602 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.751385667 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110123221 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093431564 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.811110536 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08808979 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104550121 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.718972748 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116730356 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21079237 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.774768898 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089364436 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097959695 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18203141 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233631159 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.877230269 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286947063 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.645280296 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107520794 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107545764 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131216825 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138854073 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17780735 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149625371 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.406881912 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074461742 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091686462 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136590648 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094945755 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139669757 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084250853 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094012972 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155136376 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223293483 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154838696 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095943583 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069912111 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090453366 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146713496 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240061344 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.172311401 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15818526 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0679588 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090112702 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140319072 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131904182 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067267626 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138960188 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.1729149 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.150141811 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072857782 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095121345 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141846027 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136853479 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141976913 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100764226 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284073763 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.267185283 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089833448 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120187911 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.083307583 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232224666 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082303606 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201363989 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138825641 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168626247 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090222894 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730361255 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145987663 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090835966 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073444494 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119069834 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094601381 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138281983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145269934 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383263311 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141645367 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0727495 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089653038 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.184022393 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102636595 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070604184 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139496124 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095009571 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099861915 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163230249 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142287465 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145524259 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.20796252 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141009892 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159619129 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073904442 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12313452 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094849969 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188109674 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.172125817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139594741 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209534105 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13847631 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141411516 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14626002 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095769378 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.14973825 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11840151 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080840616 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135803736 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19207955 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122879901 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081491496 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093880085 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13879607 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125251714 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084647895 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159450398 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.14931002 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.43072727 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145363218 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088278416 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085706578 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137975768 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160540758 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075688482 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236812708 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120824324 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146499833 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120908669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067995281 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119854952 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140412889 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077022001 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12118178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157485276 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076496371 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211763431 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190949956 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076933931 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215449611 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161427462 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074753479 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148023276 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119459392 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145033144 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097659032 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138910307 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073999745 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747182464 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142277672 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120548978 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0730596 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165745686 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09024298 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082937751 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104261926 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068317165 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780207149 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084753854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100703012 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102320499 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075124008 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120579392 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134979487 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093423618 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1392142 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.181283972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096041179 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117793089 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083241458 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137748179 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096470206 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10329706 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083928728 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102766806 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121611335 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073486237 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102605853 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145704052 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141447619 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191319825 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.554039367 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069200174 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104028684 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202309419 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070439529 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265751069 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137602451 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196773071 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141556943 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079895029 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290505004 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142493052 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164841594 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105776256 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151163626 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068234572 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13621657 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14120045 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090711636 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074503529 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138589736 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165583469 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143998561 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94636621 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070889571 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203681373 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067428696 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171127252 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075731428 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096360195 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238981816 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090908292 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145736328 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143000002 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093168796 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083390219 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.816058194 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104670302 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137854225 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094741095 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172633194 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162842822 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135249031 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138419362 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074639104 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.13786468 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208679213 seconds)
  done (took 40.376128736 seconds)
done (took 57.575062417 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256745514 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17625082 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240446407 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144225167 seconds)
  done (took 1.787031511 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142515112 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103699625 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116966867 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085285844 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101947124 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085172087 seconds)
  done (took 1.53011151 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405215274 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273471817 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234035722 seconds)
  done (took 1.810860175 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259958349 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211284 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446367233 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.294475677 seconds)
  done (took 2.234254463 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.172955496 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112688058 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067211262 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105589425 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157498286 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250194991 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126800227 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186548215 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078579802 seconds)
  done (took 2.201726655 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196696595 seconds)
done (took 10.661447605 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.153230612 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099406257 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.124040226 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21040571 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.24358121 seconds)
    (6/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.209292706 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08815896 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.121230125 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098560876 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.177926924 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142933579 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103415708 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091384764 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.189412179 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090796816 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097314861 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103327749 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098464574 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075125761 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09671759 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09122983 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.191761104 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179914283 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.221428451 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.177881193 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.203417075 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074500183 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053208333 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098328372 seconds)
    (30/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074710769 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11698944 seconds)
    (32/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.23879356 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128903947 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091909794 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116031739 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073934044 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071187868 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101892191 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.180656925 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119701103 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130448084 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073415476 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110834783 seconds)
    (44/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061711265 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073923419 seconds)
    (46/309) benchmarking ("sort", Int8, false)...
    done (took 0.161868616 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.186552975 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131230786 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071357741 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.125435314 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122869934 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073053981 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077660828 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094509722 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.145616646 seconds)
    (56/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.170723146 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190867129 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082595868 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072548772 seconds)
    (60/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072493957 seconds)
    (61/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.177658727 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 0.126310076 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.221047379 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091130479 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077921197 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067809841 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19248719 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.196736039 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188492512 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.238673862 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.168588804 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077580036 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111548665 seconds)
    (74/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069887278 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075384692 seconds)
    (76/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0902574 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09498497 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100956207 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147640816 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088363738 seconds)
    (81/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065675155 seconds)
    (82/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.101777555 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078291058 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.169635764 seconds)
    (85/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069292936 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06049732 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.088245535 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198786046 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052327404 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072468497 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086889954 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074121157 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.116299066 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073543068 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146059347 seconds)
    (96/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109734031 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.178328207 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070966032 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.170617067 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052295065 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09691708 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072951808 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094982424 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.171078818 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088348949 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054844288 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072129993 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094783774 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073727517 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051966523 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087980161 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095357079 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158318907 seconds)
    (114/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099579891 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101576254 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148702472 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.164179077 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116292845 seconds)
    (119/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088804743 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077354487 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.166871377 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07065949 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090540742 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073033972 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067914099 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.158403203 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06604644 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094701941 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073649126 seconds)
    (130/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.119087476 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051721982 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053429999 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093365556 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073141435 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054422189 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15800888 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095360682 seconds)
    (138/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084488836 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07341621 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158810204 seconds)
    (141/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.168404084 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075286384 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209903832 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135074972 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098056913 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066174894 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087155181 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073650148 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051625994 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159354545 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.177722771 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.155975178 seconds)
    (153/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.13618693 seconds)
    (154/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088196815 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05204989 seconds)
    (156/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074859664 seconds)
    (157/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051243405 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169517209 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065782722 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096274283 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05246487 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190107753 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157808051 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113237825 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.130656352 seconds)
    (166/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05285697 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.0518908 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076497293 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089335179 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073150538 seconds)
    (171/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07305349 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067717101 seconds)
    (173/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.074124668 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098222727 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086681545 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05178202 seconds)
    (177/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053377376 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124955012 seconds)
    (179/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.146480865 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112148229 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073380939 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074541133 seconds)
    (183/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092004449 seconds)
    (184/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.115201511 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075616391 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073066664 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.082198449 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066360419 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06595712 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.125402793 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11954537 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.137165092 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15721769 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070043182 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094213928 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065228598 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051579867 seconds)
    (198/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074827165 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05118825 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061516742 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064604125 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.158531688 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088246365 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067852403 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08199345 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.302828829 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052428653 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138115835 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107675313 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088684301 seconds)
    (211/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.168064348 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098133698 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074192763 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108039018 seconds)
    (215/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051976915 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077713714 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.073325714 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088466483 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072672893 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.073892473 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11185663 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095851917 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069025681 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09296736 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078996173 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091759568 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113261308 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065810409 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08807924 seconds)
    (230/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105342496 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154404551 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090302179 seconds)
    (233/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074908824 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065466762 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160575423 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079276181 seconds)
    (237/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05176562 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.073501887 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051424397 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068453921 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167728927 seconds)
    (242/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067950733 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086783172 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141017248 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191525393 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074279974 seconds)
    (247/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080381266 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098981273 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19468424 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089246696 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05181275 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071791062 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08968149 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052576965 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053712382 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093885339 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066222355 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157084255 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072140359 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06739116 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087646134 seconds)
    (262/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065944627 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072277811 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072886756 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051862422 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051078481 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110693624 seconds)
    (268/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061661279 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07360808 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087061893 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066168398 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053722041 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114243439 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066518579 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09482426 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14611993 seconds)
    (277/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093230995 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11883002 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05162611 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093785774 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065837543 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087526455 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051178558 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074043854 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088822621 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051394954 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064525206 seconds)
    (288/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.074438782 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06461233 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067041357 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198002545 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072897603 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110231993 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051417577 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073798019 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078874866 seconds)
    (297/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.0533221 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093200643 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067532919 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065921361 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089452871 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067712962 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093106188 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 0.127545946 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051553148 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075507957 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052265613 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051537871 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105280408 seconds)
  done (took 32.915020454 seconds)
done (took 33.824146449 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081383096 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113321177 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074549365 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114829277 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081219241 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100171099 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073359222 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.100384346 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080481678 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082010046 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100601252 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054702402 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096681887 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075803652 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096591302 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091396193 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100462217 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072611199 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074086782 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086634773 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074521927 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086748187 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.0669165 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055874708 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099743115 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073030698 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072417584 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097068872 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066065313 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087125615 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068931974 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073150497 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086839275 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079282073 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093145359 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074027002 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076424187 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098538555 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068028968 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086986716 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073660536 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066254134 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094467239 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074055495 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071216442 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093077555 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074356061 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.1011052 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09156995 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090518871 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073927548 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098446269 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076904601 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072254252 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091985462 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074879413 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093013125 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091378466 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096187364 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068499488 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073840985 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096389674 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070791275 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095793335 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073919937 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076135199 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097924606 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071407183 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097730238 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070711648 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065567155 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09518064 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069303651 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065814506 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098122353 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076309327 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08606436 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071115197 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07260906 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093485268 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065370567 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089553203 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067201436 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072035106 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088841108 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055501797 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069831601 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093773089 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065002482 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074739764 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09383349 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072513138 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088475244 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077132297 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065456667 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092729833 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066369071 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066040482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089377006 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069732028 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065164371 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090387828 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075027304 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088927646 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071617719 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080215289 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087956352 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072478472 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087335536 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065452284 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081655358 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09771937 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066936839 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089611534 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065007835 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072816732 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086935521 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066151407 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065868948 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088154758 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071964864 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065894673 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090170857 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074014417 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100922346 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066281106 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069415432 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08968721 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066448313 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071663536 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088229569 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066628492 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089410346 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062951073 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06781444 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087770613 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072856623 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068517315 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096383457 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068697651 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096495491 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070853522 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071693124 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093420444 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065255484 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059207883 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089773177 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067799779 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06814854 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087992857 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067633763 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065732473 seconds)
done (took 13.113278781 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066105807 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167912307 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124775779 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096120338 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109587458 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066846169 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099238355 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103054899 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090498317 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12669144 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087460552 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107440113 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114157464 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087390216 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066529393 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070433109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089615725 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088534201 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123746176 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108564907 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117619554 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087690013 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120037917 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09063537 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111042664 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104094489 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088850585 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070427193 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068554072 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116045784 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108388931 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069836211 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066893603 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122099965 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116343036 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086206226 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088265883 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084136537 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0880165 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066483432 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114326091 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100036782 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104691627 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082417263 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094699389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069156318 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089238012 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086085196 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112760109 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080347933 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109909997 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132388605 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06846146 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103796414 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064969756 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110093252 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104084257 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068149548 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066623011 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090470069 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066122056 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069980978 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110839462 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114940534 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069936748 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104296071 seconds)
  done (took 7.211707232 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084383192 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115878288 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084027583 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108465029 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066049434 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066581091 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088959595 seconds)
  done (took 1.583127293 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067629208 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088713811 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112044665 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08933879 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107921896 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086853119 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098432697 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067367255 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107109567 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067999592 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088015469 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127242957 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067655237 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096705345 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091363865 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089843105 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091051641 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090153408 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070419868 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113834887 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070332869 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108960914 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06927663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067090398 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104034843 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068073956 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138083939 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07191938 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091014847 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070312542 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065714632 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139268126 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104028703 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078042475 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066690334 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104753562 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082978007 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087597697 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083331673 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09499723 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082062355 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067468427 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091092521 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065899646 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071764952 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100810735 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068253873 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090222203 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07010023 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086903243 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090433059 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081870966 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08956492 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071223116 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068407672 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09590489 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077478486 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09023577 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087085159 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069064799 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107780808 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083227195 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10461909 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083870354 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092308611 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08204693 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104274068 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070368738 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069034675 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094181619 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084243049 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087993059 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069207073 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077613618 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091354667 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090113712 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112739543 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06923427 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099970337 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067523302 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068052323 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090792949 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090244355 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093495064 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067251502 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07146224 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093396114 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065599236 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066283526 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093678086 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065753741 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091267061 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070499369 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0678589 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091979913 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083842195 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067601331 seconds)
  done (took 9.256464101 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068749966 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067923559 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091979312 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068385945 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068674462 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090739964 seconds)
  done (took 1.438453719 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097688917 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092516059 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082194309 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096504669 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106054057 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105101741 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082412188 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105452735 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085103888 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102307011 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08175142 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105163425 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087863707 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096374951 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081773495 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095043976 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083014197 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099962778 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079257779 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09721151 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088164649 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096116606 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073824426 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106091664 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070978664 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073041436 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100207074 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07964864 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102153147 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083023919 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096616985 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071285822 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095698294 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08297578 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104847858 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072726086 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095585757 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072066355 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100211103 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071043471 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105861756 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073610355 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078145893 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095179866 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105806295 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072564376 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072454708 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100691781 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081444811 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094975827 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07187928 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095375409 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070199435 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094556677 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072783147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105744136 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072376349 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105295519 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07326682 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072371159 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092973821 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070673743 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105126354 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070680611 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103926639 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071511643 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094874049 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073608199 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096056044 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07253016 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071485021 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09312562 seconds)
  done (took 7.309719291 seconds)
done (took 27.768108986 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.64412323 seconds)
  done (took 1.620160147 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.764793994 seconds)
  done (took 1.743980049 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.620602132 seconds)
  done (took 15.604944347 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.610961788 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.75726857 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.791339326 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152963567 seconds)
  done (took 3.293060291 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.883467001 seconds)
  done (took 1.891235041 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233584693 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223092662 seconds)
  done (took 1.444670135 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.728609724 seconds)
  done (took 1.725529911 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.282704807 seconds)
  done (took 2.271131217 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319746289 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18069183 seconds)
  done (took 1.495649567 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.518574462 seconds)
  done (took 1.513987195 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.916259843 seconds)
  done (took 7.916087602 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229293951 seconds)
  done (took 1.237250703 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.26743079 seconds)
  done (took 1.26391185 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.101129324 seconds)
  done (took 4.096534972 seconds)
done (took 48.104343396 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078391801 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08207362 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104278869 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07894549 seconds)
  done (took 1.335934977 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07734434 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073782364 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100240812 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072588447 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100424976 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073095317 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098537316 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076777181 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07205295 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097799873 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073408159 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095628584 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075782608 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09829164 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071013831 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075993131 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099439982 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073229222 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.09905227 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073783162 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071083837 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097319977 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076531816 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094903471 seconds)
  done (took 3.025127756 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077648668 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07341356 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098085341 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072704352 seconds)
  done (took 1.325293406 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077309897 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115617693 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089013002 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077276901 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09266941 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110285131 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06976236 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068891286 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094403844 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077412469 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09111851 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099145577 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110762955 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076813018 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102544842 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066464894 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069344865 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10962283 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077840352 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100492546 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071111014 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079856815 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091269921 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091211467 seconds)
  done (took 3.143846741 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07732332 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126952002 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078451331 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11423251 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092253796 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088975598 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075502617 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.115180569 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124942734 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089602022 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070558885 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066182145 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096866465 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065949115 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076415733 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13217551 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135301516 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069153312 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12166422 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066085755 seconds)
  done (took 2.895535351 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074878126 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069935195 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08859315 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069646142 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076803155 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0962987 seconds)
  done (took 1.485201539 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067817891 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067946762 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090437048 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066506642 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071844665 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090214413 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066404608 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067109117 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090493421 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067662363 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066786999 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088949834 seconds)
  done (took 1.912309761 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382982599 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091898086 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069731583 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087733983 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071700941 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089919803 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08080609 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068555764 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114719057 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067851248 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090516875 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069741754 seconds)
  done (took 2.295073231 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260696983 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077403065 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323405575 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16806029 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140310384 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155016805 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105161247 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140287375 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197860075 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138188602 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200745486 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223814017 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133878211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168731489 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115209545 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13250891 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185741815 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220721201 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130242375 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199315902 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20465942 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155918379 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179695512 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127274154 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134688985 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150508257 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072027382 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105092796 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231857035 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161738851 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200691366 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138537711 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096457142 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229787585 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224962447 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194808121 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162683995 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084822233 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158004912 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163365538 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255181786 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11401547 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195262832 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133362415 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105195867 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172588771 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146506124 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146952306 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136909113 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114280047 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17437118 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239521466 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165407275 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112126284 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136618067 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141468397 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143023174 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103503351 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268862962 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195450699 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159098316 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094978571 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124293379 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185189183 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1588649 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140411419 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152498844 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11844676 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165835511 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209882114 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145326991 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172102034 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180383689 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089183453 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145911731 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193497291 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156034899 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227452029 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154083226 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073217148 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151595761 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12915901 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106337733 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143242869 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100105131 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2070075 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123441325 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138337297 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139263245 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135214698 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134991301 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195409139 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20200518 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129544625 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06660401 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130704347 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149054566 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175789428 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112735534 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134955473 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14707878 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103099666 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16610457 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075580758 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152431429 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103857839 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152024292 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162270669 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100689974 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155090352 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102290198 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127946035 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162725168 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220333552 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115370831 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08399196 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225483034 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155653246 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132021358 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176357184 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213579803 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102503934 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129881097 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205418442 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242458937 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090051571 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222436431 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134258414 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108643366 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089023137 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154810935 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139498258 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14860071 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108455961 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153556599 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22721709 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075279094 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121006761 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167257792 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107762633 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082216574 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139920197 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128070759 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120949895 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102078829 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134075448 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195648205 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154857286 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134203714 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153661406 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125715914 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199815009 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115944665 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130701683 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13006983 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070722549 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165221534 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217285282 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079395332 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226131881 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155316636 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131991566 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147775688 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108400724 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170216544 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078765515 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096875683 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174327499 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138535059 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136293413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184485638 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130637891 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154929832 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150381926 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188460814 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159769861 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161855621 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133687831 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088248615 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139357642 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178887362 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074051922 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120079585 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083881998 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131355559 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121932571 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084476028 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197069963 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156244081 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126919821 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1394754 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098097317 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204716354 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077973996 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15883232 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171683135 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095998285 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21015718 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185982429 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189888866 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100951064 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201940162 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071521541 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099501149 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092143942 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180839671 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085188425 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109471568 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145258757 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180387951 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155717698 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191690331 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11331251 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149346142 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212090266 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071364014 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143248378 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178279785 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178287412 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131910605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111941551 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100380194 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199322376 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136799768 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246598727 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143769472 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152325449 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180459167 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129563386 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105209771 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106282945 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193176044 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134081066 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182033654 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127047582 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114548798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137401962 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082568534 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130673551 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154843733 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147439683 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187647335 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143810355 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162432938 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10339841 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145591573 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152496757 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150487295 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064610208 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148355441 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220638026 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121474773 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146427081 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185685803 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106293021 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152899439 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238689084 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175515971 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110939406 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137583887 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154236085 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158061279 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146718017 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169620024 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138163011 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164140878 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138335372 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111517796 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088291015 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125444829 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134604198 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096599939 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.16492834 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145143221 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09569381 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186153658 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140279117 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112355148 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146491321 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12445921 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091643808 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123222807 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233761253 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150404396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23559547 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126577456 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179630036 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227214913 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074889291 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105402781 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106516986 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169813359 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084690955 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18821383 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099225442 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132634082 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154862687 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172299435 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122216782 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093658105 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11090822 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189140896 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113884419 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124833389 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13182272 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221252876 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10420915 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106322273 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15249651 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13148438 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104279703 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233172985 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087590612 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098677651 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101311557 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080700153 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181677942 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187238203 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108626657 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.131984869 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141826861 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174082527 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158829864 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129792309 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099497907 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141586788 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205480852 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157284405 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090711186 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140120079 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183956443 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188442443 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133693717 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122640591 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23094725 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186505804 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222137308 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115716406 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144108115 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117309004 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136884833 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196986864 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084137855 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225227731 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10934778 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16639511 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131345624 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120535607 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15861986 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125797711 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089759021 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205452991 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148132825 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124886713 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081203163 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146081687 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15001517 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133185476 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100351022 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169480764 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072938078 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191447521 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201793243 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108127926 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132676079 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096943792 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109014159 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135358151 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131168035 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112519626 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.118718208 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22848858 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117334921 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181498937 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196567558 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141556018 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167352248 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126574184 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663627476 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078955252 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211575825 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146342308 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23785982 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125044925 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147972528 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138041956 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151374689 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176180061 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131454384 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203926025 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161187323 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148709557 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105177803 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13033551 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13894091 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092074946 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134584313 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142410073 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143971924 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127860048 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148360429 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153937195 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108570498 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096182059 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216031428 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14566495 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198146855 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17231184 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085574378 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146976595 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198054584 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080297825 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176369302 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188517046 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135728702 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125387251 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106455984 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107406054 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231455322 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099260166 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193442982 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15231507 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1369425 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14079925 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.172935882 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162429582 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135761173 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154742247 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12229731 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140228456 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143987665 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085654566 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104850754 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133475736 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140590967 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100712114 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128582445 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144387582 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183543323 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097197835 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097803169 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130056498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201286213 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210858762 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115629293 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109798255 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146670916 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140418808 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144657864 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154105486 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082803894 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110144995 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109061022 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113428226 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137221153 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142661074 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131811695 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139173804 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200282371 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111277956 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252917796 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09652139 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133945257 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069528122 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105949276 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122901855 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098818169 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13451976 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127484094 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231367304 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122515724 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092156654 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119831981 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073700288 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110268836 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158247993 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138209053 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150587588 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124044053 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063939513 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136720122 seconds)
  done (took 71.156000807 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131709876 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103516309 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117092303 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171351817 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145483815 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237037294 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179676935 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222673911 seconds)
  done (took 2.392700246 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069333278 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.115903544 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102360223 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115274651 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089333386 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068534476 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293456217 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109455059 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066642166 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11404227 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118473272 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091025249 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468497175 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064763793 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09247521 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084346662 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06767501 seconds)
  done (took 3.20503872 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427907175 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.636791818 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452917985 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073048562 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.887841773 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105770941 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.368812948 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161196496 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090686896 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428690492 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.722164833 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151575407 seconds)
  done (took 17.59603791 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074989284 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069204736 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108578836 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082637388 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098922184 seconds)
  done (took 1.527588152 seconds)
done (took 114.29146295 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080413072 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341750308 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053168993 seconds)
  done (took 1.514160957 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083400066 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084391846 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109521418 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082401556 seconds)
  done (took 1.459827091 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076180234 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076146063 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110065023 seconds)
  done (took 1.36048034 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277115377 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163845956 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087098702 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08281226 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077266989 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104199583 seconds)
  done (took 1.357383691 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072548974 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075024139 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09819384 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076497827 seconds)
  done (took 1.407156096 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075667075 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05199626 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055106441 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081259305 seconds)
  done (took 1.358925462 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088907189 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105224935 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080746219 seconds)
  done (took 1.364217175 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107526598 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111212681 seconds)
  done (took 1.31653221 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081198853 seconds)
  done (took 1.173919012 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095191818 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.137972617 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153702474 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136784832 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165485285 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135890392 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112434972 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08770348 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103263882 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.114629278 seconds)
  done (took 2.343074572 seconds)
done (took 16.350467075 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078106207 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.48814428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360140665 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115986669 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669622379 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355726164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043113697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118746989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120476577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093422797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083458962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675467572 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969510884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.444366052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958296339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324132497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675851963 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067857255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092858404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067892579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.000495442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093472047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067591745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068380587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67606909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370518206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093882416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323711904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068179974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095284758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354306148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094167892 seconds)
  done (took 16.188627139 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071015151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14389136 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073118966 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083451511 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096434142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069617364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097759506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069359278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152722581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067826907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110738191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067655035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097742748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069256314 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086943152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093936126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068763921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068578391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093911788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068647883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112507855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067698584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068454779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093774928 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067923399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105868984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068253604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067824007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093320106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070435667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097202318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068035006 seconds)
  done (took 3.833339454 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114276026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151749706 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073307554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128031133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113509963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096563916 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169075056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093649583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154430982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068105454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110833256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067845177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127457622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0689282 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113348835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068316629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068828159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094271765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067623844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094368471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086863854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093721791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068615015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068745292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094605113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081193686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093968089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068489921 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068379551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096286688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07149807 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093941424 seconds)
  done (took 4.140898858 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072592473 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074722869 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108445537 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083450497 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095407961 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071946166 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072848647 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096388184 seconds)
  done (took 1.779835407 seconds)
done (took 27.031621231 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079365371 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069831147 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098848975 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08108241 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098929232 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079443552 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067250458 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10080299 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076508864 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073209948 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101960342 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067624195 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097327165 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067492708 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074675742 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094012058 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079301172 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098380348 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079667525 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079439248 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096575982 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076461879 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100411236 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079799362 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10586337 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079819846 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082657792 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099631498 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069438201 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096705188 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076686896 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083770431 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096136652 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079920262 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094985928 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068479685 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067643347 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094080456 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079319666 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100421963 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070980414 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100560998 seconds)
  done (took 4.663683472 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088075811 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090937187 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111869401 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065030835 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096983317 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06500778 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115174545 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063214029 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058906434 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114348513 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056087961 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059278886 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089710218 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05395467 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059441487 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056243203 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087952823 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055985208 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059861074 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085401741 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058295073 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054381746 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08669067 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063531484 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056398796 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087649519 seconds)
  done (took 3.050269743 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075848355 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083470622 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113966219 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126790898 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132793811 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077133855 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105423966 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08802017 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112274725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067243711 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071452309 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121926271 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087776361 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10132126 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067917555 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113782209 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081863699 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06902546 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100836881 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090085193 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111146047 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07830279 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118829404 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080773014 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066865873 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09663917 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071719016 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108253238 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073026953 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077007971 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098681744 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071860175 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096648187 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079103854 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071883104 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096379157 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090267809 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103900246 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077795298 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068468574 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097916625 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06906712 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114812419 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111517618 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093726455 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07476242 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074888566 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104074943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067328925 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112344214 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076624354 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067280738 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097317838 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067370901 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094179324 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081414121 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070132218 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096102214 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076649864 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097689291 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08008282 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07163269 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109846482 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067476309 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102081802 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067109796 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068278467 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09406364 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091474392 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06856124 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135449472 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068729951 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095891598 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077149894 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102845641 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07404931 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068169185 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109841703 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077719993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098201114 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076358675 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070982625 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097745368 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087698257 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097199153 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069174461 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068739864 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100746679 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070467028 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095345671 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080816961 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067476406 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.09750611 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084194513 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093694352 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069653313 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074243367 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099244452 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067232641 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106074046 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073408683 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06815007 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103637295 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067908846 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09743753 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077911891 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072028666 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093363962 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073001331 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1002932 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068826495 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06914634 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096627635 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069396394 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103944128 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073947168 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072502544 seconds)
  done (took 11.263024408 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194287228 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184708892 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070861053 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178029981 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076669195 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107287249 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179526579 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.105890781 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095578307 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068347592 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069114151 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129465927 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123804251 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106305914 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105712371 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067790922 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11295294 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105200954 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180155182 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174860896 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115345749 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076770756 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070330457 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096581257 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070685015 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104923129 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084676057 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102511098 seconds)
  done (took 4.285334177 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08210339 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128625977 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073141826 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089134435 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119154959 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068378994 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10060236 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070098075 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10776886 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080312809 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094700309 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073616373 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074404785 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105554499 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068855277 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105440246 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078058293 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069372598 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098161983 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073379381 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104789844 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081096786 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099380421 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068049971 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07488266 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094148887 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0645334 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.111953658 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06770133 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116573556 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065507912 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07421812 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108747111 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068284073 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094973046 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07117319 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071019782 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098385236 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069653847 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065534314 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093133247 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058067301 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066638138 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107295498 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074330811 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086659397 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073820078 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073137046 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099705425 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065996104 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097434568 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0703994 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071833333 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103807442 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072949754 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073325243 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09940581 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065817349 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102070801 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071114903 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063832528 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093633467 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072879045 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066634289 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103216975 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072010612 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093765098 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071179653 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07339239 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101600866 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071461903 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070867116 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093320738 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07046708 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099594164 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072488746 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072084232 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094114773 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068371001 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068508718 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082862544 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068477249 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054082623 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098170181 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066423379 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066363333 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097925819 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07396757 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108385638 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069075228 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100941022 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069306411 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067063477 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097723199 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064361795 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070260645 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111123137 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111189767 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068260386 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066003947 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110275287 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072932669 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066761204 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084479985 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075315244 seconds)
  done (took 9.799516466 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096775242 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092130168 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097262171 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083479955 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123198348 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093616108 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102806015 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074802292 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069837166 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111961518 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068053402 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104021173 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06843772 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076673143 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123510296 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075719086 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097206434 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076495751 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071805517 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135003949 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08231746 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108830603 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081105453 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095970154 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072399549 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08007235 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.122874138 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08009099 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105737991 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084497012 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079496349 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122964261 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085979512 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09905955 seconds)
  done (took 4.279430253 seconds)
done (took 38.446644089 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.188309608 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.392499243 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.182827095 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.051848549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.219644949 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.202368097 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193869705 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.184211064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.383683528 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.185001811 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.411017271 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827579083 seconds)
done (took 58.547528749 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.280494461 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.321249549 seconds)
    (2/2) benchmarking "String"...
    done (took 1.555921885 seconds)
  done (took 3.999366118 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.556217643 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.058014776 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.443263638 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.185407922 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199405182 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489506266 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.771845927 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.999521178 seconds)
  done (took 27.268483705 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.180791367 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.542859752 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.476312894 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.480189343 seconds)
  done (took 17.80431392 seconds)
done (took 59.034980643 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.169191233 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.192746624 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.185494647 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178939161 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290789117 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.203624474 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.43952183 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.369887419 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185317116 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.190148916 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.186972826 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194207722 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.19885588 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.43326593 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.180180801 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.182562767 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.229122177 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.634827794 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.555033634 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.187919238 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.191066285 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.242795572 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.198828562 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.194625461 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.21144931 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191209916 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18372462 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.198419583 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.362783597 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.1898542 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.273733364 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.607785409 seconds)
  done (took 190.553134792 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.185459708 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.289814878 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.351340861 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.223484516 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.798047351 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.378313951 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.316483233 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.846181444 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.198110423 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.193382242 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.4919593 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.183509601 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.554775435 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.218856694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.203825102 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.291991873 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.47251728 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.532181469 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.213685622 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.457455631 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.183249333 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.509019946 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.451591409 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.432153455 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.221412178 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.208677893 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.19298028 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.215061408 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377944976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.43221843 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.184957449 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.234394868 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.742262245 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050177801 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.199820568 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.188906519 seconds)
  done (took 150.350204539 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.446423478 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.187176564 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.182518613 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188827533 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217168061 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183644216 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.706038138 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.706121998 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.682155877 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.600766764 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.243217562 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.369399713 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.185478718 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278485248 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.196954323 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.186961458 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204091379 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.208879199 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188859511 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184290741 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.709005644 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.198330994 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184332791 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189064663 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.185966614 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.215936262 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.580938625 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.307843511 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191515912 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215677018 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.501277328 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.226439708 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187134703 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.467750002 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.178414758 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29319186 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190098038 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220195208 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185043538 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.456379205 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184419824 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.187493275 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.191099664 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.187876266 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.736038239 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190362234 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.187868964 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.709496424 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.053039595 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188966133 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.189021071 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188323575 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.430667068 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.646652316 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.185420632 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.186832427 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.187843442 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.191043142 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189453762 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218933387 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.43889855 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.28271886 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189190015 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19582687 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216044657 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.192037046 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.187045039 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.252275708 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191503347 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.57843977 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.246090521 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.403589212 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.713255044 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189611359 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279423975 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302688387 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.18704179 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.1892788 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187021922 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.186934405 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.294888599 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191627919 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.575021468 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192020651 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.190432839 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249517681 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.280089567 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188386177 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495673297 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.189398704 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.188404961 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868689002 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280996829 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.189156836 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.190755368 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18731725 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.579522136 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.716671478 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.346045551 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.19185371 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.57308769 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.193672575 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.584678526 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.694003763 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.753439443 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.190015302 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300358331 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196147099 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193682108 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190523715 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21886988 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.188175846 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251267148 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191082222 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588153536 seconds)
  done (took 342.850348089 seconds)
done (took 686.321699333 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.874770758 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859731476 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.971922104 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.860168297 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.83957132 seconds)
  done (took 10.543764425 seconds)
done (took 11.671752599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.372172432 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.371267651 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245286365 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.369510349 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220488559 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.389501065 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354213629 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215850968 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.28960693 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.265132397 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.287531794 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240596767 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214528259 seconds)
  done (took 17.973876483 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.492868847 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490489329 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258036158 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49696373 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232292064 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499705714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392904423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394684931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381260593 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210311013 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210790175 seconds)
  done (took 16.194996642 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516345408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.489605609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264131545 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499737613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231295472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507182816 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.386014515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395714312 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385341201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21096386 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209731248 seconds)
  done (took 16.232217015 seconds)
done (took 51.533898526 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.207812633 seconds)
  done (took 2.344092886 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.235071531 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.392616981 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.217798327 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209014421 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.205160122 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206309633 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.203113697 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.203506732 seconds)
  done (took 11.008241917 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20497329 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202719718 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.199983336 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.203130148 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.203702856 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.205820556 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201567693 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206585041 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.199371589 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204239331 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.202142235 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.200314232 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.203753617 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.205938784 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.197658532 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.206431985 seconds)
  done (took 20.383336609 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204157128 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200271937 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201127547 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.200172347 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.203804975 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201576051 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.19881623 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202302441 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202569428 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205216235 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20180992 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.197403423 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.205533154 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.198977484 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203103585 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.202757303 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203361158 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.204973298 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.206169497 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20157631 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.206628285 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.204677249 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203031889 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.201286832 seconds)
  done (took 30.000043279 seconds)
done (took 64.875023832 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.270787343 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.825341594 seconds)
  done (took 9.228014496 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.205476462 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206834277 seconds)
  done (took 3.55280271 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.203273267 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205425422 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.208184689 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209463145 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.207140703 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.207265413 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.203349971 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209617045 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.20521302 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208484463 seconds)
  done (took 13.204084905 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.207882378 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205323228 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207503013 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206590837 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20860049 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205873742 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.20546875 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.20656073 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.207957195 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.202434207 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.208615271 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205893904 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.209008668 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.20775476 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208561865 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.207289005 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.207245925 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20659066 seconds)
  done (took 22.86955635 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208088327 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207269512 seconds)
  done (took 3.558670748 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.207271721 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204065948 seconds)
    (3/7) benchmarking "month"...
    done (took 1.206036986 seconds)
    (4/7) benchmarking "year"...
    done (took 1.206704933 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.206240245 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.207098113 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206447886 seconds)
  done (took 9.588018224 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209268655 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.385831601 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.463316927 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.812232599 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210150406 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.213230703 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.030555367 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210958629 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215000071 seconds)
  done (took 13.894653407 seconds)
done (took 77.031086948 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.204284975 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.199898234 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.033335128 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225711126 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.218536014 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.543795111 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.258079772 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.325459968 seconds)
done (took 37.155162427 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.202218167 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.982962533 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.025911385 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.206844033 seconds)
  done (took 11.361078178 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.198089877 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.106279977 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.194340859 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.20874886 seconds)
  done (took 17.854782381 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.810150826 seconds)
    (2/2) benchmarking "read"...
    done (took 1.534387633 seconds)
  done (took 4.490785582 seconds)
done (took 41.053213285 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210390173 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211839549 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207764092 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.207973134 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.208617025 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210485573 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.208628823 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207195765 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208284034 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.205780772 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.212067293 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.208380813 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.211871687 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20829256 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206587855 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205320834 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209602473 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209895164 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203504182 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206400823 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205153176 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208625682 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.20689178 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20940096 seconds)
  done (took 30.143260835 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210293203 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211272102 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21318767 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213024067 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207235745 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211742621 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211185678 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210700294 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.212076339 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213121056 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207769056 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.2109013 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212461513 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209140737 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21232465 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.210736035 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213853505 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207808864 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214203284 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211248023 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214371584 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207981275 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210009561 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212154479 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210161224 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211243165 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212747649 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.209268513 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210482262 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212002609 seconds)
  done (took 37.480581916 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215477821 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221985246 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214286286 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211775309 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213071556 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212490541 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214628985 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.211594855 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.215629337 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213821787 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21510771 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214313483 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212424132 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214044668 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214798715 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215338235 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.215732415 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.211969689 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212060782 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214411092 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.211875472 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.211598515 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214150971 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213953258 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213409086 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212238992 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214729143 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213436376 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214270861 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214684568 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213897943 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214075798 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212534338 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213323772 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213284859 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.21354603 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.219600876 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221328739 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212577824 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.210639287 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214906454 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.2138148 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21211451 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21280049 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.214031496 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.21293854 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213441999 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213313841 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.205813856 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.206113097 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.206471032 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.204948156 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.20742042 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.206062443 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.206264133 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.207677461 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.207045134 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.207632684 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207750894 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.208478176 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.20599009 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.207266602 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.207297667 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.206948955 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.208866353 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.204605708 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.204877194 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.207501847 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.205681992 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.207208684 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.21004499 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.205511099 seconds)
  done (took 88.382774516 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.205503744 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205701761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.209490992 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20527925 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205596417 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.20603523 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203871835 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206198491 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211647043 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.208365905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205516608 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205281065 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205764962 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.207152976 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206162501 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.20494823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210271657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203945332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.206103847 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20708271 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207578161 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.203579482 seconds)
  done (took 27.679886781 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207551539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205531472 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.205638241 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211219112 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204826383 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.205859016 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.207945755 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206579181 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207411533 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205815537 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206345424 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207204923 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207012095 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204283223 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205479816 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.203621522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208468125 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207008837 seconds)
  done (took 22.857115768 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.206256984 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.208260895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.207197627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20911169 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.205727588 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.207458488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206615658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208096239 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.207207785 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.205068844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.207466754 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208725141 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.206927072 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205892572 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210126554 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205702512 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.211161928 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204615206 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210604258 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207986556 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208974555 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208105599 seconds)
  done (took 27.710416043 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209971755 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208186028 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.20677616 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205168704 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.208143806 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.208730747 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.207955681 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.211222945 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.210834051 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.210168034 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208988931 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209928535 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.207757122 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211650572 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.207069181 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205807158 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209115482 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.210701955 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208874953 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206547937 seconds)
  done (took 25.313918445 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211973181 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213214035 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.213075607 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214363446 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212886495 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.213744275 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214610296 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.212671202 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215690992 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.212881247 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216792121 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.214873258 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216118406 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216691538 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213230097 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214577751 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217035683 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213998696 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213416419 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214419893 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.219278422 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217266119 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21319865 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214216536 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.213521885 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214578233 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21363918 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217640642 seconds)
  done (took 35.151080959 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213304377 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21069162 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.208506165 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.208132508 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.208045864 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.208478962 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.209184103 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.213411379 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211024364 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210185096 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.209944324 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.211063257 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214176798 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.210001431 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210657872 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.211454334 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212421743 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.213621419 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211370318 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208574939 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.212674634 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216689788 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.212932076 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210124622 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208885362 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.215145934 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211732294 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210041611 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212089067 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21082724 seconds)
  done (took 37.478941496 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.230715189 seconds)
    (2/2) benchmarking "in"...
    done (took 1.231102521 seconds)
  done (took 3.604758904 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.209711814 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211855181 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.21286095 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.210914915 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208946105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215213317 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.214379964 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209286361 seconds)
  done (took 10.836685857 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.211688176 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.212578094 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.212821616 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.212142467 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.214834822 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.212138809 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22018469 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.228882256 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.218067169 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.215869727 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.223728984 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.225717951 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.222065547 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.215004408 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.214720775 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.221557498 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.21304565 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.217767892 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.215855859 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.216550735 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216219136 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214576702 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214942633 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.211008821 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.217024119 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.225911697 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.224507954 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.212539318 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.214406213 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.219626518 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.212740291 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.209547606 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.216568683 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.216601709 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.211573614 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.214568036 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22302259 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227773052 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220494842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216794482 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219556326 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.216647969 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219634561 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.218958205 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217707775 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.219645404 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.217937179 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.215024569 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.214287442 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.217999524 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.224327972 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216811545 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.216712478 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224702332 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.217639658 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225519144 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235493559 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.218299033 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.226308063 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.231449907 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.233778921 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.226029042 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220265213 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.221931479 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228489871 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.241358934 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225298069 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.229509885 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.217638454 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.218455457 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.229415003 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233990987 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.227454973 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.221337269 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221883309 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.217424656 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219638017 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220977622 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230362909 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.235086561 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220173751 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220516716 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228621895 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242615277 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.218637084 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.221594423 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.222266602 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.222211572 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.221502586 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23248166 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.237097168 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.219115212 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.220473959 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.21980072 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.220330311 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.220535537 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.220046444 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218155431 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.215875071 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.220701296 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219884288 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225368728 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.232936199 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222188842 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.218983884 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231495473 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.222046827 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219887937 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.229972936 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.221524323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222980078 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.22217641 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.227833548 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.216645158 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221341752 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.227638818 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223884643 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.222937563 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.22451133 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.223304856 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232866604 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.245225311 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.221798836 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.221901504 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.225954439 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.235822112 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224469379 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.225965074 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.217755721 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.220321851 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.220733205 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.224135991 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.222572833 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.223877297 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224696975 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223642739 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.219901941 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.221094356 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.22414917 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.222341328 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.225106931 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.223276404 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.224177329 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.225831223 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225063878 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.222248098 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.229917039 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.218595674 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.22388688 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.224338452 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.219793579 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225103594 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.225794944 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.226865013 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.224854141 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22569296 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.222286045 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.225841919 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224969703 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.220561527 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223885994 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.223497759 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228451419 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.226204785 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230427378 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.221946753 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.222324063 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.223806446 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.224570508 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224509185 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.224337354 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.22314712 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225711597 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.234208219 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.22418429 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.226607016 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.228981385 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224036367 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225740606 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224240891 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.227568874 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.232630416 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.229097723 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.233542185 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.228547594 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227649989 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.227007573 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.226899787 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.225238654 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227525856 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.228040121 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.235495612 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240154682 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235627193 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.2275589 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.230815948 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224289038 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.232145642 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.231205343 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.226818503 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.227042293 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228964012 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225337092 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226832375 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.228411559 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.228836658 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.226736934 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.227344761 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226699629 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22800158 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226545017 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226370697 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22848938 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.224291273 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226878679 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228697432 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.226520625 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.224834713 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.226195386 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.225754749 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.228412648 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.229146225 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.238255757 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.223625319 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228390413 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231174003 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.228132811 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.225914903 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.22721082 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230799039 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.224786374 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232540775 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243838136 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.22648495 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235549952 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.240581299 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.227586968 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231284092 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.227646568 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.226508637 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230141108 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234880609 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.227969227 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.231420418 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.228589248 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226758775 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229504029 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.237257979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.226300885 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227066051 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.229663962 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232200529 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.227485391 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230360611 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.229963173 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.228172042 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232238476 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229941244 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229498875 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231076231 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.228644248 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.232011835 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.231506127 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232149209 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239751164 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236857536 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.230560385 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.233938026 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.231572314 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.234239652 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.229661185 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.232693941 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229873592 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244353282 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.241885051 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236949441 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.232939843 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.231468643 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238033838 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.231371754 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.235109508 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228823567 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231359672 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.230456045 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.22871045 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.225266217 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232975832 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.230342133 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230646177 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231194706 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234276942 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.231941825 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.230234136 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.232638428 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.232351647 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.232906289 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.230732045 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.232167624 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.233372619 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23412155 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.23090747 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23122841 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240801012 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246328821 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.230623815 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229961062 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231351077 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.231912987 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.234163088 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.234787476 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.233491624 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238140813 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.233854319 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.242755489 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233310596 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244381088 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.235118544 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.235949837 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.242893092 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.231138278 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230865812 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.232249674 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.234675333 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242742333 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.250705479 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.234520259 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.238303685 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232273129 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.23604024 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231109399 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234964756 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233374249 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.235781392 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24409272 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.249184187 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235873013 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229708221 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.230604525 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.23672901 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232608053 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.231747803 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240137451 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.235922172 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.234827607 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23306739 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.235509748 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235064121 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233637338 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.236004611 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.231541907 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234725608 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242983524 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.247681691 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240441644 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234907214 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246270472 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236340624 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243216861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.25321199 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234707758 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.237182236 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.235426279 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.237656902 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.234841011 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.236240362 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.234423428 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.236195118 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.240517898 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.237383572 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.238759732 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23554247 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.23593707 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.232772377 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245100858 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261684392 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.232854975 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239370528 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.232499951 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.235986569 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.237860806 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.237758219 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.235420691 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.239286856 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244169502 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243394912 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.236116581 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.237156929 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235805094 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235813997 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236740773 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.237425767 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.238900804 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236002261 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.23809447 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.239274814 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244284914 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23846039 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237694942 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238842148 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.237261528 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.248579915 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.2403896 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.239029203 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240272995 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.23873704 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.238081151 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237389448 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.238478203 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239213478 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236382591 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.237387871 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243586601 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243434889 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.24069636 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.236296266 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.239375692 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.238879575 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.238798138 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240378982 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.240087623 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240783292 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.239779973 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.241021271 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.24026325 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.23689709 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.235596324 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.239383275 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239298762 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240834866 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.244346243 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238068124 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.235363295 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.23894639 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240641805 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.237577233 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.23957358 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.250691014 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24064614 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.248892731 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.247030663 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.243521417 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.238645432 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241069223 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.24743052 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.236950493 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.240208608 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.241873596 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.242806234 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.238889462 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.241331995 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242231832 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.249924919 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.240777654 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239335303 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250067108 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.255638607 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241148849 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241058809 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.241631633 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.237687117 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237667874 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240776211 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239198106 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248871833 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.255937405 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242791288 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243048765 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.238211752 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241510735 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246315889 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241267973 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.241336478 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238238564 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.240565522 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243006389 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241635114 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.238812055 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241068198 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.24059531 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.243366015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.246941783 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.237752224 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243334932 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.241424046 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.239786566 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240956175 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24227998 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239068299 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238937718 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241179846 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243167354 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.242521261 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244677998 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241652412 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.241603965 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243067262 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2441655 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244769962 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.249358343 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.248901321 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240613333 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241408708 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.24323294 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245941126 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244956941 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.245194459 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244075214 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.244102105 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.243601042 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244873084 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243250704 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.24536659 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261309049 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.258867001 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244807358 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.243191774 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246188236 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243016291 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241559796 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24344845 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245375341 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.244957071 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.255065222 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.242584492 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250068464 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25808544 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.243815129 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.245990227 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246281184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.252317639 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247167662 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245226375 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.24714004 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248141395 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.262341128 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245105592 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254255016 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274196375 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.260194256 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.243361119 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.246522674 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24073555 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.246047104 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.248206206 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.246925494 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.245320088 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244094854 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246863861 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246433989 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249815981 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.246064981 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.243293306 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245881517 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.244357661 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.248653221 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.24267341 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.247795468 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.24438182 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.247987831 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.245018032 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.247826273 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.243248182 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260828998 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.256761993 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246809333 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.24902266 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.244954641 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.250249142 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.248760564 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255376091 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.252324794 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.246295186 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.248366073 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248879749 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247465365 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.244302328 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.246099734 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.246021625 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244908399 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.244300966 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.260363464 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256485104 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.253793361 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.24785412 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248964096 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.245647551 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24826571 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248191669 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250230691 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.25067206 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.248579063 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251881379 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.247078811 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.245223527 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251131958 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255082643 seconds)
  done (took 736.588596943 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245488483 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245269115 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245611207 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245781432 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242549579 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245274676 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24619052 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24514562 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246348695 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24581079 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245417985 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245539118 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24460802 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246365956 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245712568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246370578 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245339695 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243392219 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24705245 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246254154 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246002992 seconds)
  done (took 27.338151851 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.247301383 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.246463915 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.24490776 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24547961 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247023271 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249783066 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246488484 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247877374 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248939872 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24661591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248884821 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249151563 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.243150273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.246876904 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246092867 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246341886 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.24909945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246721507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.246272657 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248029065 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249044334 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24732484 seconds)
  done (took 28.620611302 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.252045289 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.25125207 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.250172261 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.247213875 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.250008277 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.246166092 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251039313 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.249306702 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.249475338 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.252487012 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.246229615 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.250769724 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.256143667 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.253484846 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.252182069 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.249838197 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.394437473 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.252333256 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.253318166 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.251921176 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.245143481 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258836132 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.246879747 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.246269589 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.249953149 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.253526698 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.251871674 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.252356604 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253057337 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.24731556 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.254166627 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.250938315 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.251346799 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.253346656 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.248914082 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.252171095 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.25613264 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.251680433 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.247737558 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.252712601 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.262222048 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.271363568 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.254117772 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.258421226 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.254909884 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.25429198 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.252828473 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.262387952 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.250252781 seconds)
  done (took 62.689896978 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.252172804 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.249075641 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.248123878 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.252141302 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.252513842 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.252537486 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.250229237 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.253156071 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.249685828 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.250185798 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.252808747 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.250252369 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.250419454 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.253264894 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.253406745 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2510582 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.250649136 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250839028 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.251152713 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.249882481 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.251757804 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.253443883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.250808129 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.250646395 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.254658413 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250573429 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.250811388 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.253664768 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.251455407 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.250795872 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.253934965 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.254327284 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.25413759 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.251127525 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.251407553 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.251745946 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.254234086 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.249094871 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.254326334 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.251463745 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.253453915 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.254743546 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.255324244 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.25516863 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.251414401 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.251877468 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250837498 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.251399137 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.252456822 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.254028245 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.254897719 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.255430759 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.254195901 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.252008483 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.254728263 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.254499511 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.251593034 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.251484647 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.254275161 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.253470881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.251331565 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.252488722 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251535314 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.253911605 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.254296036 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.250972836 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.252122954 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257863024 seconds)
  done (took 86.343715876 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255342903 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.256296294 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256321312 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256575562 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257211165 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.254534031 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257102983 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.258284492 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256873916 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257062666 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257770405 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257340813 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.256373435 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.255618913 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256668878 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257758913 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257401246 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256878066 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257714639 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255696118 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.256927665 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.256970074 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.257153123 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256781891 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256882361 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256948401 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257510266 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257821985 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257036595 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256900038 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257237406 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.257216136 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256235832 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.259753372 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.258900724 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.258733555 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258727469 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258017606 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.257240768 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258223129 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257749751 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258422363 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258624465 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.257861811 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257372209 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258531461 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.258519425 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.258282299 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256236363 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258612068 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.258021695 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257821541 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258733156 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25946595 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258443597 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.257255408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258424126 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258682971 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258983288 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258271347 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259032711 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.255538221 seconds)
  done (took 79.154059676 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256802272 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255941408 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.254072938 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.255250002 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256167983 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252908481 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.257271856 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.256850385 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257788549 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.258322488 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25711063 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256709691 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253106632 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257301572 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256164063 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254789843 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254254283 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254924963 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257489892 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255992714 seconds)
  done (took 26.309074845 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.255186319 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.257859738 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.255496753 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254888386 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.257479715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.256941872 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.256945981 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257886944 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256091429 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258620903 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258331863 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257377818 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256439646 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256837163 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.258829309 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.255728973 seconds)
  done (took 21.302502604 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.255130931 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.259573442 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.261110524 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.260057587 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.256182844 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256171568 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259391563 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.255712211 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.256660122 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.25939901 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.259665909 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.258374471 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.25946534 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.260920478 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257205885 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.259885826 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.261659353 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.25806935 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.258595929 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.26161672 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.257973451 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.256653972 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.259005567 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.259027503 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.260805625 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.257059626 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.256692573 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.255638795 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.25610327 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.259232854 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.256731929 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.25758604 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.25761772 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.25734265 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.260022339 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.258222259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.259818704 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.258844064 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.259987463 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.260874254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.260442583 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258138651 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.260289573 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.259530553 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.257525821 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.259154914 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.257567371 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.259824483 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.257205906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.257648015 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.261157128 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.263465007 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.261021842 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.260965511 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.261611816 seconds)
  done (took 70.429930346 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261223111 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261309926 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.258384588 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.261203393 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.260997234 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.257584466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.261034537 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.257622648 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258171883 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.260621946 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258815936 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261342968 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258615362 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.260753355 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259671589 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261867125 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.25939201 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.258119279 seconds)
  done (took 23.870842971 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260498353 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260579877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.262324962 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.259457512 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.259551857 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261625697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260115767 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.26264139 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262029287 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260174827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258894452 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.262060867 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261918091 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.263544233 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261110914 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259682811 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.26250813 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261421809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.258983264 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260830605 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263110404 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262458942 seconds)
  done (took 28.940446636 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.260499216 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.260471202 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.279331316 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.304763502 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.292118062 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.260706569 seconds)
  done (took 8.853666285 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261965371 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262570074 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260788317 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263812053 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264202815 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260784664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261287124 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260645282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264189223 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261049141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261674457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263274847 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263151155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260195105 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262072066 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263333116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261173579 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260266501 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262680545 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264619875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260550513 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263591565 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261582577 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2614051 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262023426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261029729 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265580088 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262772722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262792145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263181326 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264607186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262548943 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264271457 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262019991 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266160645 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264329708 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262148988 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266323369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264966085 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262735078 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265180654 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265434128 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265999877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262898656 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265545811 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262271487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262227036 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261857273 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263820485 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266623081 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265506526 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263311606 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26548991 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264596416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265570345 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265926155 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263330114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263717056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266072415 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264458388 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262599017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266263858 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264072359 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263979343 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266894263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263277562 seconds)
  done (took 84.583665259 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264249165 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263264746 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26368847 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265011102 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264771721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264392754 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264011005 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263459589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264026249 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264319295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266575729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264151355 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263733413 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263564929 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264561271 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264285934 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263627425 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264790407 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264563226 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266390212 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264706325 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26419648 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264095591 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265821858 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26486026 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267984511 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264580994 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265665348 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2662819 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266172824 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266051104 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265602869 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265282924 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264652047 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264923137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265558179 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265221622 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264021666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265314832 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268858641 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26570704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269158864 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266198822 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267814364 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265715367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266306732 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266537727 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267049708 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266927912 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267230313 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267014088 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26647169 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266835294 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266453275 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266823566 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267384926 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266130277 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266014737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266279752 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269373635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267611073 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266945058 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270656455 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266977876 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266542523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26742354 seconds)
  done (took 84.742867056 seconds)
done (took 1717.550616441 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.37039312 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.317569696 seconds)
  done (took 13.889520043 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.430016094 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.382905023 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.267678112 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.298475468 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.267164556 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.262516921 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.286656321 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.26787059 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.268866376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.26711737 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.267928488 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.45781796 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.267537507 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.268423223 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.268365725 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.361825005 seconds)
  done (took 42.104121313 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.294987475 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.276161441 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.378473291 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.291907884 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.29518103 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.442046898 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.324271028 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.272434902 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.42841206 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.311006519 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.712250231 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.296295567 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.273110583 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.29021404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.288880023 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.44589974 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.500058698 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.714772825 seconds)
  done (took 29.039851693 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.684826986 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.276439467 seconds)
  done (took 9.165024369 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.26591815 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.292051142 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.308217582 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.273101036 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.305828886 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.322473279 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.326918994 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.349053486 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.311767385 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.312748615 seconds)
  done (took 64.285395955 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.291574032 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.275205212 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.274545151 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.271581333 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.274170019 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.267292368 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.272270884 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.267982103 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.588320667 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.39033866 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.288707015 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.28050861 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.274816215 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.273833254 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.270883498 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.308174195 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.427515932 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.271551214 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.271333594 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.278788279 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.272851878 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.355542617 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.312308327 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.2717372 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.389469396 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.598130088 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.278863871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.279842257 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.411851056 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.271820957 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.274226333 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.274763515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.27570076 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.834903026 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.728606545 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.28048391 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.296024201 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.281602292 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.270585562 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.395040758 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.275194098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.281985279 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27232007 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.706111173 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.426940926 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.379678502 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.4018918 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.275953673 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.276894008 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.334328725 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.274722019 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.275682623 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.303000187 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.003754966 seconds)
  done (took 107.170599819 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.308104674 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.754370928 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43631358 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.28340142 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027428828 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.920702614 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.268282358 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.530614487 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.295212103 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269473427 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593559374 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75120648 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.270832536 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.282959606 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.903198008 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.311992468 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.269167822 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.030287945 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270605276 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.272273144 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685837294 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284892258 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.269036329 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.432914437 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.309343266 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.709616015 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.639980872 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.713646142 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.275983866 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.26866461 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.715091019 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.278225227 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.270464067 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.270169592 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.532214621 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.60017659 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.58254324 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.272995235 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.285353333 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.271616971 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.269662373 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.704889592 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.589123442 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.270437356 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.269450029 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723032949 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.270895107 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.27324137 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.271340385 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.468610554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.004784591 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.269838933 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.682769099 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.273181644 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.524912117 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.294345054 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.320515084 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.736956689 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.272754517 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.328093139 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.281694697 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.271879741 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.275624664 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.27350004 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.275794505 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.594146887 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.37358763 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.273644131 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.596047688 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.709793005 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.27328472 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.771471793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.156440968 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.279354837 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.351513141 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.271412908 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.843900848 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739465782 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.279647864 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.271149684 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582308341 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.277107008 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.581628511 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.285055419 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272193251 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.695914471 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.288011646 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.273725321 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.272135156 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.272350296 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.907804902 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.280207739 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.528401551 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.312838103 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.273237465 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.272628902 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.299507384 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272433854 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.273291953 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.272811739 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.77192831 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.275157625 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.565000043 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291922521 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.272939619 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.270809036 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.276181873 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.274588628 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486050345 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.794549911 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.273245895 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275328967 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.271879816 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.280433579 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.413967771 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.279987177 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.55705449 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.275474304 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273726879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.279654667 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960881384 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27658551 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.274695103 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.278079746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.102927237 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.482064235 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.291414202 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.274163551 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274855114 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.288268362 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.557341359 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.275468046 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.298835521 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.275333683 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958746571 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279801988 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.276701057 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.658066997 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274873959 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.162103158 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.291437109 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.275019066 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574066976 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.540447997 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.306285357 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.277619947 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.287305957 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942689366 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.281528289 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.416545918 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294056877 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.276186733 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.471432049 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.651690316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.277131493 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.830973901 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.276594089 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482720545 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.277326496 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586250216 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.738574989 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.275993438 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.277939519 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957141499 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.942699024 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.92790057 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.275689023 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.600595321 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.242692038 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.722097734 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.275535451 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.277578881 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.703375905 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.279125367 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.280413727 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.276868798 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.277960132 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.43429743 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450530897 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.216755773 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275274784 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715666049 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283629113 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276850557 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.293312495 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.278890972 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.628881993 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.344853404 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.279299395 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.279587843 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.279021834 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.279660213 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.727507167 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.224491221 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.278804792 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.430610532 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885813527 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.280203908 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.277578612 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.937333944 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.499145771 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763941813 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.310389295 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.565493149 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.284807048 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.318267462 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.970547342 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.304835557 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773221382 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281842156 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.280506615 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850856656 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.277893161 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.624010559 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.278922882 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.283846509 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780242677 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.276939917 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.280617274 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.565647145 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280009179 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522067654 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.279781635 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.282051268 seconds)
  done (took 1096.638187218 seconds)
done (took 1363.495383929 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.2812354 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.279156301 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.268021985 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.28118498 seconds)
  done (took 26.329308182 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.289795835 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.28559706 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.289574427 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.280844921 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.28610452 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.284629124 seconds)
  done (took 8.936509608 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.324397467 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.280025107 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.280830657 seconds)
  done (took 19.105660205 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.489699155 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.478736718 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.632720216 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.318060417 seconds)
  done (took 10.139502172 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.290753119 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.287116234 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.289572604 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.28832177 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.289038467 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.288361317 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.288543053 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.288350252 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.289237677 seconds)
  done (took 12.817782771 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.023361704 seconds)
done (took 83.571754688 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.265016844 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.318923662 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.429931759 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.283340195 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.9330528 seconds)
    (6/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.419602075 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.390058846 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.618989537 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.289192099 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.302913478 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.386523963 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.51866689 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.727814955 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.900688447 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.52463654 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.312222111 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.638615789 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.325217746 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.280857232 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.325590922 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.300978362 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.994431095 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.304831768 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314133953 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.861542413 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.747381468 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.284133944 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.266901471 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.314834457 seconds)
    (30/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.362773034 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.280899424 seconds)
    (32/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.778951761 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.091532156 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.636799341 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.682328912 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324301691 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.991655889 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.4555078 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.117342351 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.477319125 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.269220642 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412037036 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.666508127 seconds)
    (44/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.502741844 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.39893358 seconds)
    (46/309) benchmarking ("sort", Int8, false)...
    done (took 4.328254784 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.564141266 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.184006886 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.408716799 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.268284509 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.389158421 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.394532624 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.309070312 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.538933821 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.819266209 seconds)
    (56/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.88012736 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.069013086 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.597163013 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.90365188 seconds)
    (60/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.314057251 seconds)
    (61/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.465518694 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 5.550375698 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.734765022 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.361524404 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.378838036 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.341533386 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.283678022 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.284530633 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.727927176 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.717993886 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.886944337 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.294549494 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.657518921 seconds)
    (74/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428220889 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.410782356 seconds)
    (76/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.282979825 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.132636972 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.297297615 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.57015022 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.382215299 seconds)
    (81/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.368477238 seconds)
    (82/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.074836907 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.370956715 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.270158325 seconds)
    (85/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.294125773 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.640547243 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.429101398 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.27863837 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.844886132 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.529570849 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.912652555 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.311310182 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.634839137 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.382902754 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.307635612 seconds)
    (96/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.495114308 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.675092753 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.326561012 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.273087874 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.273018669 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.312574157 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.313036716 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.28496093 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.635213799 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.68113828 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.28412853 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.642250005 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.988647235 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.486155327 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.577329586 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.631199162 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.177696014 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.02126639 seconds)
    (114/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.293935191 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.288192444 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.380402394 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.285033254 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.377103442 seconds)
    (119/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.369510269 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.28696559 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.628449856 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.926332447 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.661080333 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.911263175 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.339703545 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.784661599 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.492806579 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.323910094 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.544412842 seconds)
    (130/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.495793562 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.933914916 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.286069879 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.015036755 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.56633969 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.273055485 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.487356073 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.338750247 seconds)
    (138/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.336376426 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.415831801 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.575535732 seconds)
    (141/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.277046348 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.960276123 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 6.301235703 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.289644726 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.301877901 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.168570111 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.00173257 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.314526324 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.606861402 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.834418976 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.791692033 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.576519731 seconds)
    (153/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.446085221 seconds)
    (154/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.290947873 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.651431414 seconds)
    (156/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.297845739 seconds)
    (157/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.497002027 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.289656259 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.1626618 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.310355232 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.646541468 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.340007997 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.412996047 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.273973514 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.673759872 seconds)
    (166/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.875556372 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.888244734 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.377622939 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.192422072 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.616178239 seconds)
    (171/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.401891678 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.839935832 seconds)
    (173/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.071972327 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.298149524 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.397381812 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.845945021 seconds)
    (177/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.304695981 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.363705222 seconds)
    (179/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.596880855 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.144108153 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.316015477 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.146245827 seconds)
    (183/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.316535289 seconds)
    (184/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.37614935 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.331997682 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.486865405 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.659117679 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.851505302 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.001774993 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.474192588 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.872680826 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.829539452 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.290710441 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.356223131 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.354225638 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.006774464 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.570903198 seconds)
    (198/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.091615535 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.488500153 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.658692878 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.367534623 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.400016939 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.291880445 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.311386104 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.010844935 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.29489627 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.281149236 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.412638738 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.522193667 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.326766279 seconds)
    (211/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.279341197 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.858992489 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.508418401 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.764892481 seconds)
    (215/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.591539237 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.395488521 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.870438265 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.308159631 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.058136935 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.147848632 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.27957532 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.300931018 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.356232416 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.316819124 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.381497271 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.532312427 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.293069511 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.326290591 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.334247183 seconds)
    (230/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.640227285 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.076298216 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.135435014 seconds)
    (233/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.793843266 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.082573949 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.29322491 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.035942239 seconds)
    (237/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.481965376 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.517641875 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.018526931 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.420147566 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.490806334 seconds)
    (242/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.419314638 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.697152587 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.306694562 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.292995181 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.282069625 seconds)
    (247/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.586126469 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.653888051 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.295725816 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.334504718 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.714100785 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.724676368 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.178387369 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.282680268 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.252305431 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.31342706 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.497765546 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.712065415 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.334181418 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.30304645 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.819144782 seconds)
    (262/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.62144487 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.321134317 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.768634559 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.581029194 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.496433668 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.3762072 seconds)
    (268/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.009237333 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.691506424 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.704609801 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.112516837 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.308592111 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.346551554 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.15523201 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.328191318 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.297070127 seconds)
    (277/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.441552649 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.299056834 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.105045002 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.326207637 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.753222559 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.310313972 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.606849142 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.382240421 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.309227787 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.692353949 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.384189669 seconds)
    (288/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.481461309 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.415892541 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.424539445 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.29842832 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.484016733 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.316524689 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.379185397 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.581710014 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.484753611 seconds)
    (297/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.811144406 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.341783178 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.305889153 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.912310541 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.322175943 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.362102362 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.322481949 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 5.282810329 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.396456283 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.306919678 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.880427167 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.641583169 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.643458678 seconds)
  done (took 904.430382087 seconds)
done (took 905.650738834 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.331164104 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325436866 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.308504237 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.331893967 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.421926497 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.343087625 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.318484904 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.312070292 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.357683038 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.35836736 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.309170971 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.342554946 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.312598805 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.309482059 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.308638381 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325365881 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.297738345 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.314514851 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.326857489 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.319758153 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.328029324 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.310234309 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.359829271 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.342861945 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.313307395 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.312964663 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.314794397 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.331143111 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.42209308 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.313871929 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.314220734 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.324221787 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.297828513 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.311648804 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.306188924 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.330824072 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.324422729 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.320821724 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.315182783 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.344022033 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.681282815 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.313029933 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.314029913 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.310884809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.312877157 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.316119795 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.314295846 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.318014701 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329145116 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326459217 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.695651522 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.330317501 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.315460609 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.311921332 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.323170123 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.31324399 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.316823467 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329023436 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.332700946 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328151289 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.295578445 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.319379523 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.315372882 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.329937128 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.321504437 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.745940296 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.311996836 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.317926521 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.697344102 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.320994164 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.743598033 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.324274273 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.315033447 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.328161891 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.344862484 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.307440439 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.310372594 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.312952272 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.321898051 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.312655085 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.323878232 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327706119 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.318273624 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.314181518 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329361583 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.346381009 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.323590836 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.316963817 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.323378318 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.334274701 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.323220235 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.325493031 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.317155956 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.310142024 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.323352445 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.318865297 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.317524892 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.316298506 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.320316936 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.325723342 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.697408079 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33430156 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.312447225 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.312071184 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.314600025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.329157785 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.697224546 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.318869448 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.337628344 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.362691047 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.316094438 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.304509944 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.322243469 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.33172255 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.323955329 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.317225561 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.311006355 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.307660843 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.715502978 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.333588322 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.315995413 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.314167827 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331989954 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.317665304 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.312627263 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.312240545 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.319469306 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3302635 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.437365093 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.326549079 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.347153003 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.314977094 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.318930187 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.345442697 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332167312 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.34809041 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.319174971 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332498477 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.335815728 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.313250942 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.328280691 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.327439044 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.318086335 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.323391557 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.31058288 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.3459733 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328659782 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330142089 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.338644346 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.438325355 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.313886067 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.276680054 seconds)
done (took 221.75184075 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.376408655 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.314770101 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.407798672 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.317404968 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.411576102 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.412282358 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.312322081 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.313517334 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.312135945 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.693802599 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.312262511 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.312533614 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.307009194 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.313670089 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.396683081 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.31546375 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.313258989 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.656349001 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.318974769 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.384791783 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.316650327 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.313908047 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.316625385 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.695012291 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.314838065 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.315550811 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.385467288 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.316166983 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.660991243 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.307873269 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.308906643 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.660818604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.405787945 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.332396385 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.32626795 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.32518178 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.413899989 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.33357228 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.396737745 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.3982414 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.408713064 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.34988039 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.31117784 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.308727378 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.319602466 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.320363563 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.313947531 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.344110414 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.315210173 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.315326139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.65905164 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.327009116 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.316091059 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.315976394 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.315688279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.349425944 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.315986538 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.319457668 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.40841777 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.320437129 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.379043439 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.696995015 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.69486464 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.318599391 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.318582849 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.316650352 seconds)
  done (took 147.277489298 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.385546658 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.392163629 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.42768681 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318170622 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.36886086 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.431494368 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.319330366 seconds)
  done (took 10.894237881 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.324364971 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.318911698 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368167028 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368528157 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.322514312 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.466859312 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.318641826 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.329701246 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.31615694 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.371241222 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.319738317 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.318701352 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.325482351 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.312155901 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366209624 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.330032154 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.433895808 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.320325642 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.321112412 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.476572797 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318775268 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.327318338 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.370810391 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.330928574 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.320501755 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.326262587 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.888168318 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321607893 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318129341 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.321351903 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.31924124 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.358310746 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32133683 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.315820295 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318263422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43614181 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.32373015 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.317985433 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.321362822 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.318205336 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.32140872 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.321361205 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.321199761 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.318545274 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.321892134 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.344433948 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.321525724 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.322093603 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.321450268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.321753565 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.370567721 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.321580296 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.31895308 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.319673707 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.377314897 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327934205 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.32490394 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.319311643 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323186436 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.318480441 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.478093537 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368581716 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.32142455 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369482363 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.321611944 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322023755 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.32192634 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.322201542 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376086278 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.321470355 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.370047409 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.320816859 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.475761401 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.34488858 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.323921456 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.324996866 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.324335653 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32496405 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.32107393 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328632176 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.320603444 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.322689932 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.328856609 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.320643773 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.320038535 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.425926088 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.432674196 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.320656702 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.336040322 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.330740573 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.321898333 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.37623716 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.323844902 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.321061939 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37704853 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.438760504 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.376239474 seconds)
  done (took 152.012351667 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.32810876 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.331450479 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.324777738 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.340354805 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.323614852 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.32538805 seconds)
  done (took 9.230723105 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.325657395 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.326106709 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.324744853 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.325445428 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.328742154 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.324221786 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.327068475 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326007577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.330577135 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.324393752 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.324938535 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.323560053 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.324999097 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.326849611 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.327453173 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.326177141 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.328093317 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.323587747 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.324552713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327606293 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.42443955 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.327667459 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328549838 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.327047481 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.328968009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.326488854 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333731886 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.32432886 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.325654522 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.333704802 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.330498981 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.326747107 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.327970667 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.33221204 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.332908245 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.328088818 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330727009 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.327773597 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324969799 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.326565884 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.327609356 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.329152523 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.32748463 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.327887042 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.329826273 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.33113798 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.33194194 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.333712619 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.329970723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.327235387 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.327951291 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.328015414 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.326984819 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.327844381 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.332119166 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331578363 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.333168533 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.33046701 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.329920781 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.330674364 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.330342671 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.328084507 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.329553264 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.333693929 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.334983933 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.328847983 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.33014415 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.335065266 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331471136 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.328356651 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.330432007 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.326079058 seconds)
  done (took 98.0107935 seconds)
done (took 418.671696503 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.601150421 seconds)
  done (took 7.861591402 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.368455406 seconds)
  done (took 7.630075471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.836565824 seconds)
  done (took 21.102696267 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.341160449 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.351659141 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.347834494 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.330345615 seconds)
  done (took 26.632646141 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.618233951 seconds)
  done (took 7.879272896 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.334086224 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.323428702 seconds)
  done (took 13.919613893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.884047583 seconds)
  done (took 8.145037456 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.764349433 seconds)
  done (took 8.030960399 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.324315419 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.320782143 seconds)
  done (took 14.173991182 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.305007362 seconds)
  done (took 7.567049104 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.537155384 seconds)
  done (took 8.79959459 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.323149797 seconds)
  done (took 7.585532935 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.327154706 seconds)
  done (took 7.588932656 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.983592235 seconds)
  done (took 9.245148715 seconds)
done (took 157.422102399 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.320486427 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.323854412 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.324529351 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.322284837 seconds)
  done (took 26.551934358 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.364034143 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.363231781 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.364506604 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.373785895 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.36576405 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.362331817 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.356280805 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.357542484 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.37388881 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.36791455 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.381468631 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.370180628 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.38219747 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.356715531 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.366476101 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.366469055 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.375154924 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.367390721 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.356117423 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.366152156 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.334551626 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.374135184 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.367296316 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.332040491 seconds)
  done (took 34.008956728 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.535930177 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.404589227 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.487021378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.386278113 seconds)
  done (took 7.076449848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.38265603 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.385030171 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.396815706 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.440010461 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.465142457 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.394563637 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.359330819 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.354072668 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.339183682 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.38555608 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.460606694 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.401007912 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.52379591 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.331182788 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.519627432 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.332221113 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.332528596 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.384417366 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.435757813 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.459294359 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.332764245 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.384712097 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.388438615 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.401292522 seconds)
  done (took 34.85357223 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.331068148 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.34107632 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.337853477 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.331887881 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.331439595 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.33182981 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.337392527 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.333343273 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.351689465 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.33266463 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.3323304 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.332668991 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.331432116 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.333665728 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.331406283 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.344525301 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.346859649 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.335280507 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.335665288 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.339146084 seconds)
  done (took 27.986724984 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.325829354 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.229997683 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.677569808 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.587602287 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.32723576 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.328334864 seconds)
  done (took 28.742420622 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.400247201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.522551815 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.33235511 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.674450275 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.76222684 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.336100527 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.333084604 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.555777368 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.855396859 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.858560115 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.389397586 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.398141321 seconds)
  done (took 19.685414668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.339862259 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.328821135 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.336174864 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.346063704 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.386191169 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.338200693 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.339938945 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.326716345 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.388322977 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.391104608 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338063087 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.387626069 seconds)
  done (took 37.514916622 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415655872 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375235984 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.342394064 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059668604 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.716471749 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540489627 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.073262612 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.766460568 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.337726755 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603067746 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334732461 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421036768 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.585391202 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341457414 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332686416 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.310036335 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558570238 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805299311 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332937501 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.192056382 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358227213 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332097657 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.368802281 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.359626125 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541705285 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.459435268 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.591443579 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330730497 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602384998 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342989082 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341018446 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330732925 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603761375 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001970578 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425441479 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341915182 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.183750263 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.04669413 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.328151924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.272941988 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.122786432 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335673644 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341991376 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33222606 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.266140208 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336183413 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775674931 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.339253207 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.041939874 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330976656 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341301149 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426709423 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.335554613 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.153324928 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343419091 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332776972 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.329536768 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337334458 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904985424 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.705180968 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335612029 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.26957298 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494031641 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.283624958 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936679523 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.43390798 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.3356915 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336293029 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267580189 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.25658004 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352026331 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47823511 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.354917999 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98597317 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040887423 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.337156931 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266269985 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871778485 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333652752 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.270743782 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560891994 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333404908 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271407895 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.289947504 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267164395 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041027305 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344279836 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.728105726 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343506868 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.764824825 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348011656 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352012797 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356934546 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557815709 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.336162574 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334048013 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.154502564 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476510705 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355534204 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77105646 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273810448 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.339141139 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591979819 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.546009438 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335428791 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.339320703 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539525695 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341544066 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.352242811 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336792451 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.347158133 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.902312886 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350057468 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.733735672 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354294852 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336299518 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077941805 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355530183 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.438043493 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34437085 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578289574 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.108833271 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340388187 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419228925 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344993319 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335609076 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.318545333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.858348318 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336951027 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.338139252 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336206244 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.35034857 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.340304598 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297577754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.34535272 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33778106 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.342207684 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560484037 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334933867 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614680118 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272014664 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48164916 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.396751938 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.560056153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.494900281 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.335866083 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597769484 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350177213 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341222512 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350655215 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354970725 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434422719 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358461973 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.336604733 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596433717 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.341540547 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.341382796 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.31159879 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.789796968 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339681803 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.343476094 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198365801 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904130194 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314053775 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343671683 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227971645 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.351824108 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402104459 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343478866 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.347814589 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.115272761 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.144337488 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.345115548 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.349339416 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561626693 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349282699 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.318468418 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422626611 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.532511509 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908340846 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352091982 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.272888306 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.049968471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.032276184 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338283028 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275680215 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339095073 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348291066 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350277156 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.565166146 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903590411 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342070003 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.207237859 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.348425616 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350845387 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.345137815 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339401577 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.091617022 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.71987971 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357659194 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.35483028 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483774909 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.353307667 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274273179 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.344616436 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344999781 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341556757 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339872353 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372834217 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.21825946 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82954619 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603138139 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.2016343 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355075711 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.392726932 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.373824581 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.340156396 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.161627078 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363884189 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.344599358 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349442896 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.352313124 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.273467851 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004142352 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911645872 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066306208 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864830584 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294467176 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.344071611 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344308966 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.783698481 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278087487 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898498279 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526184852 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.780326293 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299807512 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537810518 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.505117866 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08287123 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351366752 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570336067 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253606268 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.18879355 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370852644 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553452619 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376628318 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341352881 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273001274 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.644608705 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570589873 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.176030829 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424561833 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779782621 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.181099321 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360668214 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.341782481 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.708234489 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517126104 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.064955805 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522860284 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353911426 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347476992 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817333363 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351573224 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.573210279 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944174431 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34428959 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.544905871 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286576635 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.354925035 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353787078 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.343923473 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.608114398 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.34693875 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.599244674 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354748971 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27877629 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354577616 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862296014 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.201851825 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.35059153 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343895499 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087289814 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348240962 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622056955 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.348378787 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.084450636 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351958955 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279352576 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283507903 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.036498951 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350591316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319102811 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843400402 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.45455575 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338568614 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375883011 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268139946 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602484766 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.359456596 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916928717 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574555118 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.131094303 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369295133 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.446501915 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264552718 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.346539978 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345125719 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580601455 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20146424 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570364642 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.356320739 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.254381965 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344421393 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560283157 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34676364 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353245014 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585273393 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.057192116 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.360802232 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078609922 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373886219 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346378539 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266447704 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.5092467 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353118399 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426723784 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357632886 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.356976211 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.358938312 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516298983 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35193459 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351896647 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.361843651 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440659853 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.765872457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.097827269 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.35426395 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920665007 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057482462 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925174406 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363807255 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347882142 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354760028 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284790235 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496547262 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.579185647 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621941684 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473973684 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.494337405 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370013008 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.230488909 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379095595 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562329091 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624185715 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248077682 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348421691 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361901271 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.348003457 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358883767 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.559393535 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85765229 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909978535 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460984139 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353834223 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.787819744 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625334125 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348847622 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350890643 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939698427 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.349088903 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.721562392 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.357826072 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353981952 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498359565 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358208562 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027102849 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361919492 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.509208794 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.123223413 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.342990019 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609606494 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.794784784 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361502131 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921395687 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.041815277 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622154637 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418525024 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361363123 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.482605156 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497436029 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.352298626 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353252767 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350222869 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196196369 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.061274141 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361559816 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925658882 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616377631 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.349492771 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.358855405 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374890253 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.362098632 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574242477 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070664923 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577908593 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361893348 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357470017 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.167636752 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930707405 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36724902 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287078339 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.35515654 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585298118 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.588768078 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372637893 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.803890595 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.062948102 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911022368 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.360640668 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373475075 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362642375 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037656678 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926155737 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.088729674 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845939932 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920799065 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353253871 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628331994 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.357644744 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351614683 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645476982 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.355597336 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36467693 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366593155 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.922902618 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110855023 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.35607947 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.252161153 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.291221832 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693048725 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.0410308 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292315608 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362419969 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.534858627 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355846075 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479993453 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364709875 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.357311593 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355174508 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.111891339 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634188549 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.357901097 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.353797117 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.314127596 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358780627 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36231164 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587931343 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355516837 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.026626555 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.704892813 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611061144 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358859634 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.339495349 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.358302612 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354882887 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351577079 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.562989385 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.581140103 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915550445 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.363128493 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.366865376 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359510424 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.571026949 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567357949 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364748802 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368912054 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3656588 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372814137 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.262920016 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.857276515 seconds)
  done (took 1594.771402585 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.358986039 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.374577375 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374473664 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.373113763 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.389296078 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445025014 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.429744336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450545525 seconds)
  done (took 52.4887878 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.359336815 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.579664379 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.386779743 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.358359929 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.367053416 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.367809199 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.794452612 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.3684749 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.365017277 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.36504318 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.368752531 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.357171062 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.985340123 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.366792397 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.360035186 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.340810475 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.364491262 seconds)
  done (took 65.754907084 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.360676992 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.872024431 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.454417177 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.356802723 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.287729077 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.359838571 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.068852172 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.392111512 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.371026428 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.625245203 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.007594906 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.390084781 seconds)
  done (took 84.841721016 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.363614803 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.362742647 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.363523874 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.36241697 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.363086898 seconds)
  done (took 8.110029222 seconds)
done (took 2023.648434969 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.610609477 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.045024475 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.025863145 seconds)
  done (took 5.36534761 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.507532622 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.553072287 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.675432698 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.695435836 seconds)
  done (took 7.726450121 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.637269017 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.728052396 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.5390869 seconds)
  done (took 6.199326936 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.739124189 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.370938231 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.434452218 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.359134188 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.359849712 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.359936381 seconds)
  done (took 20.374392428 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.364201409 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.36737133 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.364376613 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.366593967 seconds)
  done (took 6.757827726 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.343253671 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.080106162 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.344658344 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.36317344 seconds)
  done (took 18.425876113 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.110424344 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.124872817 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.10388136 seconds)
  done (took 7.636525499 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.358248264 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.2082356 seconds)
  done (took 9.857516601 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.687279011 seconds)
  done (took 2.983019851 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.493893641 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.627966507 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.363885838 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.321447111 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.382360637 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.119426599 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.970627942 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.555335246 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.3136726 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.495433818 seconds)
  done (took 27.942770796 seconds)
done (took 126.719205565 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.08047171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.73414962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.563361997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.049775474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.593641189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.562470448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.781705248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.016449277 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.55648316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.547312243 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.090548401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.590331947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.518078038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.729941608 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.509959531 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.361103038 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.591330689 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.126309724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.772671223 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.928521956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.780825108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.680819365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.918698963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.705125284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.59085328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.506709927 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.264791328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.361821172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.942271826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.28454436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.510840414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.105281857 seconds)
  done (took 189.651876474 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.360314679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.373699446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.362715924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.376010556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.359290689 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362564009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.359138684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.362135025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.358095877 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.368941818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.376142282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361817239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.362474083 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.371210696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.361744554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.360314692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363611476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.377768139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.364109729 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.359707878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.371874934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.369228855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.358940142 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.376036442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.376430945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.365251358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.359931565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36712582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.364187642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.374865366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.36270114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.365713736 seconds)
  done (took 205.015699258 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.364374563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.367825603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.364662843 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.370344839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.363223554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.360851738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362568518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.362659585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.360434251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.363964461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381340529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361599013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.377537275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.362362884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.362335106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.367940293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363173798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.364412456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.359216846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.378042894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.375404181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.362320836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.361362376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363705178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.366493313 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.359660461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.375844134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36310969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.376451925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.366702475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.365283184 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.373675993 seconds)
  done (took 205.029831379 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.56869559 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.373971547 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.374413679 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.326841081 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370595515 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.368412414 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.369844536 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.567894153 seconds)
  done (took 14.617982379 seconds)
done (took 615.609859963 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.64105585 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.362919249 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.570347506 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.395094842 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.118965536 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.393554825 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.394487576 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.561563153 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.286621376 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.569489819 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.614685625 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.389817949 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.752929291 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388366896 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.637381336 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.486755578 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.248419601 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.360106079 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.699644522 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.891632174 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.639538157 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.841643894 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.56010444 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.282620715 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.757803667 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.837968455 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.053120847 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.248617185 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.394349541 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.706436265 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.002320892 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.334652839 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.452980876 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.433000593 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.490948188 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.473035751 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.283422679 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.428298951 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.570545096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.605923552 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.898648136 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.102720945 seconds)
  done (took 92.461488098 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.362533904 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.362024051 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.359863057 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.360641209 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.362463385 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.36063577 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.36086557 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.359893193 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.361395547 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.36143951 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.36089324 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.362156521 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.361584885 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.363369092 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.36067226 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.360060966 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.36255671 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.364029646 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.360865422 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.360722658 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.362517794 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.360592382 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.362764403 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.361900398 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.364992558 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.361785953 seconds)
  done (took 36.709716662 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.375849381 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.608859431 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.779933095 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.381417045 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.375179777 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.380754375 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.451049961 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.37666702 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.377332182 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.379436501 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.531006526 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.379127731 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412471573 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.789895216 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.378258471 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376751908 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377176705 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.37606399 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.616577377 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.387121299 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.452352763 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.377555495 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.451328342 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.388197409 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378949129 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377256554 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.381486783 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.867243765 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.378178362 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.530051637 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.126429638 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.451333045 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.819391189 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.791989985 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.129186454 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.381657086 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378718302 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.536165403 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380343854 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377466165 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.451570461 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.379150529 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.790123146 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.999779459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.396243052 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.377424805 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.889310928 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.534154776 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.616848085 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387358837 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.811481962 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381976675 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.379060715 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.378969295 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.615581585 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.385441888 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.377788075 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.899749039 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.382642505 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.452364882 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.379455144 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378138359 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.620268421 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.379529199 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.60672409 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.379755224 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.387056359 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.379595728 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.80096434 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.383175404 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.020707536 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.396424982 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379501866 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.531438905 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.606908233 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.921714212 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.382317363 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.62578245 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.831450781 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.452282108 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.383579913 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.859121414 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.456004636 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.383352448 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383164693 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383137402 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.380798807 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.424788381 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.450966541 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.942840385 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015516852 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.919055583 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.456190181 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.393050894 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381423748 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.903551728 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.396732476 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381516548 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.793889461 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.02668799 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.39836058 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.387727443 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.010251246 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.401325616 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.456920211 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.386712154 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.805456296 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.383405148 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425428254 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.381980667 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.389107942 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.386337587 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.457644361 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.385532961 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.382609959 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.994098013 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.562203219 seconds)
  done (took 180.417379904 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.376170351 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.391891725 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.39094429 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.375156053 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.374602107 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.38109698 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.375493051 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.381348047 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.380466456 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.375356323 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.375318485 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.374859497 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377881954 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.388452275 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.386034293 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.381956864 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.987281153 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.377716158 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.375665644 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.376196815 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.166214405 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.379547137 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.376316775 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.374987561 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.376871215 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.376766641 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.40006896 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.377888355 seconds)
  done (took 153.347808071 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.384303448 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.928900953 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.388085329 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.51039583 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40598468 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.383367718 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.509084206 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.438731279 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385401359 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.382298547 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.38301103 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.674068957 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.38633188 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.878612767 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.568324358 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.511031904 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.877825943 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.385895356 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.382395446 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.383963834 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.512455902 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.392246696 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.676322551 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.930969505 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.386490937 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.931175831 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373480934 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.385316613 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383627556 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.932694534 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.384565633 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.679263384 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.457935917 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.441231854 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.9336616 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.881414809 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.883281656 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.52529623 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.384096552 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38331177 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.384042072 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.372712719 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.933616847 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.386922109 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.386656376 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.925712094 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.401787019 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.38606601 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.394663984 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.383982055 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.443100584 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.443144131 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.681714671 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.938642381 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.46068631 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.4059923 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.512834737 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.749473858 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.392483001 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.882100981 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.371896931 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.938722979 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.389290817 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.37502 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387182233 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.392306593 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.531162843 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.512403956 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.88337058 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.386779416 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.884050553 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.531464028 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.385177432 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.386308233 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389159965 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.938908321 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.885593378 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.5340249 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.519237824 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.575473026 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.37525407 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.386867929 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.37798113 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.461104293 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.388116999 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.939801589 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.88632569 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.389788025 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.389885096 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.390289122 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.389216675 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.558584802 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.939787745 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.46187655 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.87805134 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.698013032 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.685900861 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.389831807 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.445722859 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.388765797 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.685670786 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.389715346 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.444413966 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.812360987 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.687463307 seconds)
  done (took 164.229985499 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.623746431 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.569252901 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.480616964 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.498372859 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.906054679 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.953600931 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.546570299 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.512991036 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.495156342 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.630058665 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.560192184 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.480517538 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.567335532 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.464664002 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.081478895 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.455588308 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.482851497 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.513138332 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.498395083 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.404753293 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.99179594 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.673896091 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.553215941 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.494546552 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.482966281 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.139646848 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.924482455 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.890128632 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.55654942 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.646440164 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.91955514 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.513917113 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.323235115 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.036037448 seconds)
  done (took 66.19216393 seconds)
done (took 694.660892237 seconds)
SAVING RESULT...
DONE!
