cset: moving following pidspec: 29884
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.354918324 seconds)
loading group "string"... done (took 0.55343091 seconds)
loading group "linalg"... done (took 7.154745017 seconds)
loading group "parallel"... done (took 0.166982683 seconds)
loading group "find"... done (took 1.123134439 seconds)
loading group "tuple"... done (took 1.863209699 seconds)
loading group "dates"... done (took 1.218937959 seconds)
loading group "micro"... done (took 0.219601397 seconds)
loading group "io"... done (took 0.914610189 seconds)
loading group "scalar"... done (took 37.336865312 seconds)
loading group "sparse"... done (took 11.319311396 seconds)
loading group "broadcast"... done (took 0.904510773 seconds)
loading group "union"... done (took 12.270887895 seconds)
loading group "simd"... done (took 4.10691414 seconds)
loading group "random"... done (took 8.496216997 seconds)
loading group "problem"... done (took 1.851393629 seconds)
loading group "array"... done (took 19.734490244 seconds)
loading group "misc"... done (took 1.625469615 seconds)
loading group "sort"... done (took 3.067144859 seconds)
loading group "collection"... done (took 16.427524306 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.491182206 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125972044 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115207042 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122255819 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149089072 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117611339 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124916948 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084018444 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.771925586 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157037628 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121545157 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421622228 seconds)
done (took 5.096125893 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173744058 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083092544 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081432129 seconds)
  done (took 1.285997526 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066647899 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121170335 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068071846 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068862388 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068283562 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067753663 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067697465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067966934 seconds)
  done (took 1.651137084 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073306432 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069890721 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070741591 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069368632 seconds)
  done (took 1.403416668 seconds)
done (took 5.71556614 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.769010523 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202625336 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182979178 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399710773 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13186342 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157658974 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648426281 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334343987 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188503536 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084760739 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107844593 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.324607139 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109896044 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636223668 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077066818 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091493279 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138155175 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.403488072 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067271619 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081985636 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088318089 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127625816 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085303314 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077596451 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141363732 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067772763 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134286647 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079639319 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066827662 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.209211789 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172072216 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660728864 seconds)
  done (took 10.206672549 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096467157 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097117556 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068642824 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136539468 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096570294 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069193223 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071098165 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067652169 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087494956 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128699643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089285335 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101457252 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065139929 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068744699 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084562943 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205280114 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082539503 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084045056 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072377899 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077123236 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119698733 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078411495 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078444785 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077996664 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128568064 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18046624 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099563056 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099502422 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066727539 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080871435 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115190237 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12883371 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066561395 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068183991 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12739469 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096559505 seconds)
  done (took 4.619581554 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.307126032 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14082897 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091705064 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13271684 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06502752 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107543353 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065690656 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080978798 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201965602 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.380716094 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573191162 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111113578 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104079635 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067720281 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068733507 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067240727 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.360681403 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.111798289 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105619739 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081608408 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070727087 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069587009 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.343205692 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068331431 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064335508 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068428695 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059335779 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125996378 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068576411 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.930190379 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125300679 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066666308 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10056311 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169280695 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087528935 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140827081 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067231306 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064527469 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150589862 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.068671375 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065318897 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084573905 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110869227 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104017972 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113971695 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065761046 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067620559 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161106622 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064939207 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083125209 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.993155505 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064948056 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152508666 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.073689132 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061918135 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.236916538 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082834727 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06699095 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06275596 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177393396 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129448893 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065208046 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064296653 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065492254 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066819849 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.347612159 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063285282 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.024310896 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.065134942 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074646022 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061444296 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065914922 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066458147 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072551645 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069227024 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.081355811 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.063442229 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071516476 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06294737 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062545142 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06357769 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081431913 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.337114974 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063018594 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06525815 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061883732 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.081914215 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093518343 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063583818 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06238413 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096721487 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.280104602 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070465201 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112034813 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071847542 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088592256 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070113254 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11424993 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068276206 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09868393 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066345159 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102870184 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065131245 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070760197 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09888234 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082212966 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068914551 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397366175 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065737145 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06535835 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069350935 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067519238 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070082948 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069115594 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082568864 seconds)
  done (took 21.154895939 seconds)
done (took 38.40684889 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246087365 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080940136 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077521839 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076656166 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076750914 seconds)
  done (took 1.796958299 seconds)
done (took 3.033674819 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123828001 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103009537 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066577143 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099107665 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066602297 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103832575 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103624385 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084198627 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103166968 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066494315 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100016849 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067079316 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066659571 seconds)
  done (took 2.394467971 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084447856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087025661 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072815616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085766018 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067014714 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086130674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083785325 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09178986 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08417264 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075619992 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066823273 seconds)
  done (took 2.100364331 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082585358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087191272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072728022 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084806408 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068779717 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084330155 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084122135 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089094143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083878093 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076235487 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066457228 seconds)
  done (took 2.091087491 seconds)
done (took 7.795744036 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079807419 seconds)
  done (took 1.281997885 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.603528755 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.144085622 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082977301 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.114429321 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188978158 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122304892 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283335847 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088230254 seconds)
  done (took 9.013713434 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090355349 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071919262 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072834024 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071864721 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070689531 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085836078 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075245165 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07507246 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071801538 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073688598 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074070697 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072568692 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073596393 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073669977 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072138517 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07491114 seconds)
  done (took 2.472594364 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093232735 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092355375 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075845887 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075418315 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072951758 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073452324 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076670212 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075139043 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07237911 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073236504 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075945154 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074296504 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072390925 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066252803 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074963085 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076520743 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071855778 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075177215 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075968649 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076064765 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075310518 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065270125 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072600168 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075136255 seconds)
  done (took 3.118695195 seconds)
done (took 17.09711019 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116752219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072768643 seconds)
  done (took 1.398572624 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082350472 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085460691 seconds)
  done (took 1.386481587 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085411548 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067139761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094357652 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080675463 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066901575 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066668355 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091371755 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067246849 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06656163 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066949921 seconds)
  done (took 1.974117975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069559151 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080229321 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072071014 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083030755 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075771996 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065371792 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074348779 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069123237 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080062913 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064469171 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075378136 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086291058 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075323175 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089147143 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076963324 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072486173 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075128102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070937165 seconds)
  done (took 2.577068931 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066980644 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067917117 seconds)
  done (took 1.360460107 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069723392 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06486442 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070191399 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070337207 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066380399 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065611981 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066563735 seconds)
  done (took 1.695082172 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39629029 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114190473 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31176501 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074229214 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085641461 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260542746 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068316198 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073513169 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073695188 seconds)
  done (took 2.727782122 seconds)
done (took 14.344044704 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07919574 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086671103 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.0972663 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.367526829 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093069799 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066971103 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115762454 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19243322 seconds)
done (took 2.33341613 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216544891 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.622015113 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402992346 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203375726 seconds)
  done (took 2.456992558 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332634161 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088651832 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061472491 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07018808 seconds)
  done (took 1.792793449 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066675212 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07030357 seconds)
  done (took 1.373137846 seconds)
done (took 7.074443819 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067128004 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087567246 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068588116 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066495145 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068482525 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066267539 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067591698 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068391261 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066361379 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068776433 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.071297636 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068690184 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068998463 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069126871 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066332822 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066744522 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068810356 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066115513 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06649078 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066109394 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066097295 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068309889 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066196279 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066211603 seconds)
  done (took 2.911162951 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084489943 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06829534 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072973474 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073377313 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071516419 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074462501 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073942333 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068864593 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074242491 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0710369 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072616054 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073065623 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070670676 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073122009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071255581 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073165987 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074544989 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068498969 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070779149 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073266638 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07424211 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069352423 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073203397 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072597354 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071771828 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07232262 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06953967 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06853261 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073272032 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072641466 seconds)
  done (took 3.417219172 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070416087 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064978073 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066103248 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073095788 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065808626 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066247318 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064274078 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064635185 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065268256 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064486181 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066550419 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064383774 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065555269 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066416368 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066236017 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068152962 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080145193 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065362306 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064743945 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065111079 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067875354 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065416264 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066652794 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065979097 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065895043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066219369 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066315821 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066105708 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066632724 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.175434812 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067024703 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067629858 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064261114 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072260263 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069127779 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065993034 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069789432 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065809396 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066097169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065790553 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065498041 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065880952 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066181575 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072401641 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066089865 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067423313 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066189165 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067231481 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066469404 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068895682 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065481276 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065400594 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067759979 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066776678 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070047902 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065293033 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066655952 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065487384 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066952875 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065450591 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065134958 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065323372 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068120175 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066754869 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080497842 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07249525 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065810046 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068253627 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066574708 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068042118 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067618227 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078909002 seconds)
  done (took 6.201841634 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092872609 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090683021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067850719 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067834902 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064637746 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067025574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070658255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066683744 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068280207 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073322788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067016495 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068217448 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068207649 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079593078 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067209218 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068354661 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072807602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065095377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066516233 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069738181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066764199 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070722885 seconds)
  done (took 2.816981065 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15634639 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071558194 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10716676 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074703493 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069610126 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075939832 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072786217 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072816981 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072852749 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07108107 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071106518 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073030874 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070641152 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07067043 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071086395 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071094774 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072871238 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071037518 seconds)
  done (took 2.667896307 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078107497 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067170152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087930093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067363742 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066730243 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069987319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074126912 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077490583 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071085495 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0685804 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077908021 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070877345 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071176481 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068792301 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070837767 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068389424 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070893337 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068391146 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077352525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073763512 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073648805 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077284674 seconds)
  done (took 2.850474718 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080935144 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068862083 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086421913 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072387749 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064636056 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067077556 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07274691 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068407683 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072931088 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070408813 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068647976 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066855815 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072429347 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068353936 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072115791 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068257862 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070740879 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068404452 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070693993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064584992 seconds)
  done (took 2.671770179 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088490206 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0706172 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07104231 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079506559 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07049351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070582129 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078722033 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070895163 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070150185 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090951458 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070819356 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069788392 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078222993 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075102745 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070424775 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078280085 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078095834 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078192156 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069966243 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070090979 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090112024 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070000821 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078187033 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070138102 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069601758 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069990144 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070151867 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075316822 seconds)
  done (took 3.349657468 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067386066 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06756738 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066710282 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066797197 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066937384 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066262922 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066293529 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066393916 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069094766 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066187017 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068904133 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068700696 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06874153 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068381468 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068721694 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068869309 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068511209 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066048236 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065913109 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066728874 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068378047 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068900999 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068961017 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06591147 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066086757 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068239977 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065989883 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066499215 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06845576 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065895345 seconds)
  done (took 3.28243968 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076461948 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076385968 seconds)
  done (took 1.413984851 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065116997 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083162121 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066020193 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073053337 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072567052 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06806576 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075744763 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07262483 seconds)
  done (took 1.833426977 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084248808 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080349391 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070836975 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08447185 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079553147 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086123033 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138157821 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069986447 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075973895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067169145 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082893913 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068131797 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075220474 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069440478 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07465634 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076182698 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067076712 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075424686 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07129379 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067608479 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070422544 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077615523 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071507809 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064305602 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069817454 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091418112 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080567957 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068608065 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071791974 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076093384 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074232319 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062963319 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069078491 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06937421 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066500339 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078256365 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084413997 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071841734 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077588771 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070208958 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079752133 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06452839 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073338212 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074834558 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078795618 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069088322 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069290649 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064055314 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066373216 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070781922 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06403757 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068361756 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063402131 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077951037 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072005471 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078763617 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067031602 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069583244 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071114938 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071829507 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076061777 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070339165 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071280609 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068090693 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07894235 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073131471 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078149383 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063815679 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062612374 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066210741 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077933893 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091580573 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074868474 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068984827 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069469211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066023636 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071440318 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069755412 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074490891 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074657253 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068651904 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074634932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075640435 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068620511 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070972934 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07789568 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067040186 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072086644 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06642347 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085747402 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067807597 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067143274 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066064275 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079135537 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072062517 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06850584 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066647927 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075612351 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063206934 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069405601 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069982263 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069297381 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079729904 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07398642 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074162734 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077003927 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076107687 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06862025 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07074508 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064977673 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068956438 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067276637 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074653169 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061939773 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07101293 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068615322 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068512079 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202230891 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066168613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068330031 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076222373 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074191287 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067243974 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066148185 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071554347 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068788082 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072680254 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077090679 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068531597 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06438387 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064440556 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073046202 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069151068 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072773824 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074938476 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07235567 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063812153 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067476675 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075154643 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07839044 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068010052 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068307498 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073570511 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068773312 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067982986 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076333325 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07013498 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066718425 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073083682 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068044445 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063461107 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069999071 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070453715 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066393174 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071501816 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071184167 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068843912 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06865561 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066302565 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075852648 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067851318 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066114515 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06778165 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066530436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077210212 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068815998 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062569287 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064255832 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076529887 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064961516 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068480477 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068105452 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071450033 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069376021 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067559757 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068763523 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071050998 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081019665 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074061998 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070058231 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074297077 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080370182 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068524447 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071793105 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068593398 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070311486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070238704 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077376744 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07474636 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074288698 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07144359 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065429788 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074606913 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076294236 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068065812 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06632672 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067816685 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073430981 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074208806 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073697747 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069596189 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067243507 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069911796 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072173586 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071568365 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068406219 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068115702 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075943567 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066966841 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076529741 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0696578 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079520909 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072288173 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06394197 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072653067 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067085385 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075202174 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063926143 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067166412 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068147426 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070323732 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068009985 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071515683 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063116631 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075713724 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076101994 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068545314 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067885353 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068227578 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075148534 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069944973 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07237698 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071552243 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073927737 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078226721 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066918892 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070992857 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.206840761 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07022088 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063695982 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07513947 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068601615 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068589903 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067889479 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067641818 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072672183 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078682165 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07699414 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062963867 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07251349 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067660315 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068425638 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065062534 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073552296 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072169453 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070272807 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075895153 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071542847 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070079791 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073560869 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069747072 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070681286 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071228435 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072618072 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07051077 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071430009 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069699342 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072094517 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068331689 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067687716 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071177743 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070075223 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070483585 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074884713 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069463469 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069405269 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072032043 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070144333 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070143725 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069748674 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06845527 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072153857 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069900152 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069449145 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071917936 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064180555 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076866766 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069063 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077634425 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070309202 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066243587 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0775956 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072346846 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077420488 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070066481 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070317826 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07014419 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068729624 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071554113 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076287381 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066807986 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080040887 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077589435 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07036445 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07243405 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069744021 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070724189 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06837206 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069590545 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069532434 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069590688 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068506449 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073428297 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070869656 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068840887 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069797603 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069588703 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06865012 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069691603 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06292011 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067609443 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06817886 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069031798 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07919061 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069540976 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068143073 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067904887 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069982829 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068093496 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065116726 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07750145 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079076485 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069242368 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076026127 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06768771 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070228797 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079449294 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063216495 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066565816 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066666764 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066255643 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075868294 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069111335 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078492019 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068802959 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067667967 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065571973 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069082965 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067187505 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062481864 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066075153 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071776243 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067023496 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067041254 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068281236 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070782139 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068923705 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07765085 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06721806 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068974975 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068020918 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.197227477 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06652822 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067733402 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072304828 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070424008 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067131238 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066234655 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068882158 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06950688 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070544313 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069725179 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071345484 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078970358 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06985478 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072509839 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073292251 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064318031 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072087064 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069720788 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069588182 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068346597 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072853681 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072995643 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071411507 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077737903 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06921359 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069861367 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069999839 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067623333 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069697069 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069731477 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069404036 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068521017 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07051895 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077943403 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066558932 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072073371 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069369209 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069672697 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076425181 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070480772 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072089059 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076623923 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069414485 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070795987 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077797195 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072999766 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072455664 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07064706 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071292144 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075235704 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06794997 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075269011 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069820701 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070275836 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070899153 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067037995 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069338526 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069559896 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068729392 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075620796 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070567178 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068262928 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067722499 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066760589 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069767909 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072235438 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076789378 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071380798 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072700019 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064121609 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066295505 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071250711 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066733434 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070643098 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071675162 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074280437 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070786806 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068697759 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067492511 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077732999 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07417726 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072136897 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066330119 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071988443 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069656637 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070734383 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069477309 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068835749 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069779482 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072114669 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07042196 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067669131 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075655139 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072065878 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070147297 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070724932 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07009094 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069328621 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064110434 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069774552 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07110055 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07424422 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071297826 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069182493 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079431568 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066184903 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068965831 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072601165 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067989777 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072880999 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063777677 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069932802 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069501165 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069356937 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063246181 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067585737 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066250919 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070210819 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067439682 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063333026 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078791117 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076606164 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070791228 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066713182 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.198826769 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063379514 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064455844 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068814964 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0705423 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071123393 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079194017 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067812929 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068269017 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064796347 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069687607 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072711616 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072764143 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066929476 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064847801 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068509206 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0724651 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074913767 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068112408 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069549082 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072912701 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072509068 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06711862 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072653314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066863496 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073957076 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082684072 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070389475 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070922907 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076220841 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077870897 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07022959 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064582062 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070232035 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072765219 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069591014 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070142516 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070251594 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084898393 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072162088 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068204639 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068308189 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071831317 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068654737 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077687447 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070408157 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069962036 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073420887 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071975436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079006614 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071558707 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076585048 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072389422 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071830113 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067860088 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070003605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06699538 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067817664 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069807931 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068619644 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074251106 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07804663 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068652054 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080037127 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077937604 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070535676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065988779 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068519364 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068266972 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064117848 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069897118 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066938596 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067444031 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066965268 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067641629 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070020258 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074374329 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069395303 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06974353 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068505822 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063005934 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070367678 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070795982 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069096653 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0652164 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068326369 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069283818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074559913 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072199294 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066089537 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070273276 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070193547 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069255292 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06395254 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07517111 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067992221 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070648302 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067740192 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069100405 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069848138 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072137885 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073835846 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070434871 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071125364 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072329539 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071166342 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066463502 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066031751 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07383622 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066619722 seconds)
  done (took 44.10123112 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102610028 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063932776 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064053549 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064242407 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076894872 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065552148 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064089108 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065793882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065448859 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067681726 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064529253 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064313766 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074292149 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081127255 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077503561 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069659358 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064525189 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065603538 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064268974 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065616725 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073900447 seconds)
  done (took 2.81652303 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076883003 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071141189 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074151152 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077891157 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069310621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073325109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075985418 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072910496 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079313994 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069909988 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079381784 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073392373 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070069803 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069792723 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069823371 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073648996 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078866092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07035469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073593533 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076132545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07260059 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073228522 seconds)
  done (took 2.949047107 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069031972 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06667943 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069028382 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0645991 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068810773 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064313041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.081129086 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066502593 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072041988 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067077657 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067380401 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067571074 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070136604 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063600918 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06825995 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066068793 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111872793 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071720473 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069500169 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069604372 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063774645 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070422631 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064229878 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064499587 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067593685 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07214931 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069223672 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066405359 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067854525 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067394197 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068505695 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066369472 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069927989 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06860136 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06747544 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067155162 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068039978 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06828933 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063739555 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066477691 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068695735 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064279339 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068688884 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069756085 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066223927 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06596463 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069420672 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067506769 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063557723 seconds)
  done (took 4.695015084 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081800281 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111746535 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070764601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091410541 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083178472 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078467228 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070800787 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090316028 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06390331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064950495 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082135563 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080860625 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066191909 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070843605 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069637109 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066439627 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06782414 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065410147 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07027509 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067289722 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071269974 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073866468 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082095514 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080641639 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071249797 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066927782 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067436621 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072463256 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080852726 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072714335 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072401024 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073559775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083402487 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073751444 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066680107 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070048763 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084616797 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068381982 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070745881 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065876552 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070452487 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072637499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074756678 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083988019 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068482964 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073778486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068184863 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064876952 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081343747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070404297 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076463076 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083288916 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072052284 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068364477 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072562814 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08315177 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068475618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066499743 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070937294 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080873927 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065840656 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072171076 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082307883 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069732393 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075439248 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082738699 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073878962 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072175466 seconds)
  done (took 6.515952463 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078572263 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07558873 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084489477 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083670001 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075385696 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075731322 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075352372 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075640431 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074804416 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080449571 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075402224 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.097041903 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070451133 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077890082 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075492326 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075571649 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075589267 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075328141 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075309746 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075565593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075579047 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083863795 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075203417 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083298929 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102050718 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071207417 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07508896 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075407165 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083787036 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07535958 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082366587 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075141683 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07528033 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083684638 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082512372 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074785976 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067623511 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074744605 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075121164 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075019064 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070290659 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083811528 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074959151 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069997817 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074925497 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074056088 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082866753 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081688562 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077221075 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079874556 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074918538 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083168457 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074580722 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074881817 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082918041 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108783909 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083676358 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083091248 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074679633 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081566801 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080560297 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087267082 seconds)
  done (took 6.230905484 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086111769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077708604 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079986727 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063681087 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066595242 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07256925 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066705204 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06643126 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077887161 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075888063 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078322848 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071254967 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07354899 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077987656 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070577148 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073809697 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070422939 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07063846 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075298933 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070200599 seconds)
  done (took 2.816174732 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077686044 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085760824 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069779407 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074332359 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07184487 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074599907 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070745468 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071385993 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07006204 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071254996 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078789363 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07909597 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069670395 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074419373 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078910669 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074699854 seconds)
  done (took 2.536034927 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077565959 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074983263 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082704645 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069586661 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067269632 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064837837 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068172917 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063589094 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064878258 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080999574 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068535003 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070948776 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068309509 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066696253 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065391328 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071586989 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065294831 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06602912 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068115621 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08112594 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.0789498 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067001711 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069414697 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068509156 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068801586 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073552512 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068087633 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066285412 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065629041 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06842279 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06899008 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07172826 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065411968 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066180516 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066717164 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065523225 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067725687 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068609875 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070617828 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067938022 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066213539 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067643886 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067817948 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068692485 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064429192 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068388047 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064057449 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070350963 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065958111 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068547608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067798893 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070459486 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068271414 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075206747 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071218772 seconds)
  done (took 5.150267276 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081387717 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069606259 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063928606 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065948051 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070996243 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070022994 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072203778 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070469191 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070492853 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066744429 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070401148 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071003446 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07016577 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071889743 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070194459 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070598887 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062230504 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068090343 seconds)
  done (took 2.612422882 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07327702 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067174336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075135944 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068497788 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068403913 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070385893 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064282693 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066972596 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066156371 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066771791 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066982637 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068621796 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065387766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068742947 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066306115 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066077745 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068573281 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064707046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0660297 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062204924 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068768002 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064858085 seconds)
  done (took 2.833023815 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093382552 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08435249 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142413407 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.0814095 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086287221 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073787258 seconds)
  done (took 1.912973485 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090944468 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079989415 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06875564 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089939896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076877921 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06993371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069829587 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070052054 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078973174 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079466174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070129702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079395509 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078976215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0785597 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076060268 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075691972 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070104192 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069937168 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068335319 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087194975 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070407501 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078587354 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069917852 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069490209 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070006662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07795167 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078724083 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078853597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06953045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07836422 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075765988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07013132 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078635338 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078400313 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070274807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077361287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068483961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087040061 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075529403 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078305277 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070995004 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075928966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078670868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074056233 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077533435 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068986991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075583469 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070281371 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070278037 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088937202 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075937256 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0781332 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075871217 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079321845 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079248699 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089187686 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07920073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078411136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076238139 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081311444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07852749 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075716013 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07809892 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079202555 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076358084 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078643968 seconds)
  done (took 6.396722835 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082731066 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086409506 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071159411 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07972981 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07893337 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070210995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070197943 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070052442 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070264245 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069814131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111555739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070664276 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079132656 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07874293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070447363 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070247449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070604635 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078542036 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069902144 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089141723 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070511742 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078710495 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078543643 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078406697 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079387024 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076203391 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070805513 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070313801 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070324346 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069488352 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075614674 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070336824 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078330169 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068713857 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078297649 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070430592 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070182883 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075041754 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070526704 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07583234 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078911436 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086185656 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069333922 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068783297 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076864377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068309303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068167612 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067727782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06896322 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06786007 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077035062 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077693517 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077113788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07713868 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069067396 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068447059 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068350597 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068746252 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068796762 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074345535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076459971 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068748579 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087218205 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068188313 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06879941 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076777751 seconds)
  done (took 6.281196562 seconds)
done (took 132.49750666 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18255376 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165199852 seconds)
  done (took 1.6927574 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069566973 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097587228 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082217884 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131858155 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068114884 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100437375 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100296038 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078401915 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066512101 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066759846 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066617179 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069457257 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131639754 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066922202 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066680132 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069561717 seconds)
  done (took 2.690310796 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097727016 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158311761 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100224008 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065049478 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097719034 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073773289 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065492006 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075418249 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071965963 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065455654 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073319468 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071255093 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065475361 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071329121 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071633746 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073553716 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065430561 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073376275 seconds)
  done (took 2.794757242 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102416943 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093140979 seconds)
  done (took 1.557839471 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16067206 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106596392 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151696703 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350109798 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169015347 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.232158452 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.135122636 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131039778 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121282781 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125266395 seconds)
  done (took 3.040962085 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099151289 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155722273 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257146988 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115882308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072876625 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096162242 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117196914 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078632542 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081561246 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08120117 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081293098 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077197063 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099300576 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07399773 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073978682 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076328385 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102754735 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072944394 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074352249 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077226006 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099584086 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066092703 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073983384 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073047042 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077874075 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07902924 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065990371 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06571212 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077499319 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074800803 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077412871 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094898549 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078562803 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108563626 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070729564 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109406393 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077035397 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074516042 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074516781 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074779981 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079520488 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079283448 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072439685 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076548942 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065561963 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076603397 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065818469 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065795233 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078834071 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067378701 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078588746 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077405929 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108253905 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067180557 seconds)
  done (took 6.005883735 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103014884 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104890232 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071197011 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112581566 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100867699 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073179044 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101541539 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094138442 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103926035 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070773283 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069152484 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070766712 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083634911 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084309896 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114196563 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104987667 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074384686 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072086765 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105000171 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10417001 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068785626 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095268916 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090298889 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10284178 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068258209 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071499553 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068557354 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071045502 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078014583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079466574 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070196464 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08166886 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085509773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07948462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067834803 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068687746 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068906703 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080488862 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080374878 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079547902 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078747273 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068514705 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068376492 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070060062 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070972957 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068240097 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079803603 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081313241 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079820022 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069766052 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073579752 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068707541 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069806568 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082642293 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078451438 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082122159 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081295303 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068626304 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068733256 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07313269 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082124004 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080662007 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080339861 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070124908 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079519336 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068643597 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080610679 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084931281 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069159534 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070857325 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06925663 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070218346 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070210843 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078928883 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078705487 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069878406 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070092355 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068603975 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08097216 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079879616 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068872121 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077966879 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067575534 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068750576 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069876779 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070300724 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078355078 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08082518 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070093221 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068773095 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069609192 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069576672 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067861721 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077762021 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081108233 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079401438 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079456001 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069816242 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079653761 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078515873 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069698882 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079188681 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068044501 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197045408 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071549109 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079956384 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079358057 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08159997 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070890377 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070007174 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078980849 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081516187 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069920873 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080924608 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081890355 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081491217 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069175691 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082535599 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069865581 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081919036 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070278883 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081591537 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069696644 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081698005 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069487588 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06934989 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069720355 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08168537 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07138585 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06979026 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07074093 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070373024 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081064249 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083837828 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0715817 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082084424 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079314018 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070891914 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079983185 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069808928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080263198 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070942097 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070735911 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068321755 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082900718 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069401463 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069372352 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070600406 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081556663 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069621764 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081389129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079766526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068663238 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082491859 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08137366 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07893216 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081505283 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071813922 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069800896 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0691855 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070109512 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078711087 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079972336 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070870099 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069759762 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07930198 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080419839 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067887893 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079568399 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079565038 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079773005 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068804338 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070045703 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081155736 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081515447 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079052446 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078570125 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079232592 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068879803 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078382606 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079328291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068890445 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085196671 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068570821 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084013437 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080119699 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077934873 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079827304 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081610023 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08123059 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080842079 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08388304 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068526228 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068191579 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080817871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068834156 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069745769 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079261235 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070007846 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069576609 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083657439 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068743732 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079736043 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067955843 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078459213 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067224872 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069904598 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083390952 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067983464 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200525347 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081680217 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071339879 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078630663 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082427838 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080105966 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06863967 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071102621 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08092427 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080794557 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069741342 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069525308 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07165741 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079918884 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079572403 seconds)
  done (took 18.841376616 seconds)
done (took 37.993182811 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21191567 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153428642 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19973819 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119194409 seconds)
  done (took 2.141077375 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123482047 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102478006 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096326573 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065753555 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102858755 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065857157 seconds)
  done (took 1.951646732 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316476234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213994812 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18419674 seconds)
  done (took 2.105655426 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202784732 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190797977 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395453328 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256206265 seconds)
  done (took 2.543948978 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144132391 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090344907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067230835 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083273618 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136491302 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163306634 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102776742 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127756917 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078582568 seconds)
  done (took 2.439027101 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148523918 seconds)
done (took 12.721967875 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102563451 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090057773 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.245756272 seconds)
    (4/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07200301 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.171501706 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.183746023 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070535637 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106463424 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.1732448 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076656958 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100418529 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.176307299 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071779081 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.190648993 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07890077 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115681024 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079879794 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074809715 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090974015 seconds)
    (20/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072696237 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07296093 seconds)
    (22/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072383308 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189779109 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.097145658 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21489043 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093211951 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.106121073 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071996938 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079630989 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078970451 seconds)
    (31/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099559115 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.176999895 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.18141614 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071730132 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228022639 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081230818 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104390852 seconds)
    (38/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.072921186 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09036799 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154945889 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.195095799 seconds)
    (42/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10034706 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092447952 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170464532 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072736046 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065433755 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073556816 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098564722 seconds)
    (49/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.159586591 seconds)
    (50/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.111043821 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.170054137 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090306646 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072291945 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065457912 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139224994 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088282985 seconds)
    (57/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072982346 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099115614 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090194541 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206512026 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065469216 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155666972 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089642079 seconds)
    (64/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067787509 seconds)
    (65/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185308859 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154948938 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074415211 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073223343 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 0.125739748 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055056712 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.185571259 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072177912 seconds)
    (73/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099167374 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051109772 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.174366916 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118153244 seconds)
    (77/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067253995 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072096244 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065291828 seconds)
    (80/309) benchmarking ("sort", Float32, false)...
    done (took 0.127479294 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061867688 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087873136 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197124564 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067881834 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.261364313 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071759784 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.137703374 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151362094 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196450156 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.283913171 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076594528 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070168159 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.186565981 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176784047 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160565379 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066047464 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.17476194 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052637419 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064830612 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142914811 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114709153 seconds)
    (102/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091055383 seconds)
    (103/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098032762 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075874997 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052101718 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093219616 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073958726 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052014675 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11036174 seconds)
    (110/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.151497447 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052501311 seconds)
    (112/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062533803 seconds)
    (113/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064985091 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.17491924 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052684691 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.196507909 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072895951 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072940663 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065547581 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093904311 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107758252 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135649587 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065714387 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061321459 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150636324 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075746039 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067821875 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052465355 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.142654236 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074127386 seconds)
    (131/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075372173 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072596245 seconds)
    (133/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.062876435 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150010443 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065304999 seconds)
    (136/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069622253 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051412734 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065710816 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071403986 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06735182 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071751591 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071529063 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077821734 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094376314 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11071907 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07200194 seconds)
    (147/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07459524 seconds)
    (148/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072277343 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072605556 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050950817 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065141883 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072478963 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051314869 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.189014893 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100369773 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 0.139986227 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095819104 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051149452 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073452121 seconds)
    (160/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066915817 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090023914 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133709376 seconds)
    (163/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051618738 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089727999 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080616627 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052498711 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067769401 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185244654 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114742503 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091030746 seconds)
    (171/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071640532 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052735311 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051680814 seconds)
    (174/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077914347 seconds)
    (175/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068491807 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051036039 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126562529 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074294853 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066557008 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098209034 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071269714 seconds)
    (182/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060582677 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147884205 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105249606 seconds)
    (185/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052044326 seconds)
    (186/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061719508 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052195927 seconds)
    (188/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051158007 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071572811 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065913994 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174040978 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06707508 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065479153 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052215912 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.23399465 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074319683 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068079854 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075125498 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068545397 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088433176 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137566689 seconds)
    (202/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052295926 seconds)
    (203/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075989022 seconds)
    (204/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100658845 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066612438 seconds)
    (206/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113037897 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087994344 seconds)
    (208/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075075523 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054107826 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064740473 seconds)
    (211/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053006796 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067441035 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052193819 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072735395 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051820422 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089922905 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068233803 seconds)
    (218/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051444145 seconds)
    (219/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05198141 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090011292 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061753319 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13531639 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074727281 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073487505 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061116692 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080646154 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06618263 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081362464 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053576412 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083468137 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07132767 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087814605 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051757951 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108444241 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064837896 seconds)
    (236/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088307454 seconds)
    (237/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052753821 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069432643 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077912171 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090355008 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087554799 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131937925 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106083904 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086919982 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079588664 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138613767 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074992017 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065432021 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173911552 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065754737 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054383912 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066835608 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088430701 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064901027 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065886062 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065308533 seconds)
    (257/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053058118 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085242889 seconds)
    (259/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061727231 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162779033 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071806461 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065503525 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051319015 seconds)
    (264/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06136298 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072874749 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107904177 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052686444 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185564594 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052494652 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066761982 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064933921 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051554297 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072594322 seconds)
    (274/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051120819 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06578003 seconds)
    (276/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062559099 seconds)
    (277/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052124234 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073422129 seconds)
    (279/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117454777 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165710846 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064317234 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078716308 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052782554 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052399634 seconds)
    (285/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05198813 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06412184 seconds)
    (287/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071152399 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052204513 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072668812 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073996569 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051200101 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052301438 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065223643 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089911696 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070902196 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071954542 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051617873 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124773067 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172057718 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065486621 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070699156 seconds)
    (302/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062589618 seconds)
    (303/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065501308 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070990589 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053656991 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064974895 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072702676 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051445671 seconds)
    (309/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064533417 seconds)
  done (took 30.537554453 seconds)
done (took 31.94191702 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084583708 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09236485 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074812597 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093663309 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081108265 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07742405 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072830944 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078655814 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079852077 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081801138 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078966341 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055345418 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074779947 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074174187 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074393239 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091174275 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077887945 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073239361 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072850705 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064826126 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072818626 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065499281 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067115348 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054443187 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078023751 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071261569 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072324943 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073796246 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065662207 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066005793 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068934849 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072959578 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065404042 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077672295 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072036958 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072905795 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07427224 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076167596 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067418802 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06601038 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074234763 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065878424 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073061197 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073796547 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072357978 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071366444 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073279767 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078129313 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091659689 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068254516 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074170443 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07622961 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076361601 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072475192 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070001055 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073342565 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071001006 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091207239 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073514583 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068124293 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073848584 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074209239 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071425704 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072841249 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073106299 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075345511 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075444169 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070825156 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074607824 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071151628 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065489155 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072749817 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068951781 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065715353 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075894586 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076970149 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06457506 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071088664 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072545476 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071369921 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065195955 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067468934 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06701781 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071912017 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067503487 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054464062 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068850256 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0716394 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064505307 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072780115 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071508482 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072079944 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067397587 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075269609 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06446172 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070238913 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065747606 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065333717 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066913869 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069037326 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065122804 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067228658 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074385072 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067130257 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071740371 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079128465 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06557311 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071896474 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06458191 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06531476 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080118595 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074558879 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06562998 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067930159 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064245626 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072004748 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064155126 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064750956 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064787282 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065048133 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070905765 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065109311 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067189974 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071644079 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077122377 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064362801 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067844266 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066505131 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064273645 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069932277 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064940018 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.19757639 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067321268 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062113044 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06830279 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06559019 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072792766 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068347735 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073378794 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067455401 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073727165 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070281481 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071401399 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071676133 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06518668 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059054774 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068138349 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068248308 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067550041 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066049793 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067511101 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066410734 seconds)
done (took 12.448345401 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067089949 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143364866 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099526228 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095549579 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086178642 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067283762 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077203626 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10247181 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067659547 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103311968 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087880518 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085676997 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112666476 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065152008 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065757141 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069929029 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067573038 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082052362 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101575164 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086828081 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116262601 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065956998 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095077034 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090704392 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087375413 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101806364 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067106903 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069934178 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069671887 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091317851 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086863644 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069965423 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066640585 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100783927 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092669677 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083475479 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066734501 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082334084 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066511919 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065856023 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067807836 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098493889 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080493659 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080603444 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070039475 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069340157 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067505633 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084094305 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089252626 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079040511 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087047683 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103588458 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068820731 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065655836 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064723867 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085874293 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065476242 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068721836 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06618558 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068422089 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06633072 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06959998 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081102322 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082340041 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069702064 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08088009 seconds)
  done (took 6.814875821 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082886232 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089713872 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083721162 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084217867 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065890729 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066675297 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06711367 seconds)
  done (took 2.037230976 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066815414 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087802557 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088794094 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090450247 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085026384 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087607899 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075433314 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066708202 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080839203 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067525863 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08733693 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102234529 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068021231 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072863624 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090786502 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066952833 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090345067 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06684948 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069652874 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090036644 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068452838 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082172082 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069627846 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067360087 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081274865 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067215499 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113518623 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071098623 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068458752 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069969895 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065477823 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107351265 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080150209 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075453403 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066576196 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080727894 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080700802 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06478168 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08275737 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071644556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080363406 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066796932 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067682988 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064704591 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070886019 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076733423 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067980726 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067053262 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069472721 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086594905 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067349336 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080383318 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070202313 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069532909 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067791907 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070220818 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076152859 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067314612 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086133994 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067827612 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083189688 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08247955 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080752005 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082747799 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068844 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079945339 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080236966 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069300842 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068404696 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069911494 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08279539 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064808955 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067864562 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076839191 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068254356 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089162148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089095138 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068533411 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075962276 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067406635 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067014612 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066986213 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090100524 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069039045 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066516203 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070984664 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069543904 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065547933 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065784343 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070176858 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064878723 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067879812 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069602496 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069792328 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069069442 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083135396 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068796556 seconds)
  done (took 8.777196942 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06885488 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068215165 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069561001 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068071418 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068325714 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067908992 seconds)
  done (took 1.927136407 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094779667 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069922172 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08103197 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072769014 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105058458 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08732586 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08769395 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079232093 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084344308 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079297091 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087333114 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088431618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093630067 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073289707 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086858536 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073167843 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087329224 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076397323 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078495083 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073647704 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087022131 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073283144 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073076959 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081942748 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076021323 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072327985 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067665258 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079008698 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078746046 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079047928 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072749218 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075974245 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070959565 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078498328 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087074111 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070736341 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072210106 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077511045 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072769802 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075825625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088295338 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073077574 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075198177 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077345935 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079010453 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070723307 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077822819 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076567569 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086729189 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077584148 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077030915 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071631561 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07564423 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077331785 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070857363 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078857782 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077366331 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086831008 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072518362 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070780916 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069125403 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075513046 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07827755 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07545097 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079312416 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077213817 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07097745 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072627006 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072899541 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072174792 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077075399 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068924377 seconds)
  done (took 7.107586833 seconds)
done (took 28.145940413 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544791468 seconds)
  done (took 2.029215719 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603124692 seconds)
  done (took 2.110909248 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.030179432 seconds)
  done (took 8.535705525 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394092578 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484547258 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695275852 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130935605 seconds)
  done (took 3.260507728 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.681241749 seconds)
  done (took 2.199475387 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209121264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197998647 seconds)
  done (took 1.936499454 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376445135 seconds)
  done (took 1.881769341 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.111027383 seconds)
  done (took 2.618632293 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26436131 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163863137 seconds)
  done (took 1.940510414 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464544945 seconds)
  done (took 1.977242456 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.802778018 seconds)
  done (took 6.320248326 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213179889 seconds)
  done (took 1.772444429 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241009122 seconds)
  done (took 1.756574124 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.712670415 seconds)
  done (took 3.22575119 seconds)
done (took 43.080692316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080276704 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08127362 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080634885 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078141736 seconds)
  done (took 1.819462713 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076686444 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072915538 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076798975 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072371192 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.0763458 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072806609 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074634093 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076970197 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072365502 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072880696 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072117505 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071952418 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07459456 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074579992 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070650754 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074502689 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07555139 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071912302 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075381733 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072348039 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070880003 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074793319 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074762998 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071787467 seconds)
  done (took 3.284894202 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077832685 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07437362 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075142366 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071691442 seconds)
  done (took 1.822105981 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077492805 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092820383 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088979888 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07752621 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092292481 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086011524 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069125941 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068862395 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072500759 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076894109 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068163991 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096194845 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08729414 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076641804 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078919962 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065855289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068363745 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086938067 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076858548 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07700933 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070088657 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076953619 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067220291 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087739012 seconds)
  done (took 3.40479068 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077667084 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103585626 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077612374 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087466268 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089808242 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064961654 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074494766 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089051782 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122496088 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065268398 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069918286 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065712156 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072605914 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065339118 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076081026 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104201036 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107592682 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068525109 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095074556 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065162782 seconds)
  done (took 3.170951984 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072492966 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069798505 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065889175 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068521867 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077580009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07314483 seconds)
  done (took 1.956490313 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068488454 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067739565 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06750681 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067037834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071740656 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067383454 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066456595 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067260996 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067899576 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067070352 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066628734 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065218666 seconds)
  done (took 2.336867294 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.179916658 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068126324 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06931053 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06606125 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070288214 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066347243 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079519637 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06759662 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090354321 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066260404 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066962209 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068178631 seconds)
  done (took 2.481919174 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20736083 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076029553 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238684374 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137461674 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112056193 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115359514 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10388118 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113893066 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144242484 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102240078 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169082754 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166808535 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107297928 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137770543 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089074349 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097473736 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156304577 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163324033 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103996221 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166635346 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144947866 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124666164 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147083264 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10172749 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106091641 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123098893 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071228574 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080393477 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172711042 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13226746 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147979942 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110979218 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09420074 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17797177 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172658453 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143782762 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134332415 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085493284 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101962937 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134337212 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200362788 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088827875 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1637416 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245614413 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081633489 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133647356 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121445643 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120707012 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108105236 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089871179 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14769472 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185068021 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138701044 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08743013 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112631148 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115058236 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116271135 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103435798 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1847533 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162145141 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128476964 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071234664 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099582584 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15537526 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133175091 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108938359 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126818847 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093327623 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134081254 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154457527 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118604893 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144742843 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129054885 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088840525 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119317425 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141169825 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129668569 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171034181 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125030789 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073178679 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125732207 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103936272 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081365324 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139863028 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075192034 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176208752 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098869474 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106382854 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112852967 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108573338 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108874247 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162787602 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284794163 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10544302 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065561995 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105860748 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120960942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148139583 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087908241 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109798824 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117779762 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078600012 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141225608 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075807365 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123231638 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074373715 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12530861 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132865138 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074779597 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12172641 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10092721 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100560268 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134622537 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160652664 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089375189 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08235315 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169492695 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123344781 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104969544 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145562789 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156480362 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099362213 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103086483 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149754778 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180296683 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088987519 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163706115 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107390983 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083804517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087360314 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124543153 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112506417 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121995328 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082035317 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119103684 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169646911 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074950771 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094971178 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134031722 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079302546 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080975498 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10350532 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100896139 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094627001 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099919689 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104430316 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138097209 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124272284 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104580472 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124128732 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096844462 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166302294 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086694866 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098252387 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101274326 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068114906 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132880354 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15248721 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077414886 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159969926 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120514779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102563794 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115923843 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0813614 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136218511 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076359411 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068404825 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139876529 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107740629 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107086826 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146926588 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101770303 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123858426 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116485113 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130859514 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128323315 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125464187 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102649996 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086189429 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109250277 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123619414 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071657551 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088723961 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076577196 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099424928 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090808842 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079495367 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134948662 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117600969 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096127588 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106337255 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091982199 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140052533 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073014059 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121839887 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113399607 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090554321 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.143977423 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144291972 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123638113 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095522217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137415377 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067577788 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.32449241 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091736345 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126613287 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084870515 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087887991 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119842828 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149490602 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132905317 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140808664 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113279135 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123216854 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155610257 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069729482 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116990622 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149804209 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122985222 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102839477 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090497793 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09992617 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143912527 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10905519 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185083353 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114837648 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12690954 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154550436 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099319184 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08002797 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103560282 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136696001 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105542686 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146195417 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100059162 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088442814 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110867184 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074168137 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101028638 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128096724 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120600473 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139032905 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11535189 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133756201 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076970358 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118349628 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120737034 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123668899 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063993715 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1204462 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161228544 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094064981 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119193924 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15427977 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079308574 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124110691 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323027063 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147765425 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085161981 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110961728 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118388515 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128128108 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120602119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14024724 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107983566 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134667513 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110814164 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085831516 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088226494 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097056031 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104852834 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094624337 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108504455 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113857642 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09431425 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132423934 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102973777 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10893291 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118233376 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096291273 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089085606 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096528256 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175183925 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119331212 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171938349 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09847758 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146124577 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166127921 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074506917 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079117593 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077906486 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14061643 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083861729 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131756038 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097959336 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105654593 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125114336 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142944325 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094770188 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068385282 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108494876 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135161063 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11281476 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098535343 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103794537 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163778752 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100099078 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079199089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113770137 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105033641 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102729826 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319213973 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062434065 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098416034 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075643187 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080966324 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128065299 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155080472 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081334262 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101545694 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120062458 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111566435 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128059599 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102905369 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09910893 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114705322 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151610919 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129564422 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089924787 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112666486 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130370348 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157172897 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106178509 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095925114 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17202825 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152436614 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161332059 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088732751 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114757865 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114856178 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108267487 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140536959 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083041272 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165204371 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081858482 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137223627 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105091686 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090861254 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130743685 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113981892 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08819958 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149127287 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117927281 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08303755 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077766794 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118319403 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121113127 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10672138 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075174558 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139334403 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072784438 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132932507 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169498589 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223452535 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10445187 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096968348 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080275629 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108710049 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102699322 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090142758 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096569728 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174783787 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087896418 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151333148 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142756625 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114554971 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137925601 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100459349 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636029897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077850402 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1525227 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116435661 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174909924 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097803703 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117845402 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109431255 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124191189 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144919668 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105512063 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173713604 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132893524 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116229827 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082570912 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102609573 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103220178 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089069914 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105308578 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113760776 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11704247 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093636317 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116382393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123836544 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082210299 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09559593 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156566414 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118045666 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14588726 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141734341 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084870988 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118388888 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138733411 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079786149 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122928393 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153815292 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106381913 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238865862 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080227125 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102560312 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170558317 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073014124 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163585753 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120403796 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10954014 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114252777 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115032368 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132473074 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108837622 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121557496 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093769337 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111273819 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112761355 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081611179 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077120559 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104102085 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112308028 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096916556 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0986816 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09576467 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15206992 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071879833 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095960505 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10370767 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145909075 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175830256 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087786045 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082658175 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119700871 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113732345 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113268391 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121063388 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079457434 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08230765 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082416381 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076764788 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108182532 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112502398 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104516615 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111656975 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165411744 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082474955 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222009228 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096124266 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105026916 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069520548 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078409375 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096324389 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097962142 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10872943 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100115005 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169189676 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093867125 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.0900918 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093761062 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.213976826 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082724458 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129402464 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112407646 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120001012 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099155288 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062184751 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11013732 seconds)
  done (took 58.819590789 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107230593 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08155997 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09614222 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149180564 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122405717 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212227516 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157547867 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198823384 seconds)
  done (took 2.777732722 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068188032 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093174529 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09936494 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082987693 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066446308 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068668749 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224994118 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080504685 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066651452 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087545439 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079383479 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068978664 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423129253 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068316935 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070010922 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062396107 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067384215 seconds)
  done (took 3.424008613 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364258405 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601803287 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373053564 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073132386 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.842163855 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092551718 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.024421134 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129588922 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072988046 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536742194 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702226176 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124627923 seconds)
  done (took 18.595895359 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077005756 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070706735 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084335594 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084312298 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073600566 seconds)
  done (took 2.113269852 seconds)
done (took 107.560165038 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080982922 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406188776 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054087317 seconds)
  done (took 2.140571539 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08332759 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086387904 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.0844936 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083346523 seconds)
  done (took 2.003980274 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074799683 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076554714 seconds)
  done (took 1.811257046 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225467275 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158365398 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087138781 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081897175 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078234841 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078494374 seconds)
  done (took 1.902744016 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071967762 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07539064 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073150433 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076408174 seconds)
  done (took 1.958173571 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076455405 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052430746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055007703 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055910441 seconds)
  done (took 1.899095823 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086517669 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079102657 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078710044 seconds)
  done (took 1.902847164 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101164579 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085999506 seconds)
  done (took 1.846237927 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081150771 seconds)
  done (took 1.741478824 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099190818 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114379966 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131516543 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110866315 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139474411 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109717745 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086086947 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087559663 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077758099 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08818466 seconds)
  done (took 2.704758951 seconds)
done (took 22.113588718 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078452808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36246537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361423051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090102282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667616085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357157575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.963791892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092791346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114115279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067669812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084638648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648697318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989478538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319870026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977197593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414110763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64956125 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068609776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068035435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068120129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948918587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068067843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068047793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068977662 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648814354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371857795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068469185 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414350094 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068643411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0701093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355647539 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068650737 seconds)
  done (took 16.31252319 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071285712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118445756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07335304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083949507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071268762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07016435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.0715122 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069634929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12022213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068284581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084871014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067916801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072025845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069058809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087521289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068703273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069354199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068835169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068891357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069184318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08666133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068402914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068862585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068917722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068679348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079980969 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068817821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06825984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068789838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070570724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071539969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069803084 seconds)
  done (took 4.078614292 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116055124 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126281554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074845335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103269461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113315108 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070641048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143851221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093171927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128206084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068523507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085035756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068551461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101426964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069309522 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088154376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069206515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070035243 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069313545 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068900544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069459481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088091021 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068793834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069191847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06945036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06914789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082677233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069135607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069260683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069068514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071133828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071821401 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06929599 seconds)
  done (took 4.336997097 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072807133 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076163366 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084433266 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084002358 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070194843 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072956858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0737286 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072464877 seconds)
  done (took 2.284286224 seconds)
done (took 28.677962628 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079823219 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069483519 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073187072 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081108294 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074029209 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078966518 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067618745 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075076968 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072687375 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073272683 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075440314 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067899814 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071480638 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067916047 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074218227 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068063612 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07985873 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072183593 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079573014 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079819113 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070503539 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073620801 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074409956 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079397651 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079701838 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079418475 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07842347 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073448169 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069800353 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070945239 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077084042 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083893571 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069635415 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079929109 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068283398 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068438692 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072067828 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068272369 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079951873 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077058425 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070320935 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076848719 seconds)
  done (took 4.781415431 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087509071 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091382019 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085365879 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064691478 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069443343 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065819166 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089852522 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062316095 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060304046 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.0882284 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056871101 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059906476 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062725605 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054284433 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059741746 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057042423 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061764972 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056469514 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059569277 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059950966 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088805747 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054732278 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077765551 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063354203 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058686351 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06211243 seconds)
  done (took 3.441389725 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074871779 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084971305 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088981996 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12678407 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104439387 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077605642 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080543837 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092583501 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085842884 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067456022 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071239604 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094036811 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08849637 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074211779 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068023872 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085183112 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08264075 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069518488 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074506395 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092790396 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086109343 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085518746 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093251985 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08130969 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067590409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070342648 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071970239 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081461311 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072468703 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077185109 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071669545 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071190366 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069555706 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079170509 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072019585 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069416075 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090574585 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077523347 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078046648 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068572049 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071348039 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068742662 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091704312 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126513297 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067263823 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074989792 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.087007271 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076867125 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068228808 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086536735 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07914812 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067447466 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070995857 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067059743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068156025 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081221859 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069766556 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070565259 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076756135 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070922555 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089398401 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071823719 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083081552 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067891898 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075447344 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067095648 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069046237 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066967141 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09272421 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069749341 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108335613 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069059028 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068777554 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076816213 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075111323 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074023448 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067893116 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082986955 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077939916 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071722417 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076721038 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071382258 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07105658 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088036414 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069988311 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069241999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069042429 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074265635 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070808791 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069437917 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080878574 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068054885 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07094911 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084574019 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067644309 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069060547 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074254728 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072763206 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06714125 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079128283 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07278327 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068723507 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076969605 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06801307 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070796723 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079766306 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074106958 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066903977 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0755007 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074557197 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068892208 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069223032 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070738082 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069795108 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07620143 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074280836 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072578369 seconds)
  done (took 10.667706976 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163030365 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154430575 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071514479 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145031224 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076760152 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07940913 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147769509 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094544259 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068155979 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068945729 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06924952 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113117893 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106685471 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116621835 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079177359 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068343195 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08379652 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114620904 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150587678 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143916192 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084432077 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07743272 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070726174 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069689018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071111192 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078984205 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086183842 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077331376 seconds)
  done (took 4.443453117 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081254718 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096733433 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075085259 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089924342 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091872975 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068496333 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070531337 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070464311 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08097736 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079798734 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068396776 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073889569 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075454725 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071964781 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069884395 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075627931 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075793122 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069756219 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071734831 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073562192 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078736973 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08135967 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072058873 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068096113 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074794527 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06850136 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067282801 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086910288 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06899543 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090930328 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066277843 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07556773 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082260582 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069324578 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068335383 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068450768 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068420436 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068188158 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070354457 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066835909 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0675828 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057962339 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067485024 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08091388 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078484618 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05722329 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073249551 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073453252 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07344285 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06605462 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071287773 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070955722 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07133474 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075335556 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07303194 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073157512 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069687053 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074649522 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076124586 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068151054 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065025239 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066964918 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072518907 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066956407 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076317469 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073070252 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067406463 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068292068 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070212509 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074813939 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068331373 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071472587 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066364691 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070196097 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073244214 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070217018 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069458556 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066961193 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068271856 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06866473 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056111115 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068123558 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054289183 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071201449 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06675566 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06746827 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068243967 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073288145 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080760098 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069365279 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073980858 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069364851 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067448777 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071080031 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061017747 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070994538 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083270841 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083906007 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068146508 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066251737 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08247821 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072699036 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06773275 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05667365 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075466417 seconds)
  done (took 9.260255741 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08908668 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070018424 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083598834 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091058691 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086954376 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075381248 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076593873 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069827606 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082235616 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074482081 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077110143 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068976585 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077554709 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077480679 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070365242 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077430358 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073129885 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082985927 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082371725 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068863205 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076641014 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080896 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089875759 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080942072 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079626797 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080279932 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090651347 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072618766 seconds)
  done (took 3.929920369 seconds)
done (took 38.196994703 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.758118124 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.936570601 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.752178525 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.112209433 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.827682276 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.961343914 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.80862491 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.757058301 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.899153897 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.789170849 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.032068924 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.81630393 seconds)
done (took 65.141268163 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.774229453 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.890554902 seconds)
    (2/2) benchmarking "String"...
    done (took 2.018012694 seconds)
  done (took 5.595736822 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.047305912 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.327289875 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.979272565 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.742689609 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.749421302 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.978843533 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.54589949 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.278644882 seconds)
  done (took 30.287745842 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.818062981 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.968728523 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.396044216 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.42954815 seconds)
  done (took 15.346522766 seconds)
done (took 62.813112168 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.755081846 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.75655449 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.758496415 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.72750391 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.804019495 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.760185854 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.159468149 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.0066966 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.743216033 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.736811268 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.746034027 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.172741125 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.750141413 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.098015848 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.744392187 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.746445026 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.815371721 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.247243604 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.899928693 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.751526309 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.749561495 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.94413992 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745898138 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.749699192 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.778043443 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.749555303 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194383098 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.759049628 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.359886184 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.749595239 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.778110589 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.275756051 seconds)
  done (took 204.700686311 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.747881055 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.68590679 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.775071754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.764223976 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.128597677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.949802985 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.874675722 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.188620305 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.752298364 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.770678244 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.982564965 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.747035859 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.998132448 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.743810673 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.778022806 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.852155458 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.944567055 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.999464137 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.779010302 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.933462561 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.748614435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.8236236 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.762233816 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.952275198 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.786702723 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.834930199 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.76956474 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.762765094 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.954554472 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.917364273 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.768394703 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.769322672 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.931547887 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.629212833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.758186913 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.761638535 seconds)
  done (took 169.01733377 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.912898836 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.750041989 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.749767888 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.749218715 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.754681634 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.750016588 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.869499346 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876843063 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.208401629 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.877655418 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.800750555 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.580763498 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.750093901 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816802264 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.763039414 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.751328104 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.76581215 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.778686276 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.749179258 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.748991034 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875398147 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.762832552 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.943740485 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757499248 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.749338516 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755387213 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.119900944 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750737739 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757312629 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.992460188 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.75066429 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750734152 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639291716 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.105471292 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840832736 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.751386034 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75580891 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.750355524 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.972314157 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752104976 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.751383478 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.753396824 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.749823167 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922482071 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.751266919 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.873112939 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750583571 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255069668 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.751056126 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751061313 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.417905808 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.920028182 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.531394918 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.751694054 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.752090847 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.754407658 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.75148402 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751445611 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.763827802 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.379690916 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.828856194 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.754284095 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.755838806 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758187198 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.752109475 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.825478618 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754638507 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.364685607 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.812685943 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.969947854 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.751966959 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873976976 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754567086 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820685782 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845967175 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.75292305 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.75255975 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752409781 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.754224393 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.834212722 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.753309553 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.915004022 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761729576 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.754881531 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.80599555 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.822437825 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.753190831 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65255438 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.755590586 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.752423139 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.069797137 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820220086 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.753993923 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.754540594 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752979216 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.890845703 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874899289 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.543039554 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.756259398 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.366843874 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.756728679 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.907947554 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.755078423 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.75442826 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929060337 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.756724943 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837677462 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759757412 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.756272409 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.75459853 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786677064 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.754054346 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.815833631 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.754528482 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.125241949 seconds)
  done (took 400.397610233 seconds)
done (took 777.768762293 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.42338689 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.383130303 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502455213 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.40569412 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.376839667 seconds)
  done (took 13.787641013 seconds)
done (took 15.481716025 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.843299522 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.845899313 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780046514 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.844370329 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774998127 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.844448901 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.824736459 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.78059068 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.811367352 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.78042654 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.813554864 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780087252 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767736289 seconds)
  done (took 25.187800477 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.993676084 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991043194 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830896323 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986951222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80569661 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.994397962 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91568674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90996874 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.908772927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773431061 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772072687 seconds)
  done (took 22.582118727 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.994995339 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990947699 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.835500476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993511588 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807315836 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.993574679 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924240839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.912085052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912832412 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774914302 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770258947 seconds)
  done (took 22.60857903 seconds)
done (took 72.073205876 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.765364723 seconds)
  done (took 3.463344682 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.78686401 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.92551155 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.771513275 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.76810257 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.764725464 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.766558976 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.768844743 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.765154649 seconds)
  done (took 16.017163519 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.762889885 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.763701566 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.763673119 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763434854 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.762995967 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.766055051 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.76565661 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767788368 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.762667706 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.765258689 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.766146741 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.763560972 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.767404845 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.767933226 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764413057 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.768932386 seconds)
  done (took 29.941519658 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.766854431 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.765343865 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.764598673 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.7641384 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.764634884 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.764651434 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.765059572 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.764663291 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.763617197 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.7639957 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.765497549 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.764063915 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.765178102 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.765055228 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.764721327 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.76528267 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.764614467 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.764233745 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.769862557 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764974082 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.764772053 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.76445598 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.765926693 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.769646417 seconds)
  done (took 44.068571252 seconds)
done (took 95.187750438 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.658501389 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.155878202 seconds)
  done (took 8.514979535 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.768856603 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.768188668 seconds)
  done (took 5.276357673 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.768008472 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.767964494 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.769662484 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.767948754 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.768133733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.768427334 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.767764344 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.767878111 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.769749805 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.769091903 seconds)
  done (took 19.385904398 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.767796335 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.768470542 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.767445761 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.768603201 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.769187621 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.765983164 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.768279613 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.769342446 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.769344374 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.766432139 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.769426738 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767407568 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.76958162 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.767782713 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770760556 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.765733331 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.766255128 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.767166332 seconds)
  done (took 33.526606693 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.770388366 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769903606 seconds)
  done (took 5.242182171 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.766122643 seconds)
    (2/7) benchmarking "second"...
    done (took 1.766969885 seconds)
    (3/7) benchmarking "month"...
    done (took 1.76746285 seconds)
    (4/7) benchmarking "year"...
    done (took 1.768628036 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.766791051 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.767156851 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.768609486 seconds)
  done (took 14.074340531 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.770273519 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.933505327 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.000211377 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.423012889 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.771402726 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.774352054 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.746698387 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.774240067 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.774933106 seconds)
  done (took 19.671581504 seconds)
done (took 107.392460088 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596653371 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.766189124 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.123506848 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.822475243 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.828295544 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.106531671 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.808672826 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.977241036 seconds)
done (took 42.731253184 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.782135348 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.313458607 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.341428401 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.97923203 seconds)
  done (took 12.337900509 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.750004049 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.28938481 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.803197683 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.360790892 seconds)
  done (took 19.921915453 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.133336565 seconds)
    (2/2) benchmarking "read"...
    done (took 2.13842716 seconds)
  done (took 5.981220629 seconds)
done (took 46.727993789 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772463706 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.770665312 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.771486729 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.769460633 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.7715025 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.76903844 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.771150855 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.77223574 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.769306294 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.772581459 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.771831153 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.771874629 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.773989464 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771551845 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769637601 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768924062 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772812207 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770730342 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770604376 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.769253229 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770168857 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772526782 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.770384777 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.771398958 seconds)
  done (took 44.210688672 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.773771753 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.771334897 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.772844047 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.773802352 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.770517467 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.772805391 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.773444807 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.770189254 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772768228 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.774651906 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77126062 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.771534437 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.773074713 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.771840001 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77391912 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.773717578 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.772951785 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771168183 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77435095 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.771293157 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775300429 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771400406 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.771811748 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774767889 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.77143147 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771367408 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.77506419 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.772760337 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773747585 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.772227276 seconds)
  done (took 54.887789193 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778596168 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782613651 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.774024879 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.775231315 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774184734 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.775435717 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.775910136 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.774527235 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.775381052 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.774397023 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.774795426 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774691303 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.775681846 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.775155339 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.77524903 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775151676 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.774344598 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.775010774 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.775541836 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.775580593 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.77474713 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.776606259 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.77539823 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.775159121 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.775361021 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.775625859 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.776158974 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.775205765 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.77555198 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.776146534 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.776358082 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.775888545 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.776791562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.775692114 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.775999707 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.776851059 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.780793132 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.78375496 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.777190668 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.776699817 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.777131838 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.776153599 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.776056061 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.776844507 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.776050712 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776259911 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.777481448 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.777435768 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.777328726 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.778605776 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.777044269 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.777291678 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.777819785 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.777074507 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.777475874 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.777030321 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.776956211 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.777748678 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.777675464 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.777423427 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.777006417 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.777210407 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.777661371 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777279328 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.777392171 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.777079361 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.777640815 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.777446985 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.778109381 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.778379735 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.77721962 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.77912463 seconds)
  done (took 129.628273807 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.777248923 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775683686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.775967322 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775620464 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775258142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.778017147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.775318484 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778184037 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775864442 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.778764679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777525046 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776203585 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775902347 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.778902389 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778856799 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.777034864 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.779078759 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775471177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.780797955 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.779731116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779317542 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.778219771 seconds)
  done (took 40.813257353 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778304887 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778224209 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.776349406 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779658275 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776489552 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779644172 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.778796257 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.780622038 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779002465 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77683695 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777289957 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779975815 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77781231 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777239484 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778302997 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.779486228 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780059595 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777788232 seconds)
  done (took 33.723757263 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.7769501 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.778330733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.780682767 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777400708 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.77767357 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.780764871 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776510124 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.779613891 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.780209695 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.778072314 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.78089252 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78104152 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.781037731 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778454554 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780985435 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.779311524 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.781368156 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777269862 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781285454 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778268962 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.778774221 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780394923 seconds)
  done (took 40.85799289 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780787184 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.780169684 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.778998052 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.778257786 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.778817404 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.780950109 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.7812451 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.778956568 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.781874716 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.78221833 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778652648 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.782737814 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.779470261 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779751439 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.779473401 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779965021 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.781629474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781161333 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782469483 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.779483736 seconds)
  done (took 37.321167189 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781973637 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78224712 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782636008 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781580725 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782689238 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.781625737 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783014122 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781503093 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782057766 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783099731 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.783735125 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7822439 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782273921 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782826059 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781965537 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782582782 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782601876 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782744126 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782791523 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782970534 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78378092 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782948495 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782433335 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782993089 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782608508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784208235 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783007208 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783135639 seconds)
  done (took 51.630806104 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783972408 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783828812 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.780988487 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.781879474 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.781585283 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.781171021 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.781930421 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.781818617 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783904849 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78111301 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.784920097 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.783447207 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783514822 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.78554371 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78477985 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.784370721 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784336809 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.782957196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783080739 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782634573 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.785195154 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785640995 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.785432462 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782356713 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782613888 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.784616703 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782871169 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783164746 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786070076 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782467886 seconds)
  done (took 55.220016706 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.80385524 seconds)
    (2/2) benchmarking "in"...
    done (took 1.802982127 seconds)
  done (took 5.324009588 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.781626234 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785509735 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.78464251 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.78233564 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78390679 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784534607 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786279682 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783415828 seconds)
  done (took 15.989637749 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.784345824 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.786736223 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.786257467 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.78629687 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.785882056 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785528842 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790460672 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.78605022 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.78739438 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.785943042 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792497994 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.793106401 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.787407804 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786968765 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.785592599 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786874241 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.786957936 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.786108853 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.786278132 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.786819431 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787144439 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.787897182 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787094445 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.783887771 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.787687424 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.794776274 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.789476395 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.787006224 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785541555 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.788718448 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.786349046 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.784482654 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.787891296 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.787192413 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.788157059 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.788341648 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793441896 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787921303 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.791861728 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7882712 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788041331 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.785894866 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.78924496 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788952581 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78853244 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.787480415 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.789265273 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.786098658 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.786497696 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.790064411 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.793439051 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786855878 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.785611353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791210664 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.788364898 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793768871 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.789462026 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.790797454 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.796895601 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.796753027 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.799534418 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.794334452 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789017143 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.788242972 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797713918 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.812502381 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793944327 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.787099133 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.786460674 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.789595239 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.794480789 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800001132 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.797340825 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.790822358 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78909732 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.789391063 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789046521 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788913999 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794640066 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.79138269 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.789264195 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789867974 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.7980893 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811718945 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.789511563 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.790338061 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.790836117 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.790921366 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.790213505 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79941602 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.791389252 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.790339518 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.788944665 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.790132889 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.790376999 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.791180389 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.789277496 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791321312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.789956172 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.792149362 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791790986 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79292594 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.799007133 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791656286 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790378179 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.795162551 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.792046131 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789263612 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.795786099 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.790809284 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790534443 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.791227826 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.796274177 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.788491968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794208236 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.798073757 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.790893279 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.792609775 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.792210657 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.791448121 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800045235 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.817660804 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.792331285 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.792848796 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.795755346 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.802942869 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791831028 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.794183025 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.793137185 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790444086 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.789843911 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.793457318 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.792548756 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.79216106 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792200024 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793057653 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.789617809 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.793248356 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.792715957 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.792656125 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.793706677 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792265997 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794436596 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.794472432 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.793024777 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794495688 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.79862521 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.793073929 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.794686679 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793772055 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.790565649 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794122705 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.79393708 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.793924051 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.793344747 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793472021 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.795068935 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.794485969 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793885387 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.79509116 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794431748 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.794021844 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796758263 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.793872124 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.797373004 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.793644224 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.791987547 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.794897681 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.794760814 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.793612191 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.795082632 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.792767118 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.796434987 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.801442336 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.795091609 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.795881647 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796746056 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794908994 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794666924 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794742013 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.796585437 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.802490606 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.795048112 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.800364275 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.796240881 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795442593 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.795723406 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.794569083 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.79341783 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795918844 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.799208814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.805134479 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809263976 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803755134 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.797148164 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.801045368 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.797699835 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.800471239 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.79958011 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.79837847 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.798543219 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798083589 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797368797 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798399501 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.798702565 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.798168736 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.796332706 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.797948126 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.798775347 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.797768869 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798412217 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.799659715 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799738686 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.796053235 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799514515 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798106913 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.797279212 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.795802953 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.796543024 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.796510438 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.799706019 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.798274115 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.802898799 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.796483015 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799319686 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798726414 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.797697957 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.795992298 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.799535452 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800487681 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.798585243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803983608 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.799613263 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.799751499 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804396159 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.798033742 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.797400078 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.801142055 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.799338603 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.797171601 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.801414581 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.807776782 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.800278053 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.799914804 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.799433665 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798583913 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800864122 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.805251877 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797156759 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.799068654 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.801304404 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.80049885 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.798278611 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.800696218 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.801114521 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.80016525 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802041944 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800706244 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.800685181 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800987909 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.800229082 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.800455244 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.801126902 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802564839 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.808769597 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.804817789 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.800128589 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.802112332 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.801393261 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.805006264 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.800979321 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.801096559 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.800336017 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813531567 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.808566953 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806718907 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.802604467 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.80144604 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80572113 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.802019431 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.805498045 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801451244 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802325962 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.801233237 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.800233565 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.799166504 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801304648 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.802837062 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802089033 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.802340742 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.806794108 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.802369182 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.802019045 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.802705473 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.801590801 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.803456728 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.80113072 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.803178203 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.803310202 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803574729 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.801373379 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.802534542 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806921433 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802038587 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.803407164 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.80189993 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.8019299 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.801292339 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.803124478 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.80399388 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.805410048 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.811584147 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.805962658 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.811653726 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.803901921 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812141949 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.803265254 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.806727356 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.811630304 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801089678 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.802768871 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.803583162 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.802638372 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808916398 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.803841964 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.804553552 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.808180288 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803902251 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.803757597 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.804325624 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.804221958 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.804410036 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.804500474 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810552554 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.804552968 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.807506614 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805631544 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.801837542 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.804539492 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.803828886 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.804181458 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807931668 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.805282668 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.805726474 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.804796165 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.804363765 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.805439588 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.80548011 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805678068 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.803144493 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.805350597 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810568422 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.805002937 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809699039 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.806032233 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.812190006 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805813054 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810993128 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.806363237 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.806334625 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.806530682 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.807563871 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.808352646 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.805887467 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.808459249 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.806833998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.80673862 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.810070364 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.806123528 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.80741582 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.807290568 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.806846889 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.806488087 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815725481 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831904728 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.807661196 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.810852316 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.804976916 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.808290542 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.811715829 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.806605733 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.804573709 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.810546775 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815948948 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814244347 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.806731514 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.807185753 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808054676 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807337956 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.806794738 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.807203611 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.80649408 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.808771748 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.807629612 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.807776946 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810237032 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.807679027 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.807369512 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807857763 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.808699791 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.816285138 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.807030675 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.808808465 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807014402 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.808697006 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.807656893 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.807335415 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.807902638 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807828677 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80912607 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.808368402 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814876085 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.814340001 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.809847197 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.80741366 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.80798892 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.808979706 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.808763018 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808354258 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.809770361 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809030344 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.808487488 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.809701072 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.808925394 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.807652108 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.809750704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808629194 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809778853 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811633164 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.815690443 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80953636 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.806551695 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.808851049 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809877102 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.807099578 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.809738537 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.816433533 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81162518 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.819305391 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.816668241 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813152605 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.809670633 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812506394 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.817314555 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.807871892 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.809407881 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.81043251 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.810475479 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.810279119 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.813220799 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810309364 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.816165711 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.809646208 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.809419918 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81717321 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.811289799 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811055274 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.81212135 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.81445024 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.811074338 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.808685377 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.81277911 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.810128396 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817392851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.812470146 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811338925 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812311984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.809516399 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.811954135 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815719669 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811982355 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.811634811 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.809231715 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.811088857 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811283472 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813083358 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.810250618 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.811070473 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.812229096 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.814611808 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817945189 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.811372386 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812978743 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.811815904 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.813066474 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811664877 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813070492 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.811058247 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.809838173 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.812015401 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813646746 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.81265237 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.814559234 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.812052244 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.813028464 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.814108103 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813390957 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815470907 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.822322963 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.820212601 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.810384404 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.812060687 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812839511 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.814914852 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814559159 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.813751139 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813230693 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.813479618 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.813952237 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813696885 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.81370027 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.816727308 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826990934 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.813958941 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813939588 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.813399142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816462193 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.814863117 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.811271156 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.814745248 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.815082929 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.816556779 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.821181885 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.814066457 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819505159 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814276687 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.814619462 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.817713539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.817020568 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.821739752 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.818518225 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815424576 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.815195775 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.818455353 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.830206385 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.816126407 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824092697 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.846329666 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.816493902 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.816678611 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.815998163 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815394457 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.816427032 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.816287709 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.815333084 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.817171676 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815423502 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.815519412 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.816431852 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.82092105 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.816574379 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.81600815 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.816973518 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.81535103 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.817355201 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.81364833 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.816396509 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.816641336 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.816747297 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.816515472 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.816481361 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.817080327 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828251616 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.825755859 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.817718638 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.816592768 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.814622584 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.819865094 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.819865192 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827493687 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.824700859 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.816895216 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.816863403 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.81848386 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.817345313 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.815113982 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.817501972 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.817360905 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816911326 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.814765271 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.829694545 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827430568 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.81963743 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.816950576 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817568601 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.818618807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818055645 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817840437 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818348793 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.818581684 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.81820405 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821514198 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.817675849 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.818303879 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.820645593 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.827045849 seconds)
  done (took 1076.688776312 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.816513605 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816898468 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817636439 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816170709 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816998628 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81745532 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816351576 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816358681 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.819560818 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816990514 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.816876032 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816759492 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816900456 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817346673 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817221416 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.81644748 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816210291 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816478998 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817053188 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819007394 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818135552 seconds)
  done (took 39.9096297 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.819922413 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.817483581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.819818111 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82092051 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817432153 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.819298872 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.818706193 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82002684 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.820383479 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818084486 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819948554 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819728453 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.817528181 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.818945117 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818711319 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820069272 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.821766394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817431328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.820522687 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819441085 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821300469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.818545834 seconds)
  done (took 41.778735885 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.820073196 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.823901632 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.819352493 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.818751653 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.820930939 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.818324599 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.821084137 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.824050994 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.820791916 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.821094297 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.819640611 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.822426141 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.829107407 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.82671878 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.822823119 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.821882082 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965375035 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.82086985 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.824132106 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.821106758 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.819889951 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.826183837 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.819268665 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.820592072 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.82062392 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.821608298 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.822260447 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.822880729 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.822349959 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822927186 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.825463598 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.822195901 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.82060022 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.823495089 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.823823855 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.823225691 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.827619746 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.823143214 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.82133856 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.824000476 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.832705184 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.844680383 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.822570131 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.827975413 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.823504671 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.825089785 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.825700279 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.830021135 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.821299382 seconds)
  done (took 91.244054453 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.823698295 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.825422839 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.821581886 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823940996 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.824538256 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.824091794 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.824764535 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.824497584 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821644236 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.82127633 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.824469259 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.822060836 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82285406 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.823408206 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.823956006 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.820658118 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821048709 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.82142011 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.820992043 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821647705 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.82147919 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.824488479 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.824768819 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.82270349 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.824459092 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821888993 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822263216 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.824940271 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.824083753 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821865741 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.824708653 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825135352 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.825443271 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.822922215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.82325819 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.824642417 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.825062079 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.823167242 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.825769867 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.825275632 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.825442355 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.825481669 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.825338723 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.825341492 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821886264 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.823905716 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823341749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.822758774 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.824426974 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.825285165 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.827253268 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.825070868 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.825133917 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.822968092 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826292395 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.827912156 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.822890126 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.824628187 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.826647003 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.825123743 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.82385066 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.827104176 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.824245451 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.826683873 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.826607623 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.824686868 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.826042924 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826424207 seconds)
  done (took 125.796395904 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826684904 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.826726145 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826177746 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827975188 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.826316598 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.826223594 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826454291 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.827802263 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826550645 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825629769 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82574212 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.828057547 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.826723997 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826998269 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826625486 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825410663 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826403031 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825821887 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.825514092 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827225141 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.825793948 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.82528123 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.827681144 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827436126 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.827125422 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.826684592 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826157077 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826443923 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826467087 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.826323975 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.82751876 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.826415259 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826668136 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.827248119 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.827834434 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.827784546 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827382172 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826697373 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.827467612 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.827901504 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.828389413 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.828614885 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.827123868 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.827953429 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828788193 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827706909 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827483084 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.830501284 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829255205 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.829012869 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.828574466 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829953062 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83022251 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.829197852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.830391576 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.830682352 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828978765 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828633984 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830142067 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.828282226 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82935432 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.830534081 seconds)
  done (took 115.069838151 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828982802 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.828825771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.827454958 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.825841297 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830286485 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.827506742 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83083811 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.829964379 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830585222 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.829367652 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830270208 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828815688 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827037161 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829519891 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827264669 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828545647 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82794848 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82854314 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830711121 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828482644 seconds)
  done (took 38.338046151 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.829349309 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833534429 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.829337257 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829313758 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.831558688 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828554584 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.831494876 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831075825 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828232569 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830650415 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830396238 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831075508 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829099585 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829650125 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832051881 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829301395 seconds)
  done (took 31.047117154 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.829320112 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.832085743 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830502269 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.830742521 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.828351224 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.829070902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.832394718 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.828655102 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.828692692 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831741385 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831590758 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.832248671 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.832417366 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.831622144 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.829593842 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.83371497 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.830171641 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829679403 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.832158657 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.831713327 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.830092299 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.829612212 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.832948368 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.833272503 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.829787821 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.831429156 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.830631663 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.830583244 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830961291 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.833452733 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.830841963 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.832038108 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.830513654 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.832297527 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.833549354 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.830223889 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.832902407 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.832183673 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.833821335 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.834648144 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.833126389 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.831209321 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.833261962 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.833244329 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.83132855 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.833393701 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.8306386 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.832326546 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.830610056 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.830970997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.834748375 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.832903456 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.833736485 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.834155253 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.83484455 seconds)
  done (took 102.506960891 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834355924 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83422978 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831980062 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.834324431 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.834690037 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.832590165 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.835424238 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832470048 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83303658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.835314966 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.834672909 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836775835 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834128041 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836551917 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.834337211 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836796243 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.834062483 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.833710465 seconds)
  done (took 34.785506252 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.832868228 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.833573121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.836456702 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.834026482 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.833637312 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836890851 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833960129 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.837390709 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835985131 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.834943755 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833650372 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.836412056 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836018867 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.837183483 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834597592 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835151043 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.836977448 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837879094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.835122243 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834492165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836663158 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837713229 seconds)
  done (took 42.149850562 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.835999393 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.83603526 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.851460751 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.854112925 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.857336272 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.872692955 seconds)
  done (took 12.875891042 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835827222 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836723222 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835092901 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838522478 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838232817 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836707232 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836140248 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835858038 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83794544 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8369069 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83723399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839653149 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839529847 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835701544 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839121013 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837848372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837196659 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836519469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836680075 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838347816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836638258 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839206416 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836016749 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837565557 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836491298 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836780322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840263149 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836558536 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836116312 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839716338 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839666583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836056697 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839637581 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836908253 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840003166 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840201319 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837559725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839685404 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840093032 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836774905 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.840420491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84040486 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839800678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837487684 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840438634 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837991975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839164228 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838119269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838440422 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840914569 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840417797 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837500756 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840081422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841143251 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841321437 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840126423 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838844571 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839189344 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842184976 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839420918 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838083857 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840788983 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838604013 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839129681 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84151274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83937192 seconds)
  done (took 123.110244321 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838746293 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839126668 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839867833 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840949989 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839327493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839073702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839848358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839348519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83921226 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839165721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842510031 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839288024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83919005 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839604405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840108047 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83944141 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839745787 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839449124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838402621 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843272573 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839958161 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840169322 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838508294 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840365773 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839713966 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842161061 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839349991 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839544948 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840155969 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840264033 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841207896 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83945968 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84044202 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.840656715 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840192378 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841048668 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842280968 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84104683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840815224 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843151371 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841254197 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844931024 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842051763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841429668 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84256811 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841551412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841888686 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841345331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841114748 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842722509 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841612552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842428712 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842707414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842328022 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84205609 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842021712 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842158782 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842817207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8421551 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844996634 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842822224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842437925 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845802313 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842573399 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841620559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842696839 seconds)
  done (took 123.285330851 seconds)
done (took 2509.897464498 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.857547591 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.825602387 seconds)
  done (took 15.459452652 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.005297137 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.955708458 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.839526903 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.867701556 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.838573584 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.856627298 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.841100015 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.839248836 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.839287255 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.838453983 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.838822055 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.024710285 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.844048479 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.839542772 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.838547442 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.933594955 seconds)
  done (took 51.818727717 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.841748495 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.84233673 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.854710684 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.845296263 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.841962196 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.8543855 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.874643399 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.846044326 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.878137197 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.85512534 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.911867996 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.85242113 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.842469303 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.891676434 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.856361039 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.857134027 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.928890978 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.917473551 seconds)
  done (took 35.364787319 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.9194082 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.852671509 seconds)
  done (took 10.552751026 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.863666747 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.845442917 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.842308824 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.859439858 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.843237002 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.86639456 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.863083257 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.871084382 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.853239039 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.841440143 seconds)
  done (took 70.325309335 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.848602757 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.844937259 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.843741533 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.842272903 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.836472957 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.839766588 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.842873969 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.836951035 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.522653095 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.878539965 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.852642874 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.84861938 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.843289259 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.844204938 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.842609673 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.865765731 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.005726313 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.844258548 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.842017114 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.849301027 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.844546168 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.897109489 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.857313284 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.845051891 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.872678787 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.527903001 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.852184376 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.850478402 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.955458465 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.844298445 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.845046571 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.84628242 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.847090733 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.240603868 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.17427758 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.845793213 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.854112123 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.852419564 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.84392021 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.970706933 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.84556628 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.854839093 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.793269342 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.157846385 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.933093473 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.88781896 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.214430858 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.851688255 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.846763698 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875109637 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.848048132 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846691024 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.858440654 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.366903328 seconds)
  done (took 131.401022699 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.841901392 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.1377609 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993255583 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840888931 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114394875 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04561031 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844716606 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889419784 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.844485986 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044883942 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.005545912 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955339655 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844356074 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.841948135 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.841290712 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.840356038 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000866497 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911375026 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843650542 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839367618 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868980006 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050895441 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973158875 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84433188 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.864015781 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052817727 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.9639692 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952417012 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.136623979 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.840808015 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.906454943 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.843373449 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.840530618 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.83987368 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.998598397 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941071286 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931085387 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.843494511 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842376158 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.842635421 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.507934934 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04445967 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941228968 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.98652248 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096473753 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049372438 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.489703414 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.841062038 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.481544761 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004451355 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.056479235 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.048774516 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.966730744 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.846116468 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.199837286 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.841538203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841293455 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.080397346 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08564155 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946739182 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845102709 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.842896397 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841609543 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085969993 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844254431 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941702831 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846940219 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.841870863 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941443674 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.948792224 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.091365132 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060270116 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.877553199 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.142686352 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.311279895 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058268647 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.912042976 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077688667 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845799397 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841783234 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927855179 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.600624229 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.003442491 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.094950875 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.065574735 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878701067 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.482508578 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.842396508 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.038180049 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.029177201 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040432693 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086347437 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.998100632 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.050070276 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.844198227 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.843521298 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.047350135 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983176667 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848768906 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.199148946 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078576624 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.400503268 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.876060018 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140462205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979285789 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.212027973 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.47131563 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.844078469 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.011433919 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885412365 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.846186399 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843424743 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.036532499 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.657370591 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84592103 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.369477059 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.91041241 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.848390861 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048242904 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.849758905 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055472175 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849507284 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082939199 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.873222518 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879099608 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.088153856 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.088578702 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.637418738 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093467062 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092146692 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967670085 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069423441 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.442107006 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.847692161 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122797783 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849308381 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.846739509 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012814037 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848105853 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.075732576 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850121557 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076224725 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874869511 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001726054 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850541556 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.090465713 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887075132 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899938774 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852411961 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.97910294 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847858646 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.730401093 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001385328 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849437789 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848133833 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.539241746 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.846553539 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993970668 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080306066 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877387219 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917433803 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378219777 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847043932 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938396318 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876799591 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.593717219 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.849191445 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.005644207 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.823627604 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.286006595 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.847929609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089450326 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.036530906 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.851675745 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.848326132 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.591273149 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.55246457 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848026555 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.007412369 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.58159263 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.50151465 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051634551 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852623523 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977596828 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.852773628 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.928150454 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.2009303 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848667258 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.849839682 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.850068409 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.849307632 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.848975177 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.131215205 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88155749 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.37273566 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.986079395 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06862631 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.160404854 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.072891953 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.897065699 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.85504082 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09892835 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851749613 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.915755108 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.852699307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873497863 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083496977 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851890553 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062424576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.109554925 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.808702151 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902762488 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.852647572 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850313773 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.850766892 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.004124548 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944505081 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.853838137 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.852079051 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.96291841 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979705948 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.044068632 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.442281541 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.045970968 seconds)
  done (took 894.007085616 seconds)
done (took 1210.704931565 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.850573748 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853006123 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.842417117 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.852502425 seconds)
  done (took 29.188143925 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.858097078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.856091406 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.857340699 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.855592515 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.857079781 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.856437155 seconds)
  done (took 12.928293126 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.869647349 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.852423129 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.852604742 seconds)
  done (took 21.362482972 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.925001173 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.260700764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.968467491 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.299057906 seconds)
  done (took 10.241502956 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.858719408 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858206101 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.858690113 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.860479899 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.859227919 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.861432719 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.858309705 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.858891174 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.860475943 seconds)
  done (took 18.523993631 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.240738732 seconds)
done (took 98.272807476 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.12008218 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.874264246 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.351029463 seconds)
    (4/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.940334916 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.014947399 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.060316305 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.921262612 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.169921347 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.992145816 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.978470684 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.138677161 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.144892763 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.014927977 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.855119925 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.879544742 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.533298524 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.907913664 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.878951068 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.148776507 seconds)
    (20/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.962616496 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.878793891 seconds)
    (22/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.933939535 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.043552457 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.800392459 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.90483917 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.926534279 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.666180204 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.875955188 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.940616278 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.00351205 seconds)
    (31/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.993187921 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.841584472 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.521992108 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.093300028 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.862832548 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.860309785 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.539858964 seconds)
    (38/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.1442294 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.127242362 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.919533091 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.759981664 seconds)
    (42/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.760904907 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.253766645 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.962591854 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.960754335 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.144337448 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.95768971 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.994727817 seconds)
    (49/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.424538055 seconds)
    (50/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.187574261 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.880437715 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.089809307 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.192103431 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.09639359 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.859059115 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.870353654 seconds)
    (57/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.883067887 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.917683525 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.180591627 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.066454381 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.100293598 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.136887034 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.819724781 seconds)
    (64/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.969872267 seconds)
    (65/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.455027802 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.159241777 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.370022515 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.26031464 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 5.751805705 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.84564617 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.446324603 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12682736 seconds)
    (73/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.012717819 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.870100481 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.283337935 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.884442652 seconds)
    (77/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.914288928 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.884006269 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.203893912 seconds)
    (80/309) benchmarking ("sort", Float32, false)...
    done (took 5.620528345 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.027803911 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.881874927 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.370970588 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.931264758 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.468685699 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.098228507 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.917210193 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.095430096 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.196519215 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.666811186 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.004867287 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.924133129 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.484705699 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.859795159 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.042764209 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.243408047 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.031539467 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.163087314 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.791677225 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.964140549 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.414430971 seconds)
    (102/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.888159136 seconds)
    (103/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.987935478 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.947691256 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.043172723 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.672898574 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.900181003 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.246902223 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.93529421 seconds)
    (110/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.487251338 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.257396406 seconds)
    (112/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.151529699 seconds)
    (113/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.946264168 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.048147708 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.468384933 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.106131463 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.16169297 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.887389168 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.189255347 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.533028921 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.847182404 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.904996196 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.472926608 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.032624781 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.139393002 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.969397881 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.985464482 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.845953311 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.368489901 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.88857308 seconds)
    (131/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.21208653 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.247518614 seconds)
    (133/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.509951427 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17873423 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.862703772 seconds)
    (136/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.005623661 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.164284822 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.169080319 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08787739 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.962997232 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.124751986 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.031635906 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.557070117 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.876726156 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.940310382 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.966477415 seconds)
    (147/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.972770113 seconds)
    (148/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.062296443 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.889473998 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.225506477 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.086490018 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.891621586 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.160330242 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.380534941 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.008797871 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 4.856872248 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.014069392 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.149709909 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.887279273 seconds)
    (160/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.912759925 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.165889763 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.865018053 seconds)
    (163/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.32520558 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.665102079 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.38271478 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.46728519 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.973183851 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 6.861727175 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.971716063 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.924276163 seconds)
    (171/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.948676566 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.848648125 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.873603348 seconds)
    (174/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.876719583 seconds)
    (175/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.591944049 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.086141635 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.967051031 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.863411367 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.900474629 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.217432255 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.269584639 seconds)
    (182/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.058636741 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.068011396 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.047414959 seconds)
    (185/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.384327625 seconds)
    (186/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.197939355 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.759437546 seconds)
    (188/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.119051243 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.902747409 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.905576363 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.949534901 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.925662533 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.24574416 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.354209299 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.919164174 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.891620409 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.965487769 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.481425541 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.950773515 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.785534684 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.873235291 seconds)
    (202/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.06913305 seconds)
    (203/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.986047906 seconds)
    (204/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.000700367 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.262635047 seconds)
    (206/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.118986719 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.89101415 seconds)
    (208/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.924488236 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.936540206 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.277696827 seconds)
    (211/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.356912625 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.937096368 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.846163177 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.877913973 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.981108559 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.871731334 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.92280552 seconds)
    (218/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.334534092 seconds)
    (219/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.982799748 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.033587594 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.378399419 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.866398078 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.661725278 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.084430302 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.393137715 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.384021894 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.877916095 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.764582899 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.859368862 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.70118454 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.903161689 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.91936591 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.219083555 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.94986429 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.908106524 seconds)
    (236/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.951515414 seconds)
    (237/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.232141855 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.94043849 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.867717459 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.867468661 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.068121957 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.845570269 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.05535965 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.793730424 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.456559974 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881579477 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.872539192 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.12744559 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.871322578 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.873367142 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.906577555 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.578463847 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.836363085 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.227220362 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.258957642 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.969450195 seconds)
    (257/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.858553248 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.545687888 seconds)
    (259/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.092448803 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.876395472 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.900879781 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.868933119 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.04382676 seconds)
    (264/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.161565031 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.258231079 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.854687635 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.251491092 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.856525028 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.287588372 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.876846787 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.954306717 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.155234787 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.896967728 seconds)
    (274/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.949236065 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.528588545 seconds)
    (276/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.105682457 seconds)
    (277/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.094874913 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.967246837 seconds)
    (279/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.869577039 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.876811263 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.957930095 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.56456445 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.079886151 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.214081097 seconds)
    (285/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.004528411 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.015323107 seconds)
    (287/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.956880767 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.854719745 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.694309738 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.89701988 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.974173382 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.862226175 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.019122654 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.519965838 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.92482086 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.898713761 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.256097301 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.969380257 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.872266254 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.969271101 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.90298304 seconds)
    (302/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.127505089 seconds)
    (303/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.287231774 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.896019248 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.856231083 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.129861471 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.885854455 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.171833827 seconds)
    (309/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.996864053 seconds)
  done (took 1017.121154423 seconds)
done (took 1018.980179556 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.907956773 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90088244 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.883679409 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.904585229 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.996004459 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.91908809 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.893565109 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.884731899 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.930299994 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.933270458 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.88407193 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.91836714 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.885854399 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.883951326 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.883100031 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898689131 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.195000246 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.914778718 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.901694698 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.893218969 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.902636335 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.883558148 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.934364897 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.9174978 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.887096055 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.887928852 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.888896599 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.904110188 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996779456 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888490341 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.886422491 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.896921814 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.197346865 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.913746191 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.879550874 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.905226005 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.896811597 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.894334207 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.887992437 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918418666 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.341343061 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.893103141 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.886624197 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885856923 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.886201886 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.888487499 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.886574712 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.890538032 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89803949 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899101253 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.337678641 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.906930652 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.888014202 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.883585352 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.895246882 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.884684458 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.886801693 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90030406 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.904615791 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900815101 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.184102505 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91717282 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.885762537 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.901102089 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.89145208 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.373007712 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887588211 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.886561448 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.337355106 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.897337798 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.371406147 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.899783847 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.883922082 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.897052804 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.915854453 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.192795764 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.907346158 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.882699438 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.891004879 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.88151114 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.891700521 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89645883 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.887748146 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.88326466 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897464534 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.918304071 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.891918374 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.885597381 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89115756 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.903345129 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.891660101 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.894194372 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.885442148 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.878415591 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.892624455 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.886451261 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.886562838 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.887384171 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.886944016 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.893247531 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.336466346 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906271199 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.877726539 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.878726971 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.880604184 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.895992344 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335624293 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.89068883 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.90359006 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.929368827 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.884058524 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.182204194 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.915496199 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898354865 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.890338377 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.885053174 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.878985003 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.183036957 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.365451592 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.905208139 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.883230279 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.882088215 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897931064 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.882784415 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.87877991 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.193329489 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.913489423 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89601011 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.003517792 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.89307779 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.914104355 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.88191957 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.885107361 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.916889035 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898316683 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.913683154 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.88434901 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898002728 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.898415987 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.878392363 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.893787179 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.891938539 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.883054713 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.887568359 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.876078615 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.916414571 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89506096 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896640385 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.902265187 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.002843751 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.879414795 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.180969692 seconds)
done (took 296.2774217 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948792602 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.873601668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.975664251 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.878692807 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.961233513 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.976440883 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.875317311 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.87493242 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.874912954 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.258095085 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.875524891 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.876080883 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.870946388 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.876111659 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.958389787 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.877974746 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.875371013 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.220173908 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.877967031 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.949128791 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.875542717 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.875430713 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.879232784 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.288948983 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.876372369 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.871463777 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.959459959 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.877763527 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.221489276 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.876580874 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.871442639 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.22063339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.975675176 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.893879336 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.885887157 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.881829894 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.969997014 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.878848501 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.966485582 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.953886043 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.972618895 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.913844563 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.867897929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.863912715 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.875377124 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.87217284 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.869467648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.900372283 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.866898607 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.868799108 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.212999834 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.879502121 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.866942332 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.866889246 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.866737631 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.898450165 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.865279804 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.867671118 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.957236316 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.868109985 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.948578202 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.245610729 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.244958071 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.866431906 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.862228934 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.864161273 seconds)
  done (took 184.718226278 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.931379678 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.939122331 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.930384505 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.86860549 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.913758294 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.93558876 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.867473514 seconds)
  done (took 15.180545325 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.869490013 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.865021034 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.913651419 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.91347637 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.863786843 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.015656575 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.310148982 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.87546327 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.86426259 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.917321342 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.865645088 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866167929 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.872517024 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.865316603 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.912313329 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.87517259 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.980108271 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.864571557 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.864007522 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.017373922 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.862156531 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.872420338 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.918301449 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.875875308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.864273043 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.87030709 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.455528846 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864505993 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.861933485 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.864397239 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.860789994 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.905545323 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864688614 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.859971971 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862122837 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980764482 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.863474495 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862086746 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.863597361 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.858203907 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.864443424 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.863473575 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.863504263 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.862580961 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.862327564 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.886164239 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.863347456 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.863702187 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.864498286 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.863221777 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.912988943 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.863289277 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.860743293 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.861848251 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.917916221 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.869643279 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.862433014 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.860216322 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.864883173 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.861859917 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.016033723 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909859325 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.864250741 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.911420133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864919346 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.863486168 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.863302339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.863295212 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.956978863 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.864074892 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.909943184 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.859762403 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.020500173 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.885785959 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864997233 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.864956118 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.865449977 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.863821538 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.862541624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.86923447 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.861216125 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.864990284 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.869222998 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.861051724 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.859562221 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.975105023 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.971481567 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.861009031 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.875151674 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.869109649 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.860662282 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.915385898 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.863481052 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.861886288 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.916650399 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.977567188 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.918964349 seconds)
  done (took 205.700687557 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.867266623 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.86972726 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.86233111 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.877144016 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.862236604 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.861760752 seconds)
  done (took 12.993719493 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.864903694 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.865203457 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.862173005 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.863099215 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.863334607 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.863401173 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.864883544 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865426179 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.866350623 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.864766849 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.864306845 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.866539941 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.864885645 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.863230777 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.863443031 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.863336178 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.862646054 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.861196043 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863503412 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863190462 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.011904064 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.863789021 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863368686 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.863779001 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.867263445 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.863579258 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869387705 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.863147288 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.862619017 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.870751708 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.866571694 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.8638887 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.862912363 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.868701264 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.867556351 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.86413213 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867983215 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.865426003 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.860992682 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.861961115 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.865711546 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863350953 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.8623502 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.864886963 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.862751031 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.866131184 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.869740605 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.868882732 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.862747312 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.864752364 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.864845335 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.862912761 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.862930072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.864322717 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.863410418 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865989937 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.868381285 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.864197684 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.861238621 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.861508204 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.864624465 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.861290596 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863290006 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.865019638 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.869158781 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.863848848 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.861633886 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.865127172 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861936415 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.861637533 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.864465731 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.859253172 seconds)
  done (took 137.17780376 seconds)
done (took 557.593908745 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.915373568 seconds)
  done (took 8.707060453 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.000477381 seconds)
  done (took 8.909960857 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.61862208 seconds)
  done (took 10.446226164 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.915871316 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.924796628 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.903726883 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.892462254 seconds)
  done (took 29.47662822 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.928886922 seconds)
  done (took 8.7562271 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.907700732 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.891234246 seconds)
  done (took 15.657571152 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.011442104 seconds)
  done (took 8.83828421 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.973806463 seconds)
  done (took 8.805640145 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.888376325 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.898629197 seconds)
  done (took 15.628390552 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.870990501 seconds)
  done (took 8.689414545 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.522238398 seconds)
  done (took 11.350385392 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.884102623 seconds)
  done (took 8.713000898 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.935996119 seconds)
  done (took 8.749164564 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.167490363 seconds)
  done (took 9.979774866 seconds)
done (took 164.498215223 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.879857951 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.879293064 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.87933325 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.879866674 seconds)
  done (took 29.329976037 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.91802901 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.918229437 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.919611667 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.928176707 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.920133989 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.917718981 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.90989798 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.910580746 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.929233326 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.918955722 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.917532623 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.920786351 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.917453186 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.910499423 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.915555814 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.914970438 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.923772051 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.914280166 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.909886667 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.91464185 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.878984273 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.924171567 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.91617599 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.882678593 seconds)
  done (took 47.764105585 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.073446416 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.946702186 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.029489032 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.93446773 seconds)
  done (took 9.786196759 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.925920614 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.927221994 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.938428859 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.976923325 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.005142858 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.934141631 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.895963766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.893506597 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.880816751 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.930543141 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.998678604 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.940451391 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.005815663 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.870624229 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.073464113 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.869925836 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.870134532 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.924904618 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.975525761 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.98792458 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.871419154 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.923059667 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.925678204 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.939203144 seconds)
  done (took 48.284183976 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.869524203 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.877128656 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.878064542 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.870593482 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.869422209 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.871083365 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.875886487 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.872128719 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.891575658 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.872340131 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.869295966 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.872998858 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.870821799 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.873260219 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.870627764 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.88542965 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.885273397 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.872823109 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.874445454 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.878181485 seconds)
  done (took 39.297927761 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.865742065 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.720372548 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.216769892 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.119384059 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.863579445 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.862650192 seconds)
  done (took 31.443527906 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.883132961 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.875043242 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.869093916 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.927286362 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.015103094 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.876649124 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.867119588 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.877275308 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.913534853 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.937239836 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.890567753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.895293023 seconds)
  done (took 24.626808439 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.860805302 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.859801423 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.859713842 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.875879054 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.874127314 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.871205225 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.870597485 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.855880912 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.876738811 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.882524304 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.870109796 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.875520899 seconds)
  done (took 44.233703279 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95200297 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.901033532 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.88338163 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546867943 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.238621757 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067343417 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386272931 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193214025 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.858739021 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134330658 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871226672 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972050327 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119103976 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461807706 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.89585052 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.315304208 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156971048 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068952736 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88789846 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556774797 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972223565 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.1791211 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.679848505 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958445467 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107230959 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.027563286 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.154206601 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892990285 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033933643 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933399348 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903404664 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892031978 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165141979 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268437188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996690019 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902290467 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.510011294 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.605158143 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.878488742 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.651610601 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.650046789 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.021388453 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904873072 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894740015 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830255733 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.166804567 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276967161 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.901002849 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.605857537 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895108632 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906411453 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997341993 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.898723947 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.710774472 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816642795 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.898057144 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.89239805 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900434249 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465310111 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.039274875 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1993758 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.87713687 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.989023377 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.614844722 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303167662 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.047537488 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.902493864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902811344 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833700805 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.682484304 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957655821 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24854309 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.92004077 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549716009 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205031758 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.010319775 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843016914 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174734958 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.554249368 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.879097322 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127905287 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901040395 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836621806 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.940053652 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83436047 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173651151 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938317588 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.660112877 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940378751 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.233495113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911585267 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920377221 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924761191 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124197861 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.785833888 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901708801 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.732666524 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046268959 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923564883 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235309199 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836810931 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.904948007 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156413884 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.113440532 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.076802678 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.404548249 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063955589 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.580705898 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.95947823 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.161467969 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955779283 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.17569924 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964288172 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.048832092 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962188044 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908449365 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226189035 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.613586087 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.049442878 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.989757252 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038640202 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.230140135 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934361738 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973868204 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909565382 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907775708 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.73193729 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465492698 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.909244244 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.90722649 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084795703 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95877601 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.908301749 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854660839 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.53481651 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982223162 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.923923586 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.125729566 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.594171298 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216412713 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834575051 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243212197 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985662029 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.116617842 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.547947337 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.97379479 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155904361 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055613943 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.111475445 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940980205 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905752352 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985688063 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910204492 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.138005414 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185814586 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.89152764 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.892229893 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.723699 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925975283 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885744335 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.889940006 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.634276589 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167229867 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910453522 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892354026 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.77366605 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.8988563 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949244293 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890415643 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894176265 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.432375096 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596015764 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.890451242 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.47192067 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111797136 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891516686 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.644730789 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99975027 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.965720811 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163825059 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94320082 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.814425437 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.592388014 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.57062484 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878039801 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811944876 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876244291 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883129566 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884262099 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.073689957 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154127955 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917546783 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.609964255 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.917038816 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884232645 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.877460236 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875310832 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.38540926 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.043671676 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.16797245 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924786095 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01693774 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.886403003 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807930111 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.876954585 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87749247 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.873140965 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.873024178 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906429088 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.615120299 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252303667 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136476803 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.525187821 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89078451 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.716657824 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.936819233 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.937305467 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.751162059 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1589657 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.977204562 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911419477 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.908245983 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.71624932 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.595505894 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473945784 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216832908 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217589076 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345763787 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.230562918 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.933653833 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.234723666 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831790477 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462450353 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958071235 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248884579 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846991812 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982282334 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.551299561 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253613912 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913380027 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125697973 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291044132 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.691783944 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052985414 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110754829 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933739579 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166625933 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867357697 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.184841158 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04218685 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.661194314 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11172916 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230858796 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631346455 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.035292273 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.898547503 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.589123646 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984832371 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.613512627 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.016875899 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.200590205 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.906687365 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384927807 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908012717 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.126128124 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263598466 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.178447766 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.027227213 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836463843 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911429913 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912184188 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.901782896 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.900457925 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.787015405 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.154268555 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912258132 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836329891 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.121984909 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20170468 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.808302355 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.906243044 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900634783 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218492702 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.550592654 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080568299 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.114004417 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.429404357 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909546714 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.835992667 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836371534 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.595548253 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908728685 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876459089 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119953578 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.005316609 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818032351 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.095332112 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989177957 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157848326 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.915920535 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181522754 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179573311 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.617316454 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927338344 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.003782054 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.614920219 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.021111476 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90314844 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139365382 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65502086 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.130123 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.949976581 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.856093111 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.901513932 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118287067 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902873678 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.87177286 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145462404 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.625373126 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.029395801 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244379351 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999462221 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.896661131 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978256711 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.013618502 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931826729 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0021301 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931475002 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.932875703 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.9332339 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968455432 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894341277 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.05673014 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.931616197 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010266173 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.101643613 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.452371682 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.92110794 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197393489 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281283524 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253340548 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979198034 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912122293 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915115525 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843916464 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060351756 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.135233304 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18321717 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.040295186 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.025565917 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934756286 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.635387361 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.240363195 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159788164 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185892697 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.805362977 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.531245614 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956923784 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.910223107 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920369593 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.121521784 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142386305 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216068618 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056195643 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.101434695 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281598548 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184139177 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910648374 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911259754 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499450889 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.059228252 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.616299049 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.968265659 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88390556 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211069317 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934556046 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303660862 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946840272 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.080577339 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.441098534 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.677646687 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216716254 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.91405115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99059184 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207890351 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327267505 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242530335 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993830892 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93709678 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.033687291 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073768518 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.827201702 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92679727 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927427227 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141681571 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.635101979 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.935807986 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209383285 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23721191 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.919932348 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.831183393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943176517 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.929576251 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144248507 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193475035 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172046376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928860438 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927414883 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.736414311 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197644666 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981283896 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852035995 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.922459378 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022899602 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166005103 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938824117 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.370204911 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.627950133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200195521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.918924841 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940139952 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192706099 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302147754 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249668497 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.460842772 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133213222 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.507067273 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.619981319 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226511476 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.924473313 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189317052 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228024319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.923832118 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.109209099 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962754109 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.195962726 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23466541 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.053227631 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680028768 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.899580444 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269944163 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492333216 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864989733 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931995513 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.982324985 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923181828 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.050912238 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929736205 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.831925353 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191174764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.683392731 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191741222 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.922634765 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.90522179 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.672335453 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.323693062 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957281954 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06128585 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924879012 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.637169602 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.27806923 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174254876 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.109967766 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.929708657 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.922088568 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918782943 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903608579 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.116692795 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.113856584 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195984388 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.140082462 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.960361528 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922436862 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.135279306 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129901212 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.889634826 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071497004 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109291547 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967553569 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.823679675 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421323177 seconds)
  done (took 1696.34365298 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938953909 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.93766472 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.927584595 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.94410941 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936343895 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.992212273 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.939690265 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93178749 seconds)
  done (took 57.401668233 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.917656297 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.11411981 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.928585964 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.918913417 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.929491058 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.919776496 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.097725714 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.932818253 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.928301647 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.929599372 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.927830923 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.91762832 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.237631031 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.946690546 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.93205766 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.908908027 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.929117559 seconds)
  done (took 75.274525949 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.92080108 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.023613811 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.944248305 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.941663639 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.87959243 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.938757189 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.715782152 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.975999248 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.922641353 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.157927189 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.552437888 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.94397845 seconds)
  done (took 90.773147226 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.930616466 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.926833659 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.926967985 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.92758919 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.926597688 seconds)
  done (took 11.498210645 seconds)
done (took 2207.895946868 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.165288754 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.1476023 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.164003112 seconds)
  done (took 6.166751411 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.074196777 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.120831198 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.241848082 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.247280745 seconds)
  done (took 10.546891632 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.213725105 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.294061268 seconds)
  done (took 6.367248445 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.328335177 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.937637465 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.314872251 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.926196744 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.929324689 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.927469742 seconds)
  done (took 22.648296757 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.929492249 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.932213811 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.930564306 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.932927582 seconds)
  done (took 9.58211526 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.910105815 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.642646876 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.911536404 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.927811792 seconds)
  done (took 21.25254128 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.677333694 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.688671575 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.674317628 seconds)
  done (took 9.900759362 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.479715179 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.829164398 seconds)
  done (took 9.169272337 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.190797391 seconds)
  done (took 4.051122153 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.062193386 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.237862089 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.463810107 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.457343255 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.547280198 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.685661228 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.261753095 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.188959869 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.355172577 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.383841062 seconds)
  done (took 25.50489112 seconds)
done (took 140.789883263 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.310417936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.166050513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.136981458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.307868965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.150338208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.129382345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.132745617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.290943565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.774446254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.773652648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.26566196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.148190664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.290604601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.168506683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.29126289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.294554649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.146691042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.316215769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.961423365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.201849425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.135360799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.902934307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.106843012 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.913843402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.149092802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.080343293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.479029105 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.296429842 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.112509358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.488588517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.08295248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.348431415 seconds)
  done (took 173.216684088 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.690552822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928568154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.927566055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.928732423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.542124044 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.929123585 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929274278 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.92854025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.333515498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.316307612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930454353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.528206211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931608724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929551391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92927501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.934998162 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.486545823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.775620153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.949111965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.95519088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.959957321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.518848116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958863586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.56190167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.50689787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956481655 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.930057966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955873421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.936395941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.93953622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943357793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.93050745 seconds)
  done (took 211.767785476 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.930007549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.931170855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.933631075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930213551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.93653443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.939834171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933814826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930669019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.709008587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.703101931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.937448427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.936128616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.938235073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931367145 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.940070234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931731129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.938482077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.941162365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.93672916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.93749354 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942189987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.76308082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.942885728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.757592901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.936429447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935812755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932660184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.940134097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.938346245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.939526381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943304273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.93259837 seconds)
  done (took 223.035924782 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.136068972 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.940247949 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.94038867 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.897277294 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.940798868 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.940067815 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.936097047 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.129809578 seconds)
  done (took 19.739752445 seconds)
done (took 629.634075494 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.377280414 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.22206946 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.121010797 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.964706369 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.204091366 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.996843158 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.959990939 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.022696319 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.686372286 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.027732397 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.599107452 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.979854018 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.688763704 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.986527058 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.088573291 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.018569858 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.487744798 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.584064548 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.143366547 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.051708204 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.137210803 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.896595466 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.037461221 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.705598554 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.711423045 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.939576727 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.127717921 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.496160107 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.974429198 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.126335001 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.693604288 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.332059441 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.972100771 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.957858475 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.01290269 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.995003894 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.30906613 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.971014608 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.08551271 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.698153126 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.030481047 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.573984281 seconds)
  done (took 105.863757616 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.930532406 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.929434411 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.928534104 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.93005911 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.930441095 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.929894431 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.928656242 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.928400722 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.930170552 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.927622601 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.930032668 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.930645715 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.92836954 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.931017471 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.929206492 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.928621976 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.930033773 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.9318439 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.929587368 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.928763653 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.929188747 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.929754094 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.943722878 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.928817921 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.929605172 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.930537512 seconds)
  done (took 52.062550652 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.943044533 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.085877633 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.167115038 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962482299 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.942270532 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.945572935 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.960902186 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.949694154 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.94541393 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.94454251 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.040887199 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.950515491 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962513811 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.16567992 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.960558612 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.945776006 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.945506309 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.944289202 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.093506646 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.959094003 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.963429962 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.951062651 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.963042996 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.957405795 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.946592367 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944876816 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.948887074 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.415814411 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.953972124 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.041471432 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.987603848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.968412801 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.384764242 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.176367934 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.998333794 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.953701831 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.945670137 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.047749905 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.95077119 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.946136616 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.963166168 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949137829 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.16860084 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.445506518 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.955169045 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.94269557 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.431417552 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.051552569 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.98246731 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955135315 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.166897097 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.957868021 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.94353454 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.942048944 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.97839212 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.953866523 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.942058046 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.307896671 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.95318299 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.959884188 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.947630856 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.94342905 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.096603014 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.950303821 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.085561476 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.951527261 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.949142064 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.943624312 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.165612148 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958940713 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.448968116 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.955940817 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.944212418 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.041674771 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.091473569 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.446419283 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.95566912 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.099510056 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.400221805 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.968230726 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.950181056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.405456948 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.971131982 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.950942538 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.94559727 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.946481107 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.945291786 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.987584298 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.960083466 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.387097874 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.453797852 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.320819552 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.970702634 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.959617696 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.944774377 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.307011685 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.953309484 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.945377837 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.163038677 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.462879901 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.95721154 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.951514569 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.437207882 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.958027616 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.961883605 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.95290342 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.170304819 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.959123203 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.988701196 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.945917952 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.950783459 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.947692936 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.963094824 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.952272903 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946141275 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.426447812 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.061402409 seconds)
  done (took 240.893255236 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.940268261 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.940615512 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.940237625 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.939654355 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.937958444 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.943743654 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.938249026 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.938595443 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.944712432 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.938661892 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.938943142 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.939047394 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.939601074 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.947739781 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.971499308 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.94660257 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.594603316 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.941225651 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.940795778 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.93904186 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.589162311 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.94691475 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.940238038 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.946820641 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.940084054 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.938784618 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.947738078 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.963774539 seconds)
  done (took 169.590982838 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.948602386 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.061927764 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.964366307 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.974559402 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.955849071 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.945138545 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.969692112 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.961282865 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.951226983 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.945644479 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.945505709 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.008385396 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.959762214 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.048074101 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.978223294 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.981449115 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.051552784 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.955635231 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.946287068 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.948138762 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.975424347 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.945058751 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.009159245 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.073771406 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.96599518 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.065218124 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.952732604 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.94937556 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.946988432 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.066654437 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.962901888 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.008788989 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.975062229 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.965725649 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.06953548 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.06397559 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.054900294 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.980060194 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.952412648 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.946774498 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.947986025 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.937335659 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.064387565 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.967292249 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.949411144 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.057098058 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.968009025 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.95131242 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.958375548 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.947259744 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.960956302 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.966407407 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.015285125 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.080179046 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.982969382 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.977372741 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.973262499 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.22414281 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.956363426 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.048812857 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.944474001 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067352787 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.971366768 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.938042169 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.949332566 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.956156041 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.977306043 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.984934702 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.054997126 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.958566051 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.04959301 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.986816247 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.961437716 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.951109344 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.953248444 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.066274764 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.069553734 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.987719769 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.989736657 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.984939431 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.949439934 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.949542028 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.938522741 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.966968788 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.955449741 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069377355 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.068692142 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.961184025 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.953061324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.953506823 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.952410187 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.975847258 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.080129806 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.985686148 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.048892145 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.01980823 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.025074348 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.966111443 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.964462675 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.9550601 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.01406158 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.966021779 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.963011629 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.269655219 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.019642768 seconds)
  done (took 211.019933662 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.407243527 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.006982761 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.006049632 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.223733521 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.377239782 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.833967131 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.996898852 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.001897735 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.025021948 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.158661662 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.060617085 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.013031782 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.987742055 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.97358841 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.003105182 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.020207922 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.005226846 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.288094647 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.129152704 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.114446132 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.981520458 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.272763734 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.318032085 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.369665786 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.033024908 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.317138118 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.657790152 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.240235444 seconds)
  done (took 63.709646083 seconds)
done (took 845.005393496 seconds)
SAVING RESULT...
DONE!
