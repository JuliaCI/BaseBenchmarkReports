cset: moving following pidspec: 28068
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.355272516 seconds)
loading group "string"... done (took 0.602580342 seconds)
loading group "linalg"... done (took 7.460148246 seconds)
loading group "parallel"... done (took 0.174895927 seconds)
loading group "find"... done (took 1.192119965 seconds)
loading group "tuple"... done (took 1.835034494 seconds)
loading group "dates"... done (took 1.246875042 seconds)
loading group "micro"... done (took 0.232699625 seconds)
loading group "io"... done (took 1.050986242 seconds)
loading group "scalar"... done (took 41.793168241 seconds)
loading group "sparse"... done (took 13.305956338 seconds)
loading group "broadcast"... done (took 1.018464336 seconds)
loading group "union"... done (took 14.384250386 seconds)
loading group "simd"... done (took 4.717207661 seconds)
loading group "random"... done (took 9.537626573 seconds)
loading group "problem"... done (took 2.021409492 seconds)
loading group "array"... done (took 22.65171388 seconds)
loading group "misc"... done (took 2.049462034 seconds)
loading group "sort"... done (took 3.443691581 seconds)
loading group "collection"... done (took 19.452833458 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.563725161 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145951405 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120722318 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.144586086 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192555296 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135337001 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146324909 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085581828 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.021736125 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172862311 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143314728 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52462178 seconds)
done (took 5.238938837 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201510793 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089607549 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099249593 seconds)
  done (took 0.975656166 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066921536 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13120045 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082785847 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068469475 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067858259 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083443109 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068073956 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06689462 seconds)
  done (took 1.361123968 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075770019 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06974672 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086904048 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068862997 seconds)
  done (took 1.093880893 seconds)
done (took 4.49293795 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.946692154 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.257088977 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193256672 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.490774858 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135141662 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192927467 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665105788 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346397091 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.218377439 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104278852 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107943486 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396739082 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108885476 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671373374 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0788596 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110162962 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.16157771 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.457824385 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084014567 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083984921 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105945418 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143892424 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.107889237 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080228114 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171293315 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071083487 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155347445 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097710342 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070106552 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.251812513 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191933983 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690460263 seconds)
  done (took 10.782034421 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100242843 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123041671 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070651222 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142867404 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124918333 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072912718 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073048629 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085908758 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09382052 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.164378777 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12301742 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125887717 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068102152 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070759981 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104852537 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231637378 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095182547 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10516331 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073925457 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076765458 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126561402 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10158216 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082285255 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09682922 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154121827 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195460899 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09909882 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114649321 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070149839 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1011218 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132011676 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133274647 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068483954 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08819063 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162007897 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098367246 seconds)
  done (took 4.753881876 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.121051515 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178042823 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094052221 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157952637 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088164258 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132318275 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06815019 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102910989 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257992405 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.118643037 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495054383 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131881224 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099316209 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109387944 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069132023 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089159644 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070565905 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.635691726 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.112414587 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139675105 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085420511 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094568241 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088638553 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.345732749 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085939922 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066579435 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086903339 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061047138 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150139781 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069670208 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.279182906 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110758156 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071509014 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121535705 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.187746712 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100893334 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126859007 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084504714 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06850431 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175820924 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074284356 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086683303 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091113743 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124569575 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125283375 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085600188 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06895766 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185649274 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06945311 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103301287 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.951143178 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169584458 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08204067 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067316921 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301038894 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104777858 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068851938 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065920584 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263753454 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162559836 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068383329 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086830989 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068599911 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087310144 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375894699 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070214604 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.711306137 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074472703 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080207596 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088903101 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069741789 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093957306 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074624725 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105270263 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068747816 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069780436 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086556899 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067764672 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08734904 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09474961 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106289979 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214008377 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068557607 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.090544053 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065831713 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082350273 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090227508 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114325169 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073392434 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066919002 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119816027 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071407533 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087054849 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10529051 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088833348 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103770067 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072307911 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131885891 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07131798 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135425972 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070214315 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115429692 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074957414 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118287092 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101335535 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074944751 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159206111 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066200416 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084357767 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066038831 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066395644 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088069153 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069873309 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087168665 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083893097 seconds)
  done (took 21.637225514 seconds)
done (took 39.082929354 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315208685 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09888225 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097079653 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077064273 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097315185 seconds)
  done (took 1.549785855 seconds)
done (took 2.382333764 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.153385962 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104418574 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083625758 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099236804 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083636184 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104812478 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120248433 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082723612 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121296619 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06596323 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117514554 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065317104 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082738467 seconds)
  done (took 2.152805477 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084174122 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086079073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089145364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082838079 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082291853 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083731455 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08107038 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107968609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082086763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090807612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065724532 seconds)
  done (took 1.765224259 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08332072 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084813774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088799945 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082329484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081971839 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083540588 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080849557 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106346167 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08152279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091576031 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065529268 seconds)
  done (took 1.76246591 seconds)
done (took 6.507244215 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081603775 seconds)
  done (took 0.908619239 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.757642469 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.933284947 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085995176 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137650794 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225908344 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160098871 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.461138492 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114189399 seconds)
  done (took 10.913882926 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102747653 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090920606 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086524293 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08921464 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072148676 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089774774 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074663388 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073045066 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087826348 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071503675 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088634582 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07323554 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090251326 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07436773 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090640034 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075626386 seconds)
  done (took 2.225130148 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10645225 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105719339 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094622731 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078122819 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094249572 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074371659 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096612105 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076179558 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090901322 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075347972 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095645861 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077352039 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092241433 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068192964 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094365704 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079179716 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091447733 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077087342 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095830613 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077432073 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096013912 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066048843 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093054569 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077500751 seconds)
  done (took 3.022052935 seconds)
done (took 17.900369623 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137285177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080284905 seconds)
  done (took 1.051228761 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085781278 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101939054 seconds)
  done (took 1.028490017 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08641858 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084316129 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092487335 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098560411 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085124895 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069258967 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106640853 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068589732 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084538815 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069748105 seconds)
  done (took 1.684810729 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071735982 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09716409 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073359762 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.101181065 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076347199 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084440938 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075861704 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087544257 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0820398 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082736525 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074076965 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10343563 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072972265 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10474481 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092489623 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071761118 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090275449 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07043348 seconds)
  done (took 2.354671595 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069113297 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068743715 seconds)
  done (took 0.976928667 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070667961 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064976308 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08610376 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068229134 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082628115 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065105261 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083020504 seconds)
  done (took 1.359784442 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.420890114 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111171294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.271730028 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074919281 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.110485484 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302144287 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069061863 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072329996 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092039477 seconds)
  done (took 2.404787256 seconds)
done (took 11.697326267 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082167529 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086884973 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116497012 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.449855486 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111336358 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066959783 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149679602 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221131143 seconds)
done (took 2.120450692 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129645038 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638589046 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.419654905 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219385033 seconds)
  done (took 2.126298615 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.394546952 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093029774 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077362756 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069533679 seconds)
  done (took 1.486069354 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068220112 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07170996 seconds)
  done (took 0.990589507 seconds)
done (took 5.578107049 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069970302 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068211562 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.083005387 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068898937 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064741367 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083197753 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098118583 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085427472 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068624114 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086096914 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069164158 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067381075 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086632885 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068630863 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066022372 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083245645 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068854692 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065159488 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083237325 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067441995 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082229558 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069048183 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065630068 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08286176 seconds)
  done (took 2.690515192 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088333089 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085816171 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074574492 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091135758 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073547766 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09077574 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074600875 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070541133 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091928115 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070018429 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090760112 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072415778 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087697323 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07259922 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087961403 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073164039 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091394823 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069677895 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069487846 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091542623 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073631151 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08753038 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071770801 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091246959 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072307862 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09037537 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070726745 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086427721 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074045202 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089643497 seconds)
  done (took 3.275977063 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073629957 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06556295 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08406732 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073002223 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065807877 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085625155 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064980586 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084190969 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06788063 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064967638 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08571637 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065766987 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064730517 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086227174 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066670169 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086562122 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083710467 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065001519 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084315197 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06678428 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086337917 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066448087 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065486634 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083404307 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066967225 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06421016 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083592933 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065770943 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083179423 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066386542 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068465296 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086962794 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066555117 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071098367 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.088236148 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065725521 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068444599 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084547955 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066071665 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082837282 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066334252 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065641458 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083319954 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072336244 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065493627 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086757008 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065876167 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084310804 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067257968 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068085177 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084316835 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065816112 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08477885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067953187 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068673442 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082733334 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06698692 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064587444 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084859898 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065168718 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082380465 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066081104 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067426579 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084778916 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081574355 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089631454 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066642909 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067704635 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084241102 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06857799 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06669889 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098809286 seconds)
  done (took 6.205691105 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.124777095 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095908884 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087157511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068126358 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082001853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067713694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069197847 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084176539 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068188384 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090256591 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067294155 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084425076 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069511013 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081157922 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085037455 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068378812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089801172 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064586444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065012157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087948059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066007929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087557418 seconds)
  done (took 2.611124879 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.194817633 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090489479 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114141494 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095068245 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087406795 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076963899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089558475 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073628468 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071920336 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088991448 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069608791 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090913824 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070262131 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088314045 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07126768 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088912645 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072640507 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088150341 seconds)
  done (took 2.478720991 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081275156 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067164638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110755051 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067610101 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087815746 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069837344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09283045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076657912 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088875849 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068529126 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095665106 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180763967 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088603893 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068821089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069841626 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087609242 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071087062 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086604321 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077738542 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092714717 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073401119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095592385 seconds)
  done (took 2.757267677 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084958224 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06936625 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105725805 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088059277 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0652222 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066548173 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093777312 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068352314 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092575944 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070979144 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086202414 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069279022 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072419258 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087782429 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072920244 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087029222 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070845635 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086305196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071582873 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06394685 seconds)
  done (took 2.433301291 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091483639 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087360474 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071370115 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096597358 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070536291 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08729656 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079979939 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087976851 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070738076 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112409063 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069854585 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087509025 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077845455 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093486744 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069297121 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096362396 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077215332 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09728038 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08715379 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070643136 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112417168 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069927689 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096529015 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070296618 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088368216 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070548832 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087158361 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076585399 seconds)
  done (took 3.217815595 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069726515 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068447201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084351694 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066675425 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065598296 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084581124 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066144081 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065472162 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088108747 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066101563 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085341015 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069637245 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068376828 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085911644 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068962599 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067832948 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086631896 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065988528 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065368701 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08486441 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068348544 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08534555 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069355938 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065556869 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08358822 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069171308 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06593505 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084138578 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068945504 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064825188 seconds)
  done (took 3.064881549 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079453246 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093779142 seconds)
  done (took 1.039711157 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067391028 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082123434 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084815988 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072017123 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091425685 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069006457 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09514161 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073015254 seconds)
  done (took 1.498264333 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086045948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079009437 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089234207 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098002823 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080117128 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084945844 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16177058 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088610204 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075246374 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085213925 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083210535 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066825797 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094828887 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068114089 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093338166 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075235662 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08361529 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076085264 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07075644 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08574009 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069840396 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098487666 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071775843 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083666784 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070378354 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076816561 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100525495 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068867046 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091499582 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07545741 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092649889 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06357119 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067849494 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088360819 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06597043 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097870164 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084944967 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090905941 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077315036 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08845971 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079663464 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082811179 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074180908 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092968459 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080064657 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069395297 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089116251 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063915121 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083677327 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071678462 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063654277 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087418401 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063703504 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093472575 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073718132 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078514606 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086797198 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06984121 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090568321 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073427686 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093277856 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071888074 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070491276 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087448063 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076195006 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091290048 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079658403 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081584136 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064554385 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066720998 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097771187 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092289358 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094123329 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069830366 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088876385 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067757395 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071893804 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08954957 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074334239 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094284954 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068806853 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093456413 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076677324 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086764198 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072911778 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075662402 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086730548 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070921919 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085784689 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085828931 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086495125 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066691122 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066079006 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099038909 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07108485 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087969433 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067273161 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093337397 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064275417 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069570298 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088596196 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068910203 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099003589 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07454274 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093374456 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078354369 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095181459 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068797673 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071241737 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.085148634 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07022882 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086581336 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07591953 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062835417 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091438685 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069199683 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088365237 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078663765 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085821727 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069983342 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075739876 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094346854 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067206062 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084411638 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071714702 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068259591 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091123315 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07615897 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085902275 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063745252 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082032901 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073658258 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067889275 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091231044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073789113 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090306916 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063811446 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084422868 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074177241 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096670764 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070102606 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06954276 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093681564 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069606819 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086157869 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076468705 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070323287 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087750704 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074958867 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08832256 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064020762 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089676194 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072135951 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067324997 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092249986 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072573256 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089332878 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070185702 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066999396 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093130057 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069749083 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087047668 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068569513 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085773584 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080050893 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070186083 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083192152 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065979059 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094543901 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067026421 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067272442 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087298857 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070595797 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088257501 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067682355 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086224316 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072293079 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080321672 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092922902 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06928635 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093473364 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080240038 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087863243 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071302801 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086012853 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070822867 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068404691 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.098565273 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074531841 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092483828 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071386126 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083684719 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075565916 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076197702 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087538752 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066904445 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086451191 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07353761 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091904797 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073919824 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069508192 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085835672 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068959829 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090578719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072207803 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067787217 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087707615 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074224428 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087466436 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075946412 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088564102 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080132943 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090466065 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065856481 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071778761 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087145862 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074487622 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083226374 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067863727 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067193869 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089829487 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067178209 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090494399 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064692147 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075339037 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096118531 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068597785 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087029763 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069409782 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093577313 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071272778 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072052587 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091418473 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076391192 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099125144 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068328182 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090282204 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080144841 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068309707 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082920374 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074977755 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086148472 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068653016 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066945333 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086363723 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07212731 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096637065 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075522305 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081956696 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071883341 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066765221 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08702321 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064663632 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092257935 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072613985 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069842111 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094770339 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069669777 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088763199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072723997 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086792497 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070618985 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069033487 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091569892 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069337487 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090239226 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068897889 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09022588 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069607037 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065936918 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090126479 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069151968 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068038261 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093979972 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068170451 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087998038 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071715171 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088546736 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070982185 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068973601 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087528973 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072581321 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088340193 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069944874 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071241961 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084069425 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076743199 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087691352 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077788477 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06834335 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085362023 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073842987 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090765223 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074855377 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088494561 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070760169 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069799786 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088365529 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071460833 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094523183 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06719575 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098522727 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078473797 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087226346 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073446161 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068796567 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089991717 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068481492 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069251423 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089465325 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069064019 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087638739 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073831723 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089790622 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070123343 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069813391 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090380433 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070182367 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088241765 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064810865 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066594587 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087542282 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069019667 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098300885 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07025421 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086823645 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068889261 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069201051 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08715336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066194638 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095882019 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079102866 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087841892 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076817812 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067202894 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090192594 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079081565 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086538686 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067728575 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084812853 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06824911 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075669077 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089081913 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078811793 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08751146 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069170835 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065296656 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089802198 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067797334 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081430458 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068283709 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072509279 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086835033 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067761785 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087149324 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073134044 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069221924 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099553465 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066923552 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089061678 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069216672 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084938308 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069085806 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067768677 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091049235 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069488247 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065504755 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085781778 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068861146 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088797344 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071050351 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068036564 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090064362 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075726346 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088238979 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072306447 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090577129 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065135442 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071926069 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089073765 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06866089 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087213549 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073816266 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071060575 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090278481 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078182005 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088079301 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06991159 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087338496 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068098596 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067514322 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088139931 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069376346 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087319035 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071958563 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076747079 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087392163 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072136354 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088773636 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07005161 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094494373 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071384152 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072407351 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096429444 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069175603 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089905558 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076850978 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09104399 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073954894 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069506196 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090119171 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074514507 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08808171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075890363 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087123263 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071210893 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070135599 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08664652 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069033078 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087116361 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069765204 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075241211 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089857319 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067710638 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087325281 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068322328 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069016184 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092920863 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076155458 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09143285 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072453499 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082691657 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067716422 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070066374 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.0863163 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071138845 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090141194 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076117939 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070762401 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089961578 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068303695 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097615831 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075181714 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090673189 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068038919 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072053444 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08983785 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07113838 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08856574 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070082683 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069414074 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092646033 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070544123 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087394711 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077205998 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071677029 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090665939 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070171028 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088830401 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069983207 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064216607 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089821641 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070501958 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094381193 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070579948 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088413851 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081063023 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06624077 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08925063 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071973663 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088431498 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073810532 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082674135 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071242253 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069386824 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090023722 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064852709 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087515763 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068160096 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070363938 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08831104 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064995942 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09910045 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079477275 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090964144 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069374713 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068173663 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083490961 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06562792 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068262769 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090818331 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070988327 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100159526 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067998926 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087480473 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066459707 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068718207 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09208201 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072474038 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085063219 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066076117 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067571308 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092535494 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074674568 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087033768 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069620235 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071742342 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091653626 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066744517 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092457362 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06639297 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072248331 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102780578 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069649057 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090732802 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075342931 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096403706 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068914969 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08350399 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070122775 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070736194 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089042093 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070136882 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089058128 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085538287 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092530874 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068986823 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066778695 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092606435 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067956121 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096887768 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07002521 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088659534 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07405188 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07064674 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097458616 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070670955 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097222414 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071042327 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09289634 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068235227 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088147106 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068408426 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067186796 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089897489 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069968106 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09327138 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077319835 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087336614 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081361722 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097200032 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071985707 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065281983 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08804978 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068855661 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063712223 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091186924 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066410521 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08651577 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06821382 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067356235 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09037203 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074324916 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089348609 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069635767 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068185047 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083821114 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070330476 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091865974 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070180404 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065519452 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090218619 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069801501 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092591586 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073316434 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065568285 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091871207 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070111573 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089676621 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06485278 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07499637 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089169282 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071762295 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087932269 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069023142 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088199603 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073718378 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073442783 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090376938 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070793897 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097514443 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072039284 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085712796 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067555695 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074061737 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087398941 seconds)
  done (took 48.051207322 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110675075 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086366311 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064102521 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084208855 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078027283 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085070593 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064868622 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064538832 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085801209 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067604162 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08440592 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06492528 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092897644 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088445714 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096664247 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087903681 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065002072 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065088826 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085395298 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065355967 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093651256 seconds)
  done (took 2.588150256 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089494599 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104481674 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079429913 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103257549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093551868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080803605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099084253 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07961468 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103332384 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093935284 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084275957 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100290927 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075696523 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096127116 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07530808 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098039894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103088718 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07517978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101226179 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079959436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098091918 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079226996 seconds)
  done (took 2.89944298 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06990544 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068113312 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089988459 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064404459 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067269405 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084730338 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073195108 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08724776 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073365853 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066370326 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08818434 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.0670762 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097537698 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067477285 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06802817 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.087037829 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135983395 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071933945 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088539477 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070322857 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063696757 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090585586 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064882045 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084092278 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.0680162 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071961929 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090144897 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067404318 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087661951 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068810778 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067574907 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086636469 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07007545 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067816818 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087526572 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066901974 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088570438 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068978558 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063857991 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086465481 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069396016 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08300054 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070702834 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070140413 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086513714 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066934768 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068428349 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088619753 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063014872 seconds)
  done (took 4.677139661 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088561224 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.145575081 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092033242 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125685171 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084226924 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097081502 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072116606 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126852077 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086786765 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068272975 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106516954 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084195494 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090782213 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073477915 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092479842 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069380494 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09001464 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068389583 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09258897 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069059029 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092331547 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076337821 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104300423 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08247273 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093424077 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066810141 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088244917 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072963036 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102602266 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092787514 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075048114 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092760312 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085279015 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094677309 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06814575 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0910468 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085991763 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089408785 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070920401 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086077147 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07222322 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091411428 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075922108 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105766702 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069070473 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094717895 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069920877 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086021359 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082682528 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091293491 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077674417 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10425084 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072041183 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089725976 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072419626 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104890288 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0877912 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068386493 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071422232 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.102325608 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065755047 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094110247 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102551212 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071690879 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096256298 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083922813 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094780013 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072487939 seconds)
  done (took 6.954239312 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078234159 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094818383 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083053501 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104393469 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09477643 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076348689 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094537018 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076253318 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09487726 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080000414 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095865972 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118326093 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070200169 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097855992 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074510113 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096364306 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074628238 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09677837 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094098278 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076402617 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094654866 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084620445 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096110573 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104070002 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106689692 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091410165 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074374996 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095833418 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104029067 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077488097 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107732301 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075952042 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096576298 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102808325 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087509312 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096446079 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067509643 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095128252 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074248442 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09674213 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069908622 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104804097 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09556793 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072234899 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095592863 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076218009 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10382728 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107730178 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079469207 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101755118 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076046814 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105401322 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095422478 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076383417 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104430818 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130142971 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085801167 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106392326 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095732116 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085282217 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10413065 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.112325812 seconds)
  done (took 6.610159874 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091962069 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099002193 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100063544 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065888945 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06662727 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094592954 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066899747 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086231762 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078979965 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098325945 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080634428 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093066043 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075914172 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10135576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092548985 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076888716 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09372824 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072804052 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099336384 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071823026 seconds)
  done (took 2.629348008 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078908688 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106109128 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070613163 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096053101 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073728487 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0741824 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093439847 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071080887 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090978238 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073378425 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10050192 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080575141 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090931444 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075272872 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100747797 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075509322 seconds)
  done (took 2.279308381 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081834387 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100856634 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083985653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090089456 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06756125 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086746176 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06963557 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064057701 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087751054 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083763559 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091057061 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071051364 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090143552 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067444823 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065195891 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09426203 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064885905 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088381362 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069102441 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105117072 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080480487 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088247372 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071010832 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091802459 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070982816 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095784271 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070129439 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066892677 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090221425 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068935946 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091208802 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076253527 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086753071 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068653359 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086974083 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067750167 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068057568 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.09061592 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072263736 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089916774 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068286845 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089510334 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070210881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068699179 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086381903 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069253018 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.086283312 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076228988 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066710528 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090117023 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068467162 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092756719 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069447346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100751549 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072946384 seconds)
  done (took 5.321141484 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084495066 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072042942 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08641985 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067539585 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092700316 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071656185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071035846 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093189397 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07075022 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088095947 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07213749 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09205168 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07174157 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072095534 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092548491 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072738 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085945581 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071568882 seconds)
  done (took 2.360547485 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076728372 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069003806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097754483 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069212468 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089565259 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072131983 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065457554 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089174232 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067912368 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088599304 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070946381 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071930596 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088708648 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071751013 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090008191 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07068369 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070840494 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089117099 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069638796 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085739692 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072118078 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066971998 seconds)
  done (took 2.637572767 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076568727 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096238148 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170398841 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112691108 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084801578 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.104512841 seconds)
  done (took 1.578628247 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094887757 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104639867 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070042593 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110644368 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078582856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092024484 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072451512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09051031 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080747568 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106180648 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070439824 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102262071 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100427686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082562407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098618922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076735776 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092592552 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071287075 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091163535 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110803102 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072232437 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100498215 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072050661 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092593845 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071674774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100881341 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099671287 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086351886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091854008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079947592 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097873211 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070495932 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102637244 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105300306 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072965169 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101879398 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071457443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110807513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09673368 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080495033 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093623975 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077891091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101472792 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075275148 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102436661 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091380289 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077641208 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091418658 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072437148 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117920152 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097658888 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079877837 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098060573 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080328445 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10289434 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11704168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105589906 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080058564 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099204834 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104815636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081731449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098102469 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079229249 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106555897 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097713786 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079628749 seconds)
  done (took 6.91833066 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086231424 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109664238 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071675908 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106811252 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100616476 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072049739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091098584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072395613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091148427 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071944083 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135073604 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070660245 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102304432 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10104905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071495962 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092424762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07182461 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101797255 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07080922 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118278081 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09165472 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080439386 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101387134 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100704077 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085581746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09914709 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070826225 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09351547 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07002472 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093151157 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096000349 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073148352 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100852611 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071050656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10118268 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07135528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092615374 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07603463 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093759798 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07675339 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101910936 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111357903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071537733 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092945105 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104936448 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072012442 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09220707 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071597214 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09099218 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072222036 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107228793 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084923887 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107133915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100914433 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07148301 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09319193 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071897427 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093032053 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071001993 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098715274 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100058911 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072178538 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119056066 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070715652 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093195956 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100146429 seconds)
  done (took 6.824044452 seconds)
done (took 134.449679587 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20649992 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189590529 seconds)
  done (took 1.328230998 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072208748 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098959554 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103208019 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13021773 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091864417 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102873028 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122880092 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083084325 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069168384 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092252854 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069381454 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092893582 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134353387 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069144435 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091347483 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071181663 seconds)
  done (took 2.43366103 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10733994 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203635033 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114570944 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068632693 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103620757 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.082017739 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089887039 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081084198 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096135019 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069255358 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101472422 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079686499 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067878594 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100993856 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095296952 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083122181 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067125267 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103153448 seconds)
  done (took 2.656585114 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109855261 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151434255 seconds)
  done (took 1.200086855 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206305032 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.128536634 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.214325728 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.444141998 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.219910713 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.302629265 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.182220997 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183194085 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163072386 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175684628 seconds)
  done (took 3.154981806 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103386137 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177957546 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324261242 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142936671 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090776415 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.121357562 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144437936 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114113163 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085785414 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106505472 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105047665 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081172171 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123020792 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077154872 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099472449 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080275041 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126875798 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075809282 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.10182033 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078523551 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123130209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069247959 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099649139 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075653661 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10303893 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080173084 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090317651 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068816828 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098899992 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078906174 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103707302 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118161558 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081966036 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136374233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10724257 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.138416223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079768485 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096892373 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075954631 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097180564 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079725884 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102510842 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108073205 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081374957 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068803617 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102562156 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06834355 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.090126817 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082912554 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102302153 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08197608 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.103403105 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135772715 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102197226 seconds)
  done (took 6.532699084 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.770614195 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138905866 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074822707 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.83754 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119068584 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086024247 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.757959374 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095878471 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239784466 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768137722 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117049566 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078672563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.21297165 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219756914 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.909009905 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29173935 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.650642369 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10904754 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111668994 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137968687 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166607713 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161650097 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153223482 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413227231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100685325 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074543754 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141058566 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102691227 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145120665 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107276037 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07691754 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159548357 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230760925 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187884574 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076695255 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094858084 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072890046 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1546348 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24763571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19728937 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163854084 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070902404 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07227144 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167109347 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13609892 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070867983 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146000849 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157046378 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175808167 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076946933 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100508892 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148066762 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145396873 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148307469 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105091715 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297644195 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276309803 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095487769 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126272153 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087646627 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242688261 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085080164 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209452498 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143030318 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195877552 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073186394 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759615438 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153052869 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071943149 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101415645 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124736122 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077041159 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165756832 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.129221502 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390376247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147106869 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098588332 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072729762 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211874361 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085632115 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094603398 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14656622 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077120548 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127356617 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173408506 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152809586 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15342431 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210575402 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.171314893 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.146832177 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076787312 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129188907 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099759249 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195196591 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201380323 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14687883 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194456003 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146717812 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147399599 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151270814 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102967655 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155821227 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125258176 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106705257 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145977682 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199768603 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.12645818 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08704135 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097262968 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.146099964 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130434234 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089020411 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.166382826 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156358411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.437080738 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.15727541 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091411029 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089746687 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144219321 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169155213 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079183061 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244228276 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128002757 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153485098 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126184596 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069633621 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125843866 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147328903 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104937576 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128045587 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144425426 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100706918 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219926383 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.176446789 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105293733 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200472387 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.167479527 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100555982 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156334997 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125902649 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151639246 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080330445 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167112453 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077536297 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752052538 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14909255 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127268858 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075032433 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170072492 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094501479 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086088565 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10819935 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069957395 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767703605 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086576608 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105515579 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106509879 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079435072 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126128196 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141528534 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098292396 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146728858 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21279736 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079946927 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123723885 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108561879 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.145476372 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078094763 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107860567 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108113314 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087519211 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128941854 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097799084 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086998754 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153216923 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167549306 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.180194876 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580582507 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073807168 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107298391 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188281179 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095611859 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27163662 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142143672 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1850814 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169243756 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083265236 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304070119 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.149908216 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170980521 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109562449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158712251 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070158849 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142585167 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169638815 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074731693 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078154722 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169601809 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.153889211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148851825 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.939078095 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073463747 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209685013 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092679389 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155164176 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076458182 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103039417 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270151579 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073215264 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152955978 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.170358339 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076415859 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108384029 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.831177633 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108156116 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145452468 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077330442 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203928351 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147264129 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162554006 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14418962 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079762465 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145586752 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213373721 seconds)
  done (took 41.915058055 seconds)
done (took 60.153932573 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288381945 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197696836 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262399048 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153171241 seconds)
  done (took 1.94299352 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.151676204 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108759106 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123997243 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089757764 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.130712076 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069158286 seconds)
  done (took 1.637582351 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.440267004 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.283336755 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24459478 seconds)
  done (took 1.934237807 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.309229953 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237895595 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465696758 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.311448922 seconds)
  done (took 2.399144798 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199892377 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120305135 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.09326192 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087744215 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167738813 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271266609 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133580976 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197762381 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080982004 seconds)
  done (took 2.364163805 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.208439004 seconds)
done (took 11.447186645 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.142236433 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.142287996 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.348917306 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.226317755 seconds)
    (5/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.312280831 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.268429391 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.103854131 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 0.130352134 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.111663842 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.148936077 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.256535979 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083245613 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.12223347 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080247197 seconds)
    (15/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.222057851 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103123604 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.181424385 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.277984146 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.098595708 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.10357495 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098042446 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104654247 seconds)
    (23/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099669065 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082045726 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054155163 seconds)
    (26/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.180040309 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.164427535 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079261433 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.255612292 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100288196 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.114442789 seconds)
    (32/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.219201505 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.166759943 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101511618 seconds)
    (35/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071857704 seconds)
    (36/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099026719 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10326319 seconds)
    (38/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116470133 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078383461 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121646467 seconds)
    (41/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06910428 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102545558 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093784224 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.281257422 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173790901 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.198720194 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067418638 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.117951529 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.168447965 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076947093 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.196797415 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.14187545 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076986586 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080663263 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.245450526 seconds)
    (56/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.12920016 seconds)
    (57/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074783602 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.263685944 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.289968102 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098722036 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.105646324 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070607523 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.262875375 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101691794 seconds)
    (65/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.137106041 seconds)
    (66/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.124010577 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081894827 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.148630486 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106785904 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077234767 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123935538 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138437644 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098135467 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102906706 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.251149222 seconds)
    (76/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103831166 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054778686 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069155286 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090938442 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072899332 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075764287 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092107586 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075843174 seconds)
    (84/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117646486 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.223404483 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.257197528 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.12008719 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.070423299 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064528263 seconds)
    (90/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103808998 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.178663871 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078201183 seconds)
    (93/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.247714785 seconds)
    (94/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055601838 seconds)
    (95/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064579331 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116402326 seconds)
    (97/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05462929 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097645334 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.247970488 seconds)
    (100/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112427033 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068444578 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.13441949 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198754651 seconds)
    (104/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076312051 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.109594616 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076824137 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117459238 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069514508 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083555768 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174661797 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.178630907 seconds)
    (112/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.280951884 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.274312643 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098145669 seconds)
    (115/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.170362626 seconds)
    (116/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.178589858 seconds)
    (117/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.104501212 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.16050894 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.131336403 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.140280655 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.10249708 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068343077 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.100045221 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141548807 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100387571 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095315175 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098210377 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076176993 seconds)
    (129/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054515497 seconds)
    (130/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079188478 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070501313 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053538182 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100436168 seconds)
    (134/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054808093 seconds)
    (135/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.259772561 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067986139 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099808472 seconds)
    (138/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096979632 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169756457 seconds)
    (140/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056313754 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053353354 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128349478 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05403207 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.310955713 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.226453333 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092369844 seconds)
    (147/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075881578 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099128797 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078562438 seconds)
    (150/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.103551102 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124262358 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071466265 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153793616 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115251658 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075717545 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06870915 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078932495 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073139337 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063207341 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172049793 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10150625 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077814612 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107817393 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 0.169779214 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078964834 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065814124 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056038075 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099473273 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094920052 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131863974 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067987791 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.193941332 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074742498 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088714878 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.144333989 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101764145 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053535417 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135801827 seconds)
    (179/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056013844 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067944322 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077958842 seconds)
    (182/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102782109 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073736261 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.154456339 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.106834449 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068648627 seconds)
    (187/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066348175 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098875147 seconds)
    (189/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05498453 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07398841 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.078250781 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054076036 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.241866677 seconds)
    (194/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110836999 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093588927 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099222255 seconds)
    (197/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064734204 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.0932844 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054205031 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053044705 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102912408 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077034075 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099163598 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077987576 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205722006 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078053884 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.174891778 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06737596 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09202445 seconds)
    (210/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071896752 seconds)
    (211/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053278867 seconds)
    (212/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098129626 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055649241 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0678371 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091048679 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092554483 seconds)
    (217/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.250042249 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064228516 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.169308565 seconds)
    (220/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054381073 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053336147 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078622136 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055480715 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06806387 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093054287 seconds)
    (226/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054622461 seconds)
    (227/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054792128 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.246019093 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053376768 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.117354296 seconds)
    (231/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054088234 seconds)
    (232/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062742153 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.263809959 seconds)
    (234/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076614852 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055729882 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070315325 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10730959 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064949939 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09442707 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093372178 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055134428 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.093264763 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08398178 seconds)
    (244/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063279103 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200077927 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067309283 seconds)
    (247/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078788961 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054759388 seconds)
    (249/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121360311 seconds)
    (250/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119152842 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069786991 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.1033616 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.0541504 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075018833 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092331145 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070823564 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126152884 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055500205 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076194446 seconds)
    (260/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.088763755 seconds)
    (261/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217075057 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054158398 seconds)
    (263/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055154966 seconds)
    (264/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090320399 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071504077 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068340103 seconds)
    (267/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100278132 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091562509 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093341491 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119726533 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093783077 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.196485914 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148830978 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097657203 seconds)
    (275/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072412305 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053831477 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097135158 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078175537 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055642487 seconds)
    (280/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100067692 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068942809 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205734246 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067914215 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089977066 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151500582 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079030113 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07781283 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097660236 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.1159708 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073163903 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092698505 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054570526 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064147663 seconds)
    (294/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095779534 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05467849 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076107732 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076930065 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054916985 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100878866 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.102619936 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198184419 seconds)
    (302/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075963187 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068995343 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080694633 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07604206 seconds)
    (306/309) benchmarking ("sort", Float32, false)...
    done (took 0.155794251 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069079173 seconds)
    (308/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069887489 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199275804 seconds)
  done (took 36.299911846 seconds)
done (took 37.268238967 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085657127 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122344147 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078634246 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.122087324 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085049978 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107798885 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076732309 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105982134 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084633706 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109211343 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08319866 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056601796 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103437474 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077691143 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.10314133 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096290103 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106789174 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075355926 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.101320787 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068077691 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076226837 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093521731 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07039829 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057105386 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106144648 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075203434 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100239117 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078960927 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.09205692 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069721112 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071765061 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100211002 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068779582 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081118172 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100547002 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076951772 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103404689 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080752161 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093266335 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070484973 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077088333 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092291808 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076318112 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075711305 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.099126285 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074231837 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100321483 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08416799 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120157296 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071362892 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076902907 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105727528 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079384794 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.10080913 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072639001 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100864531 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075022411 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120230805 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079142964 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070138856 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101962861 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078531091 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096870791 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07878441 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075900392 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103399825 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079823485 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098082447 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079254703 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073459958 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092549392 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077077374 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096089383 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069610262 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079132263 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10499976 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06855543 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073858417 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.101158474 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074541088 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092519488 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071381362 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070295924 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.100244213 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070184664 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05669031 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097096509 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075357847 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090935969 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078360455 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074764005 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.10004765 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071401306 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103168475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070622726 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074594974 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092959949 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070124706 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069644459 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097006189 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069719909 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07033942 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102756291 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070248524 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097429713 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083913111 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0674074 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099408508 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068090958 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091258335 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086468581 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10148833 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070651986 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070396356 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091439827 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076739796 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067415612 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093132123 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068923751 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067248088 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099227774 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067903572 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093797093 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077174269 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082146835 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095807838 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072092163 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069894271 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093570772 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07452288 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092426346 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070155235 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070241107 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089901575 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071365722 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068228584 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.101368829 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070723702 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100781397 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071793913 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077030854 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098414635 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075453422 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073164148 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092521697 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061412072 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069986017 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095345696 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070965827 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091692824 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071461863 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067965457 seconds)
done (took 13.812745082 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071385802 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179291713 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132337544 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101053462 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.117339276 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068795754 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105934497 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134383126 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071634967 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.134161026 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091767487 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114296688 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144819007 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069806323 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068249448 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096862809 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071708994 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117474721 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107772981 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.115861381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148391259 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068513208 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128721849 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093668107 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118622478 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132691377 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069366721 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096824342 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074267141 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121575895 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090102951 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071308116 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094939862 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129399852 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100398428 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114139462 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070054426 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112736974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069449371 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068004883 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.123077197 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130338645 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085040854 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111957487 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071761299 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.096696647 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070644742 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114955749 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118760471 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086700836 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116909326 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140589156 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072658699 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1100458 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068536328 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116535909 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086446139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095613959 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070332573 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071902539 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093549579 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072692118 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117674471 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096874641 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09812314 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085533946 seconds)
  done (took 7.62997371 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088834313 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120644881 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088669646 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112519175 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069827419 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068978915 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095052945 seconds)
  done (took 1.678712754 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070735426 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09122026 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11912695 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093066461 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.115754378 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091358735 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10481572 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069982582 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111925172 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070913173 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115331504 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110647935 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096324025 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077260733 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119256659 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071146584 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093178566 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095327174 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073164934 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118501505 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073756784 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11534683 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072498656 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068919267 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111425036 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070018319 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144882562 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074059481 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096378024 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073566138 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067444671 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147175055 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109641396 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081337583 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093980185 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086480012 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109712714 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069249975 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086910371 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100446745 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085721668 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095025663 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072105418 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067794768 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099848652 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081837126 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095301189 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072559434 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072844903 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116141319 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071113634 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109205879 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072337082 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073625094 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096585761 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075818947 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104403242 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072818895 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090358134 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096818004 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088584532 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113125103 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084883803 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112234938 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073140128 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108925352 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086326449 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072290151 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097629884 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073990005 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112424735 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069351238 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071043859 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10737787 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071421259 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119525225 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094167096 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096017567 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082002495 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068845816 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.095848422 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071510378 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.119477857 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074726743 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069192108 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100411606 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0734403 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092544282 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070756617 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07341949 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093674215 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072544546 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073077704 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095307763 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073478097 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112231699 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072067137 seconds)
  done (took 9.751435417 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073099913 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071266694 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097435496 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071491465 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070366456 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096598681 seconds)
  done (took 1.522203974 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102999885 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098078374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085071023 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100564042 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.113123643 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111229175 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086845112 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112154967 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088319696 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109418463 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08561901 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112090303 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090610037 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102912119 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085199687 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101917863 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08594057 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106231593 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082909846 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101344586 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091795541 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101783306 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077843032 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112592668 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074745635 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100697372 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082153411 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10755879 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084619915 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110566151 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077536553 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073530635 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.101566081 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110065269 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088536593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099233615 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077727614 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074048294 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106423066 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074349044 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112021806 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077174262 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107820672 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074895669 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11208216 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075488985 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100955057 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080818085 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111154228 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07606663 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.099756306 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077177798 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09781391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07654661 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075197173 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11193972 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073870859 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112299195 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075844995 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101525499 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073916227 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099270818 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086458031 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099381116 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084224752 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.099947016 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075688789 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101940903 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077986615 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100212959 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076659507 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072775628 seconds)
  done (took 7.711106322 seconds)
done (took 29.314793574 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.672049904 seconds)
  done (took 1.708353629 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813796279 seconds)
  done (took 1.850734636 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.345698201 seconds)
  done (took 17.385123535 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.675900268 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.833483229 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.832752065 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163493552 seconds)
  done (took 3.54041964 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.911460961 seconds)
  done (took 1.966114086 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.250502778 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258752691 seconds)
  done (took 1.548336563 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763445039 seconds)
  done (took 1.807418655 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.346565492 seconds)
  done (took 2.38552119 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34670376 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191018194 seconds)
  done (took 1.585887555 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.540257511 seconds)
  done (took 1.588835636 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.028441524 seconds)
  done (took 8.082610663 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237779252 seconds)
  done (took 1.300268475 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276938046 seconds)
  done (took 1.32912796 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.418419931 seconds)
  done (took 4.469511084 seconds)
done (took 51.59061704 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08231415 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08370297 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110403416 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080918713 seconds)
  done (took 1.403949892 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082614721 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075398573 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107076975 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075378125 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107335706 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076997198 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103222587 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082039876 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099650634 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07949116 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075793807 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101340452 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079617675 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10265475 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075095136 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078437279 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10622011 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075597884 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105078013 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077057877 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098062936 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079867755 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078615085 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101369819 seconds)
  done (took 3.183840134 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082261313 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075873746 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103038612 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075311046 seconds)
  done (took 1.396410199 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08227241 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120495288 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094422956 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104891545 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099416234 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117242931 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073434253 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072194316 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101761248 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080742389 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095309837 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104126506 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.117918189 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080406244 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108273821 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070164559 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070632025 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118009632 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080536858 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106925265 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074221735 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105259916 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07197956 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119049118 seconds)
  done (took 3.331402505 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081575238 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130609661 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084006211 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117696326 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097861642 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067369711 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106544311 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095503204 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157932611 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068293127 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100507564 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069019381 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10114597 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069637212 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080750671 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13973621 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141739879 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072714897 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125807955 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070161843 seconds)
  done (took 3.037004902 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079476868 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07264038 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09385241 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072538017 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078303018 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101794835 seconds)
  done (took 1.564733113 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072596732 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069556279 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095141123 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07025716 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074205602 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095731378 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069625876 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069755792 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095549945 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070543968 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093903103 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07015828 seconds)
  done (took 2.010631705 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.465270688 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072198967 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095801051 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070327874 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074380238 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095022828 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084550887 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070752386 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121667051 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06935979 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096002983 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072728057 seconds)
  done (took 2.455074854 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274968949 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080753006 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.341797411 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174301746 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144603518 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162959534 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107625023 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147628689 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207202825 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14575298 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237334458 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206832032 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140091482 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17380523 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119682463 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137895838 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191836046 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230322819 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134830125 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235569306 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191516402 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162866483 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214626718 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107135358 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14089215 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150431164 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101429713 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082538274 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239843517 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192984045 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182669411 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143751619 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125590031 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243236463 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229809141 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177878091 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168806663 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115792936 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162411369 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173862997 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273638628 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118011158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204507379 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139391039 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110219107 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181746882 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152840472 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153075668 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142393596 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118859718 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183298115 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249929087 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173439309 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118403523 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142624163 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146107601 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.149773569 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131779655 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258753168 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203725084 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190974891 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076122624 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127166633 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195638287 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166274099 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14732535 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18606996 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098727278 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203287563 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19657004 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150629464 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209186394 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.168300018 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120164794 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155159227 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178513033 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1612055 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24264655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159952645 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102429818 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159527239 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133243 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086430386 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173941087 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079240009 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244561294 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130120288 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.146402456 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143017818 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115291593 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142424077 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230541084 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212230783 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109458159 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.096189924 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135100056 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156595863 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184527694 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119206223 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14069853 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154343602 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082250902 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199741986 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079212754 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159861028 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107942522 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159708074 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169290847 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078800761 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185972386 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108024863 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.134057379 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169789388 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230173352 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11968754 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086893346 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237392327 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161928118 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13703681 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183710803 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227335522 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131749194 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131614331 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18749569 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255485134 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120047552 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206832069 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136279772 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115274907 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091497844 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188782779 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147180828 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155061231 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088228715 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159808714 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239060136 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103500548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101976186 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172412578 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112455731 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110306186 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146750586 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104631295 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.126318547 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133576159 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138606534 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177161841 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159428053 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140344035 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159066926 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131496374 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231508547 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120445245 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110953949 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135750817 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099431417 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172673831 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22734686 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084461952 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238141933 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162591029 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13639841 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153695492 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087182063 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204248171 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084121879 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074026503 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208872376 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144453179 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143404937 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19422611 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136512221 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162584677 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158576412 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195309564 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168860009 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169447265 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139742851 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090395221 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145681721 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188770885 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078342081 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12682245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086854354 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136424339 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126376305 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112211013 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181454686 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163187423 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129388522 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147428322 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128281319 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191251286 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106149659 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168909325 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155305421 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124681668 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197307863 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226840755 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172243072 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133465155 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183316413 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.10162709 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078301024 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.12117131 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165554493 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113394947 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089343253 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151145473 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216121826 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165193956 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173258655 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144622353 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156385617 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224710553 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07622886 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147438573 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1901131 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160862457 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163975059 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122526336 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10585809 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21094023 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10978863 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287472067 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150262983 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16009668 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191526183 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.136526796 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115152913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10869231 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202733592 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137910315 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191459183 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132134415 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12133279 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142737809 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085217063 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137245728 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190368084 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15401162 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175097334 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151391251 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168237985 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107856235 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151450824 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159620915 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155965361 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067020679 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153496112 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232561299 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126993933 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153828851 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22385171 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08410115 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157789452 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249808954 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211016021 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089749764 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141665797 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156266794 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165849888 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153559681 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206815184 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143645416 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172446241 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143342579 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089762682 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120546575 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130629819 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113812031 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128765366 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145281171 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152684558 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125703127 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167524277 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144706593 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144617859 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153558726 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130905496 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096058782 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13041317 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247261915 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156591007 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24655007 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133472948 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190953671 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238951655 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104489171 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08493002 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.11152861 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179693901 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087953482 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198180499 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100472933 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137701399 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16211889 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209169528 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101092376 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099727802 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144387427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171581004 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144108591 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130526557 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.113432404 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233420692 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136651381 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083649556 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160084882 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137216123 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136355466 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247874336 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064644634 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130024347 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079128319 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112580291 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166845877 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225370393 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087132695 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.162826314 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158283058 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157066115 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166111316 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132211526 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129858137 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145055306 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188211775 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163509654 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.12277399 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148075366 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166141114 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226813542 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139244964 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100054792 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239184963 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225182066 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234477395 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09237372 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150442862 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150749455 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14618513 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210983153 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08731393 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238364458 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114814641 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17499638 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136702954 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1259796 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165073139 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128259522 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093404035 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216866812 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154571359 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112910493 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101674248 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147784548 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157687014 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13645839 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104760032 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17879642 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076119782 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202142945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209706261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113351774 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139438538 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127885439 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088009389 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140702425 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137681122 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118104578 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.127295795 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246948052 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123223883 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190245517 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208460001 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149062795 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17682546 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13416421 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670290105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109977094 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196250553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153633632 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279148098 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104948753 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157167829 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146396906 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157780528 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208630765 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139762689 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183558737 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197751217 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157805075 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083559257 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136650161 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146536335 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122948172 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141503429 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150395159 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150224869 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.1319272 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156084958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166106918 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.113249585 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101887617 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229000161 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154932818 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180796066 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20782215 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090190633 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155163003 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210156387 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084656042 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18607188 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196862891 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142691819 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133187566 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112649415 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139648811 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215412922 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105192636 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203499541 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187645933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144032063 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122293504 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.185092506 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169582269 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139897957 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16069628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128463068 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147862418 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150767702 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116834423 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081727735 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141220417 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147538405 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.132883455 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136254081 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.126681534 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223920951 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075615529 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127552846 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134371303 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183830875 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25299315 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121689424 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088665958 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153555971 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148192145 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151029854 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160834844 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113531196 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113486512 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088078037 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.144199314 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143818069 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151164961 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109746843 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145554198 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239963122 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115548791 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232839796 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129080564 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143194468 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072950797 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111860698 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126295866 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102477376 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138195276 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130110032 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24238588 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103424536 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123302237 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124573814 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078130851 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113926706 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169929999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145912117 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157315992 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130397073 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067831058 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142796012 seconds)
  done (took 74.771018412 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140623914 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111000095 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.126259697 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.182440338 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155563472 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247168721 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.189762229 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232038779 seconds)
  done (took 2.521394489 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073669641 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.126578215 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10637047 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.122031813 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096487978 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072658134 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.313900553 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.115311759 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069784002 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122916888 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.125159502 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.099561098 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.493604455 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06926235 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099173968 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091882682 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071627323 seconds)
  done (took 3.398380843 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.456914191 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.672265167 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.459658477 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10385529 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.974325603 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115535648 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.48305924 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.171849063 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097490984 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44213569 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729864219 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160825238 seconds)
  done (took 18.005365025 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078860678 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072049296 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115426579 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088323712 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102745483 seconds)
  done (took 1.594418806 seconds)
done (took 119.715014601 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084972297 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385851201 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055974806 seconds)
  done (took 1.614869829 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089953275 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087958216 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118358385 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087009012 seconds)
  done (took 1.533607045 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078788241 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079628309 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117336178 seconds)
  done (took 1.422184989 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.303636947 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172851889 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095098361 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087505412 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080767185 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109617842 seconds)
  done (took 1.426381279 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077844797 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077716024 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105497683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079707903 seconds)
  done (took 1.483904423 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081727785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055425663 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058024434 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086861451 seconds)
  done (took 1.430180111 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094883292 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109706381 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085049939 seconds)
  done (took 1.435633384 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113192737 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.1175833 seconds)
  done (took 1.379928357 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086350487 seconds)
  done (took 1.229043212 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09772936 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147819066 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165934285 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.14309936 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176105429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143570583 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118638792 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092878701 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110466663 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.12144284 seconds)
  done (took 2.466939581 seconds)
done (took 17.209998216 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083534287 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.398554361 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365232906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122851422 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673861443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385863117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991835563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124812422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112976413 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099910461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087261953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679921723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981994795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326549593 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995971507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326622547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681117472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07224921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096969543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073247293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974752625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099500602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07127914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098085436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653974708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373726187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100548468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326849164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097986863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074210107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357766589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099634263 seconds)
  done (took 16.147695909 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074989139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14956683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078723339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086266695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.10261978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072134311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103604421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072736694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154173273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071015633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11645649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07203674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101248797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073042852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09073045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100020229 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072253755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099195402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072966502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07201168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118136981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071173718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098028752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072327309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070635335 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112121921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071942737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098842359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072180009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072254777 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102716661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072003546 seconds)
  done (took 4.01477641 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120211266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.159231648 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077632419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134869184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144857309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075141141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176189896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097605289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158618696 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070619645 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116778277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071425849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134247638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07216432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120171999 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073031344 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09925815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072985507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071152506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099764363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090673039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099099393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072574715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071488614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100690887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085353222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10080305 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075534761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071423243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102374479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074531342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100546849 seconds)
  done (took 4.346721395 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076679019 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078492325 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114778524 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087647397 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100520797 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076135712 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075560464 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101824845 seconds)
  done (took 1.862859676 seconds)
done (took 27.510616491 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08320532 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07252772 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105578065 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084854707 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103035777 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083895663 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069954316 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107072249 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078467152 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075311221 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10826501 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070780229 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.103202594 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071220098 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077097454 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100160014 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083009813 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103503313 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083704354 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111055172 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074610601 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078540929 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10620917 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082973988 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111773868 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083662556 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110985874 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078186222 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071607491 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102501935 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081094257 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116061583 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073309133 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082043997 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100884405 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071755627 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098412662 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072527653 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083289849 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107512497 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074260593 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107101944 seconds)
  done (took 4.893550116 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094122135 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095838103 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119398884 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065833913 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100744339 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064748879 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121125851 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064695334 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065074803 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.122603748 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059528427 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060491704 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090844713 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057731634 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060912369 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058469508 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092749398 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059682896 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060169966 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089246774 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064732697 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057033884 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090142131 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063829944 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059125922 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06413953 seconds)
  done (took 3.160131051 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080353486 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085372932 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120609847 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131821204 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138769414 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078085246 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110708665 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088783415 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11637308 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070114412 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.102121222 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101988542 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088891327 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107103748 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071110882 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114742078 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086004248 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071880444 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106975836 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09172535 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116798731 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081842868 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119970776 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084172128 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06965194 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102546449 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074792972 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113717958 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0765374 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079704611 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.104957535 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074175462 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100913438 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082850663 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103304215 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074017878 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090493984 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110752005 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079575932 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099671244 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076155621 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071424233 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.121135777 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115013915 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099594302 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077432923 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10616331 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082391802 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069600169 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118185383 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080338791 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098826729 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074793977 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069734876 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099098771 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085371903 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099387353 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075143545 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080196279 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102119731 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084149757 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073398535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115968083 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070181315 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107346907 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070288257 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070503763 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.099321076 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092919836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101595601 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111874913 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100532612 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07263937 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107697076 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08032771 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075940343 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100027478 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086241444 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107944597 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076274564 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079726949 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103463501 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074941587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116423984 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074851073 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07202235 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100051338 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079005801 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073312514 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101013253 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085496284 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099586572 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074870703 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115355593 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072141932 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072532261 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10563395 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076003685 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069431309 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113011792 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076457354 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100901103 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080410366 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.099414242 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075646192 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07992698 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.104898128 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069687459 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103213549 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078630848 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071416536 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101318947 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074071407 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099186574 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082591895 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076868093 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104341235 seconds)
  done (took 11.817930077 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203270747 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.195149909 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073866299 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186861102 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081090767 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113868662 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.187059711 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10201151 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10173764 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071154305 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.100609524 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111423437 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133825756 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.149473972 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085093297 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070308882 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.120256553 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140686998 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161796466 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.183645098 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.121835412 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078900743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.102361094 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07271042 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072770634 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110863104 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087636932 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112222964 seconds)
  done (took 4.498279422 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086543546 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131330364 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078156938 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118859486 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096703602 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097976968 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077320257 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072636879 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11227368 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082750686 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100140348 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077830723 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077585958 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109495235 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071641873 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109363198 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081526005 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101363455 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077009402 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075627609 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107276465 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084260486 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104783154 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071522247 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07726352 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100661655 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067997908 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11964013 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071003648 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.122522886 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069896267 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106475059 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082181227 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071316449 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100571055 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073934226 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072700132 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102930389 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072710323 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097910797 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070978472 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060429539 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098895753 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084932403 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10511344 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064353555 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075619263 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106109109 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076588227 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067759227 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103686034 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073243804 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103501119 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079900105 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075258825 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105658841 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074442342 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096812162 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078850146 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073125814 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095269772 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071488693 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075266251 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09947595 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078799987 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103858423 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070752418 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072592427 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104650846 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077953861 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072035894 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103079923 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069364182 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101508701 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077475832 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075322458 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.10335401 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069564317 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070710371 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.101753486 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058308911 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06984768 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086686925 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074431941 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097268537 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072325855 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073324243 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109277097 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084739859 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101552914 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078431585 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071571833 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.100691178 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074493592 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094491781 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075888167 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085534304 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.118283802 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070876926 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.09890481 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084831387 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.1049765 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071848178 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059682525 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107331927 seconds)
  done (took 10.287997958 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096972268 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123481268 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075294645 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08517476 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12688389 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096006552 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107577784 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078384045 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072477853 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118630467 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071267677 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108599173 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076147942 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078647016 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125984155 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078650997 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102190556 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080874996 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106979506 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.108946728 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08395945 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.116042613 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081318904 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100443618 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076393573 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082744997 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128684256 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080424319 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110219879 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085600408 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109754981 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100234336 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085479235 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105630119 seconds)
  done (took 4.444267726 seconds)
done (took 40.24848224 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.236006129 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.456006262 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.224362839 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.176676555 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.250455483 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.2582709 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.239885972 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.225476294 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.356795872 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.228751564 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.476492404 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.930676635 seconds)
done (took 59.232155637 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.330454488 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.370501344 seconds)
    (2/2) benchmarking "String"...
    done (took 1.502560024 seconds)
  done (took 4.04368608 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.581737315 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.218490221 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.510333932 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.230386911 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.228643149 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.657952588 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.92953943 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.099292197 seconds)
  done (took 28.042461398 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.240102862 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.618526811 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.763934132 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.756360575 seconds)
  done (took 18.54780568 seconds)
done (took 60.715385039 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.227799588 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.283504047 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.246043195 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.223046562 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.343294731 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.253373483 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.550271464 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.475850162 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.23196098 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.213344494 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.249117996 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.244412333 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.238430769 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.525490937 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.239624397 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.229797685 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.242485684 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.74445804 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.624639701 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.24343972 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.276306182 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.244246432 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.250073091 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.231116698 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.278522558 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.230688032 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.247641361 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.243780284 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.620557103 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.234069748 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.333087481 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.761920111 seconds)
  done (took 192.751340042 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.231237719 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.127312252 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.222934327 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.247743195 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.58838022 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.431695928 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.37245397 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.709586228 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.250192874 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.25600843 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.411670997 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.232219681 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.484007943 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.221322569 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240079562 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.3417094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.452072858 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.519370294 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.248972088 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.511791183 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.242702056 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.264030328 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.192152604 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.389905876 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.243436143 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.28534363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.267205721 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.250093517 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.423236532 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.380575217 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.275815854 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.243846788 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.839301556 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.09175831 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.231414578 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.248698287 seconds)
  done (took 150.13930334 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.521391722 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.232079403 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.232193234 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232105702 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.263341128 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.232504925 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790779623 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794842814 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.737096124 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.487040684 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.293096001 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504780887 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.234167093 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.232549261 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325403507 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.245246263 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.232792523 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.24757268 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.257809951 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234677905 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.233037533 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790622125 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.247189816 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.373513708 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241392299 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.233600488 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264581992 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.626613434 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233106598 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263800315 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.552590583 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.281140285 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234289217 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.562961985 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.967522496 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.344693216 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.235222848 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264194483 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.233006029 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.502253352 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23471867 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.233846144 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.236519412 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.854472999 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.235567855 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794197674 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.237535739 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.168495244 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.236727508 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234440036 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.541206575 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.775705346 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.236870747 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.234457036 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.236023731 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.234222283 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233749638 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.26514533 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.565507925 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.334608943 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.236334171 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.239187063 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266876072 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.234709346 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.380187918 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.237259838 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.729331532 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.288789974 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.345379922 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795470306 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.237057852 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328141377 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354012037 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.235609599 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.2335623 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.235228256 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.23519788 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.342359303 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.235304787 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.235091019 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.644663334 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241184336 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.237004064 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.294510076 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.235308378 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.329647469 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.235186376 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.570326069 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.237856915 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.234343714 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.989839547 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333259916 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.236667321 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.236923433 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.236324796 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.646856999 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799425203 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.438843275 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.238334971 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.563853896 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.238101307 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.657288151 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.767312446 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870204334 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23817856 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342908081 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.239240311 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.235765985 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.235644271 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.234841301 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.235090788 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263509557 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.234683931 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.293657028 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.634191794 seconds)
  done (took 349.92225383 seconds)
done (took 695.504485255 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.933031759 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.877029901 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.016046842 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.894591643 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.875503857 seconds)
  done (took 10.77063415 seconds)
done (took 11.946660526 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.427662109 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.427916995 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298090994 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430598646 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265804188 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447244539 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409485567 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.256359823 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.341824185 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.316033897 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341442047 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.286829621 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26490095 seconds)
  done (took 18.689738917 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568590619 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.558029216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303043376 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565124284 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276016082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.601859265 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43460614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.449489093 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435166203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246056381 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246488269 seconds)
  done (took 16.860192884 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.567170807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.572827839 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300459407 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.566971081 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273407959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566932633 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441016053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.456274573 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431297975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246723561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24550961 seconds)
  done (took 16.841252806 seconds)
done (took 53.567716419 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.24174556 seconds)
  done (took 2.414678165 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.274805242 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.43914391 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.258812003 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.24609164 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.242326956 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.243203262 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.246324401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.244008701 seconds)
  done (took 11.368513206 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.239542094 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.238772853 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.242156478 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.23832492 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.239414129 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238534118 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.241863843 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.241027486 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.237310359 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.238204202 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.239227381 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.241300164 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.242268641 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.242391174 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.242258624 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.241728861 seconds)
  done (took 21.018117198 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.241266516 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.239145087 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.238054748 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.240053982 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.238029874 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.240459152 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.240427795 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.239575354 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.238600957 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.238830106 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.240998214 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.239578329 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.23941659 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.240055139 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.240066148 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.24073542 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.239383913 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.239536941 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.243970587 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.240262634 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.240719627 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.238761591 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.240402278 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.240579283 seconds)
  done (took 30.935303453 seconds)
done (took 66.911123513 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.379945556 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.942406618 seconds)
  done (took 9.49737728 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.243550815 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.242460047 seconds)
  done (took 3.663252519 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.242140652 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.242965232 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.243063436 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.241865383 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.243687966 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.243131896 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.242616449 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.243935754 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.243269851 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.24448853 seconds)
  done (took 13.606155917 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.244137438 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.24398999 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.241096085 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.244698805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243451176 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.241106311 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.243188155 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.243197308 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.243619122 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.241933325 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.244600124 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.241353497 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.244872136 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.241161456 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.244550535 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.241310499 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.242145231 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241732514 seconds)
  done (took 23.548216706 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.244360186 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244729882 seconds)
  done (took 3.665410408 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.241502871 seconds)
    (2/7) benchmarking "second"...
    done (took 1.242028226 seconds)
    (3/7) benchmarking "month"...
    done (took 1.241180388 seconds)
    (4/7) benchmarking "year"...
    done (took 1.24041155 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.242580628 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.24083616 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.242399133 seconds)
  done (took 9.867264386 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.244592406 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.433176724 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.513506285 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.815439587 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.245509399 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.247747897 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.116056766 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.248109636 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.250888537 seconds)
  done (took 14.292308232 seconds)
done (took 79.317079839 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.251338631 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.237602175 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.176135702 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.243057593 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.253119741 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.580404703 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.262084397 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.361804565 seconds)
done (took 37.545262184 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.238273216 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.961461486 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.966294228 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.24071178 seconds)
  done (took 11.347037073 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.230550205 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.194641296 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.233028712 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.282750187 seconds)
  done (took 18.121829411 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.882920374 seconds)
    (2/2) benchmarking "read"...
    done (took 1.576802715 seconds)
  done (took 4.639520109 seconds)
done (took 41.526231463 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249122579 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.248205174 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.245535569 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.248202446 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.246708402 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.245860906 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.245773165 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.246475997 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.248588895 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.249187917 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.24845531 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.2495173 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248500197 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.248725228 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246216319 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246194401 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249227571 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.246638256 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24581045 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.248886912 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246069767 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249018869 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.246093248 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.247123307 seconds)
  done (took 31.122330881 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.250937691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.247169499 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.251366674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.25014971 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.247069202 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.249210541 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.250006724 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.24697852 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.249466236 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.249291753 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247614441 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.247772583 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.250600563 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.247850859 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249780735 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.248114967 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.2505898 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248526899 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249109146 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.248225493 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.250815507 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24845771 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.248847444 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251454225 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.247994517 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24861501 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.250784179 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.249126055 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250701605 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.24816341 seconds)
  done (took 38.657258593 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.255433863 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.258318137 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.249858538 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.250778853 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.250634094 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.251161356 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.251847614 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.250784119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.250796081 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.251536914 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.251358442 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.250909146 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.251224991 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.252735422 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.25154209 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.251282943 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.251747528 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.251834214 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.251936989 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.25086936 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.250864906 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.25186069 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.251410873 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.25160092 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.252154195 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.251991055 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.251130695 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.251142254 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.252406211 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.251703282 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.251898598 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.251833342 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.25223259 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.252481897 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.25277465 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.252071907 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.256333585 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.259205373 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.252915983 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.253111942 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.253533554 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.252557255 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.252754569 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.252362769 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.252527194 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.252191172 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.253058228 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.2529964 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.253168449 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.252978903 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.253086144 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253653399 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.252978277 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.253371394 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.254095719 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.253374055 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.253384909 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.253277263 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.252853662 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.253869319 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.253473672 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.254536111 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.253296699 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.253154189 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.25531586 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.25420679 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.253899433 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.253880404 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.255115427 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.254567001 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.254123674 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.255005088 seconds)
  done (took 91.38597127 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.254203858 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251939446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252636136 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.25275117 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252879378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254295212 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252405255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255263372 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25181569 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254782805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254433835 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253414964 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252117055 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254639711 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254706749 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.252010637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254989282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252989523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.254607901 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255533826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255755293 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.251973671 seconds)
  done (took 28.767633974 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255496463 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255573085 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.252838631 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254901981 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2525882 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255563636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255649917 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255919749 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254995155 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252911735 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252757432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255801663 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25291549 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253342568 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253891455 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252525471 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25530693 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253477531 seconds)
  done (took 23.763616815 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.254827402 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.254175456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.25559682 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254073591 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.25367013 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256328908 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253011179 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256155395 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.255887045 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.253980645 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.256467913 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257021855 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.257437579 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253509521 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25615839 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254086929 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.257567568 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253253146 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256995567 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254579792 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254288249 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25791992 seconds)
  done (took 28.805209314 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257829961 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257865464 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25364294 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.254941623 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.254481113 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.257083541 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.258025214 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.254932779 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.256973698 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.257406234 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255330931 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.257891116 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.25500645 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25615518 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.255522786 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254815356 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257022817 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256547776 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258243094 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.254595462 seconds)
  done (took 26.313599195 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259722403 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260565681 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259858754 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260199686 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258449103 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25940052 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259340635 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.259705055 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258327865 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260183102 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259229043 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259823656 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258854904 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259828025 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260009083 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25954628 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25926784 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259374762 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25952379 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260496403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260477091 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26025757 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25989816 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260304297 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259602812 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259119382 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260670566 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259891148 seconds)
  done (took 36.46242618 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260025028 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.259604057 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.257056178 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.256463665 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.256937998 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.257077631 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.258276064 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.256921745 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259325576 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258106959 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.259965972 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.259727542 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259846501 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.2613062 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.260367214 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.260224296 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259906369 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.257654878 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257119928 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25780709 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.260659725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259380927 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.260623063 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257719902 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257994201 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.260977649 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258837183 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259092825 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261978153 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258352318 seconds)
  done (took 38.961738043 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.279795867 seconds)
    (2/2) benchmarking "in"...
    done (took 1.280435096 seconds)
  done (took 3.754055856 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.258857792 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260587163 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.260586214 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258486165 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.259089961 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.261067512 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.261473387 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258925414 seconds)
  done (took 11.272958435 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.262809476 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.26113145 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26212196 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.261855144 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.262410294 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.262760339 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269984676 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.279963504 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.263759357 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.263129313 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.269124224 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.271110379 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.265346853 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262641297 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.262747318 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264275989 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.262022041 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.262820301 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.262521078 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.263092824 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263246719 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264752079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264764396 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.261497947 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.264702531 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.275504307 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2673387 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.262587921 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262793673 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.268314585 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.264924762 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.259258153 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26289628 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.263937504 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.262400721 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.262956087 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272829643 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280740375 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.270467107 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263747252 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263687557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.260205809 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.266363569 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.265777945 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265374054 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.263966504 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.263859418 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.261307621 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.265095662 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.268292359 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.268640982 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263792552 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262155599 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268482761 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.266260879 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271432605 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.281929595 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.267813953 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.275564386 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.276631103 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279058988 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.273581879 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266921215 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.264927738 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275823631 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.289200826 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272849236 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.279707315 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.263300497 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.265504763 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.273088373 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278562126 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.274936434 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.266344162 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266744728 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.265952687 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266164617 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265479594 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273303278 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.287255477 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.265286103 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266041359 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275132882 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28813033 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.265494807 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.265028992 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.265495829 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.266158713 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.268255375 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277246444 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.284387009 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.265643795 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.265949693 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.266646028 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.267668169 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.266933018 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.26580611 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267782702 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.263286978 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.266872069 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266941626 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271134826 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.275322677 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267144823 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266483386 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.274326168 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.267291033 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267690425 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.273792111 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.267561427 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266542951 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.268418382 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273808058 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.265001169 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270817991 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.275790234 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.267111876 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.26918098 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.267502744 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.267989877 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278666079 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.295333827 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.267288877 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.267691378 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.273253577 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.278657933 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268047812 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.270857774 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.268020453 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26589681 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.265790967 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.269995044 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.268820357 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.269389467 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268364849 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269372204 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.265813982 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.268559405 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267744598 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270884008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.269006008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.269416715 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.2692167 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.270701001 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.267886641 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.270447706 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.275201382 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.269268743 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.269948198 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.270334187 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.266617962 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269049932 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.270995779 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.268610832 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.270484015 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269154451 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.269447208 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.268365687 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269533264 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.269934472 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269490698 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.271368696 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274958877 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.270018656 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.274657287 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.269819395 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.267059818 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.270349353 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.270404555 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.270875014 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.2703383 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.269167901 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.273743577 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.277723512 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.270709184 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.270350622 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.273060921 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270580296 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270125833 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269635269 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.274092061 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.27936187 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.269670225 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.277858342 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27107709 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269850888 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.271581182 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.272001456 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.271571384 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27059215 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.274424352 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.278617708 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282664542 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281405892 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.273285366 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.274035852 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.272728102 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.276026091 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.27474327 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.271889691 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.271580362 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271134017 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271667811 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271381032 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.273576497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.270473888 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.271968412 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27202173 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.271877946 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.2717717 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272085109 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.273591317 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272341734 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.269480866 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272111697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271359873 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.2728385 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.270008301 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.271814559 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.272457806 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.272655011 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.272199264 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.279649974 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.270545312 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274188601 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274071716 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.273119427 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.272303153 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.273484161 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275684186 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.273716512 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280216066 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.291231175 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.274774706 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280914503 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.292627788 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272846753 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.276860442 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.273374476 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.272122964 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.276503497 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.281697766 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273350481 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.273519715 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.273535483 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273757183 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274431787 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.281307653 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271521428 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.273137016 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273346492 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.276234571 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.271234519 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.275742802 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.275490461 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.275326137 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277082758 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273601825 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.274402565 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275395929 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.27423847 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.274156999 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.274440727 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278445002 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281781477 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.278853746 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.275493299 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.276863509 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.276191911 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277850214 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.275345914 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274605734 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.274025868 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287483297 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.282713458 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28178534 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277853561 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.275837916 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280331381 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27684091 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.279386213 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27519005 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275780376 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.275466811 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.274844333 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.273899834 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276051667 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276086214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27705399 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.278876233 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.280293848 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.276131125 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.275008643 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275580541 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.276628036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275700946 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.276180696 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.276655303 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.279505788 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277681183 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.276473219 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.27742629 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283677794 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295656105 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.277888592 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.27800507 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.276395707 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.276534334 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.278120639 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275903043 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.281099724 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284542669 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.280869063 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.286163135 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278836288 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287058368 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276044122 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.281976432 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284431403 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.275187043 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.27746031 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.27833303 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.2776606 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284613975 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.29504457 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.279345416 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.282804393 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276912163 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277605709 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277737849 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276783779 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278073905 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.2779094 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287106294 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.296230265 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.282855057 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280206724 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275859826 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277861483 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278346707 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.27729496 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281910467 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278271109 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.279356157 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278418984 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.279613063 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278686164 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.27882946 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278375337 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.276075012 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.278774888 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285793869 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.297861361 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283026742 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279287905 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.287344232 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278682026 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285890497 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.296639615 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280426342 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278849138 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.279399183 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.280957493 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279620435 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.281338825 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279346142 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.281312974 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283404475 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279775814 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.282439157 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.280099536 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279559083 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.280327516 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290473937 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302417499 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.281007743 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284557052 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.276907422 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.282593715 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.284317693 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279776276 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.280205289 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.283479197 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292698836 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288893189 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.281119035 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280167272 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282168064 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280126529 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.280489696 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281345258 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280377224 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.280857684 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.28277436 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281288203 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284650584 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281003361 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.282760262 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282479879 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282874416 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290638414 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28131941 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283815429 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280944321 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.281752447 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.282469888 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.282411316 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282179469 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283098266 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281446 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.283974854 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290369031 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289064692 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.285241593 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282671728 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281530541 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.283623701 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282823481 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281572022 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282213202 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281468487 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.283750138 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.28287496 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283162727 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.281423104 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.282088674 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.283349514 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282190545 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285402019 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289669879 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28354785 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279903888 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.283001703 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282621643 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.280977665 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283700771 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.291348807 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286320844 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.294701069 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.291866284 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.287257982 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.28414212 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28692645 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.29107891 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283245334 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284614106 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.28338528 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285080476 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285212976 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.287912759 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282797701 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290207097 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284505013 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283932887 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29253045 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303043023 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283796234 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.286573311 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.288123167 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.283944504 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28071515 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.284503443 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283799007 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291651612 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.304807777 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284602621 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287334474 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.284468775 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287049748 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288905212 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285325557 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285825525 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281375629 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285935234 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284782425 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284746991 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282258397 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28520163 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285288521 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.28810341 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.292151645 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28241979 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28629118 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.284938047 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285939748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285009351 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285868637 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.28194541 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.281822738 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.286226014 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285586517 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.286704013 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287766528 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.285852388 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286805104 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.287177674 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286117256 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.289264385 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296338782 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.292902416 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.28338569 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286234385 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.286289867 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.288980068 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286161105 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.286598317 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287336153 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287503188 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285913052 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285696604 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286087862 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.290124171 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303303316 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304563887 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287869457 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.287251726 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290685723 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287071946 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283634787 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.286686321 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288702615 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.290886117 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294308733 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287342778 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293935722 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305432794 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.289265174 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290651007 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290641572 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.295331373 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.29038662 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286581751 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.286360109 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292424646 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.303873121 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286978886 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298507359 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317512952 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.306588571 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.289205663 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288148242 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288791101 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288716128 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.290592529 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.287550193 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288063785 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288754699 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288419915 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.29020581 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29432756 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.290751177 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.288890532 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.288920838 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289862466 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.290953274 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.286036061 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.288707389 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288699763 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289546693 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288770707 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289525857 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.290380721 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302080783 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300389409 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288801615 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.288962974 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.285504698 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.29289638 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.293423728 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300863097 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.296441265 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.288521857 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289529088 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290649332 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289189692 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.286872895 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.290373359 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.289336477 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289497252 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.287427992 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302800299 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298715519 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294817084 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.290703305 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290357251 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.29075285 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291051327 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290556627 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290001868 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292661479 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.29258185 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293773356 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289309164 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290652933 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293831115 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.298279148 seconds)
  done (took 763.375915798 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287757098 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287402585 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287853722 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2878366 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288670271 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288084115 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288270005 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288307548 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288022434 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288115608 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287286631 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288108112 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288099058 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288885823 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288096991 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288437738 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2887909 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287960531 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289721721 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288435342 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288476685 seconds)
  done (took 28.27459836 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.292050471 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289603335 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288912613 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292029242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289736055 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.292328957 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288975786 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292323965 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292205792 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288940048 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291773474 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291824232 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.290018723 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.290448759 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289673578 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293446785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292095707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289857739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.292791744 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290266691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292607687 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28984335 seconds)
  done (took 29.624798953 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2929885 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292362612 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.293525651 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.290838442 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.292262921 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.290389635 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293247996 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.29259374 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.293859029 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.294374914 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.292614529 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.294986773 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.300485021 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.298246575 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.29463542 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.292794711 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.437826305 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293909369 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.294346314 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.293338656 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.290850227 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.299649535 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.29134203 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.291625429 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.292852216 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.29388213 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.29419456 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.293286004 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.294239122 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295993638 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.298060438 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.294057531 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.293308157 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.296664598 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.294584306 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.296727223 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.297949375 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.294184806 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.292558712 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.294867228 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.305251102 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.314859847 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.294825023 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.301315711 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.295235716 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.294584538 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.298691754 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.302041251 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.29240022 seconds)
  done (took 64.834302238 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.295047217 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.294836916 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.293255912 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294774128 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.295791018 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.295271831 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.294945808 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294717577 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.292704546 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.291592734 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.29557652 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.29262721 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.293078517 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.296361791 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.29646946 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293870153 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294441059 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293680955 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.292753821 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293392682 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294660126 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.296239478 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.297545186 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.293402598 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297696847 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294461159 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294392051 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.295967865 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.295409005 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.294603639 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.296815329 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297999565 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.297285069 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.294888159 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294713442 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.297389159 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.297422994 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.295327056 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29698961 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.295535801 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.297141472 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297843279 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.297459587 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.297419717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295433663 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.294645837 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295863845 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.295335831 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.295897613 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.297960475 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.29835131 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.295728539 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298589122 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.295054496 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298883685 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298039482 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296079716 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.295634394 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.298935623 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.296800955 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.295293465 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298697859 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.297540333 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.298317218 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.299107002 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.296553093 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.296561587 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299465649 seconds)
  done (took 89.350959704 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298248173 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.299373071 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298223943 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298464161 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299963845 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.299325934 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299105672 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.29907792 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299028427 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.299022949 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300125526 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298911971 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.298456679 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.298632937 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298565773 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298774233 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.299197852 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299493729 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2981024 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298377115 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.29879466 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29892039 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.298255589 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298953625 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.299287508 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.299261356 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298409406 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29971444 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298851601 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.299172731 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301121621 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.299683621 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299501783 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300200789 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.299918761 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.299315958 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298392575 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300063698 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.299310528 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29897141 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300322088 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29891259 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300276244 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29910591 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299705917 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.300935507 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30004258 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.3005156 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300400561 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300065399 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.300117698 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301178741 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300407203 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300161241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300289856 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.300196808 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300330263 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300598218 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301238683 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30056172 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30071341 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.301689424 seconds)
  done (took 81.80351646 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300586999 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301000095 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.297827506 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.297833506 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301730054 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29846973 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300606869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.301197853 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301011367 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299864718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301561953 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2992237 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298683691 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301795401 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.298638531 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298917545 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299492402 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.29911593 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301755042 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.299237918 seconds)
  done (took 27.230035279 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.300030572 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302409166 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299863376 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298769933 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.302356172 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298932693 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.30147445 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301972421 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300232413 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302421488 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302592989 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302693986 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299771178 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30095892 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302218614 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301206106 seconds)
  done (took 22.050836442 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.300505142 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.302571789 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.302298333 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.303045681 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.299943488 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299119592 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.30350714 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.300212862 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.299957163 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.303976157 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.303337216 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.302881978 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.302935543 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.302672917 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.300223549 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.303417862 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.300493558 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.300997862 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.304196098 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.302786667 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.302312723 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30165023 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.302989739 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.304017174 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.300831942 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.301318478 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.300807727 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.301204481 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.30113529 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.303331929 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.300812249 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.301635551 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.301883599 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.301285832 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304371937 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301772221 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.30373826 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.30630931 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303894617 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303868493 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.303777834 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.301724185 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.304113274 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.305226016 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.301770619 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.304194528 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.302778306 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.303069398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302213359 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30239236 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.305223094 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.304994692 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.304533613 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.305134146 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304790718 seconds)
  done (took 72.879021748 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305445942 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305162419 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.302960851 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304733538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306177979 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.303882484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304946792 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302676025 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302616202 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305282585 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303849381 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304902225 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30306933 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305556852 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303906784 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305515583 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.304109451 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304384978 seconds)
  done (took 24.714896253 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.304282355 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304109489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.306396018 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303310693 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.304206241 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306745306 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30366005 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.306045694 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306196017 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.304419573 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304714247 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.306795664 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306610216 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.306234905 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303709133 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305348463 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.306646295 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306603554 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.304501049 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30421603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.307129379 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306628603 seconds)
  done (took 29.955753634 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.306922137 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.306254227 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.323774275 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.347867144 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.337189579 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.307591894 seconds)
  done (took 9.166776308 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305757978 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306090173 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304773132 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307715992 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30761411 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305283032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304886842 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305260101 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307782206 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305367524 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305209459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306934982 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307803906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304055918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306976461 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30799971 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304712912 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30466211 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30654812 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308334851 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305085428 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306702087 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305072765 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305708395 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305481369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305643121 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307518586 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305674338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306533022 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307597177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308487229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30561287 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307625539 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306261018 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30959585 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308778871 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306204333 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309110595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308396741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305340404 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30899456 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308966311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308589845 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306465833 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308478192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306337264 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307397245 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305812383 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306969181 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310051978 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309338615 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306566937 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309483095 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310025504 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309570849 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309335443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306966912 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306945076 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309234557 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307069596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306692018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309473364 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307054359 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307148499 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30973241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306809088 seconds)
  done (took 87.509938902 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307261221 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307709707 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307986953 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308771361 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30821164 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308177769 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30782712 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307923713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307214206 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308918446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310474701 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30859089 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308364687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308041311 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307121168 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308243274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307904676 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307907144 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308282942 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312167226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308241128 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308284566 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307929302 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309414899 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309541184 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31214833 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309286196 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308905245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307797167 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308618294 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308935723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308894302 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310192733 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30873698 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30887231 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309462873 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308929839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309299241 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309205075 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312023101 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308770217 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31186483 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309774996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309195474 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310307152 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309563573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31084655 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310445549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310620873 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309044286 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310137976 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309248346 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310463223 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310348173 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309336525 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309878386 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310084068 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310454178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310550023 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313285181 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310833084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311016678 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314077603 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311539407 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311026529 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311399823 seconds)
  done (took 87.669256067 seconds)
done (took 1778.890410314 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.339787558 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.428258652 seconds)
  done (took 14.012095715 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478891309 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.429854133 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312263369 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.314942377 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312476009 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.32263048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.332495615 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312726193 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31190935 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.312359561 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313050034 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506871164 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.313978469 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.31340554 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312217765 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.404930807 seconds)
  done (took 42.855452755 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.339529006 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318065238 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.435180312 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.332904285 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.340111238 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.511632543 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373635498 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.316704924 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.495709846 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.355266128 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.92366446 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.339890426 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.316340477 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.457705309 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.337028007 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.511358491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.572307652 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.929917398 seconds)
  done (took 30.450577794 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785053672 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.319579027 seconds)
  done (took 9.349696467 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.354807454 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.349770962 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.34704569 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.325111856 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.357596836 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.35775282 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.312964338 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.327753163 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.369245458 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.336829572 seconds)
  done (took 64.68996308 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.338129019 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318184362 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.318112055 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.316258248 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.3086091 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.309544703 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.316609757 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.315145754 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.11722685 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.4507724 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.336329461 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322026181 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.316382961 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.318529328 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.314441481 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.35447471 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.449222277 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.314037985 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.313970822 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.322807232 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.31704825 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405179602 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362871609 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315530113 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.452280921 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.134111054 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321561481 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323162559 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427725609 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.31509056 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.317309058 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.3185478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320533513 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.902914016 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.779875311 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.326156733 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.343131456 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.325568152 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.315332829 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.451122077 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.319178382 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.323913146 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.320427404 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.749425899 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.475572497 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.437125404 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.625662176 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32023821 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.319583464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.380828934 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319662449 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.320003157 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.348865136 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.086809823 seconds)
  done (took 110.841415833 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.357425616 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.800619195 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484071545 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337550028 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.117791889 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000394635 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311718236 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.612743716 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.347995144 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312395326 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.651650301 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82732362 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316011502 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.314616138 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.438028541 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.406296719 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312405688 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.096964483 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312645298 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.316147875 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73254435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329901353 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.31629284 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.470441262 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.35447079 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789028622 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.852719453 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.625411813 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317726111 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.31338716 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787211679 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315180188 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.338698653 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.314081173 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.598526388 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.685221514 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66250416 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.315412743 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339780346 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313216247 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.348483667 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786887822 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.670145223 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313830715 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.314528296 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806836547 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.314737591 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.319286129 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.321240854 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517552515 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.280088159 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316258039 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.859699007 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.317725361 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.661620387 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.395101661 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.394634075 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819123514 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314542113 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.28820059 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325001575 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.314283063 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322346584 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316969921 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.317326313 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.675992926 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.42593458 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.316842857 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.678187225 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.784619435 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.315603054 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850299614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.25285771 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33237101 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.392958575 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314736922 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.9137144 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818812568 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.339425956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316053792 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.661619808 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315551559 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.645085644 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.329913828 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331795071 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748421671 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.341696342 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.354759937 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.315372044 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.31762536 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.939220343 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322976061 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.591440555 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.363914765 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315914639 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.316886667 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.337217705 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316067058 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.319608058 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.319607166 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852110681 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.320791193 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.63319816 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.338477648 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316969205 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.317518559 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.319407617 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.316595824 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535468878 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.851214658 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.325848625 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317407925 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.316595245 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.318342918 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.460010106 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.32380946 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.637252316 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.317498923 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315666385 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.320569094 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.044596336 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322172191 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318620577 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.318378826 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.181682761 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.52997606 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.337543245 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.317757991 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316258959 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334554045 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.729395102 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318285629 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.344503377 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.321152094 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037435547 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.321579601 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.337221865 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.931296984 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322294854 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.333874042 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317484106 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319328791 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628076377 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.60172043 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.356371199 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324038592 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.318507566 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013884829 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.361046983 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469116072 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.337119347 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322102669 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520071085 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.624925859 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.320678586 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.89971278 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.321495284 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.534385345 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319265577 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640454418 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817760439 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318780512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.320955403 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.030895119 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.003219205 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.971892454 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.32395838 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.658911939 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.324135711 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.782303707 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.320350252 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320844454 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.753417901 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320970122 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324967022 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.320181892 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.321142932 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.482631599 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497720221 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.071300071 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.328484349 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794481846 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388245795 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321106218 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.322433822 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323625089 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673971305 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.412942187 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.325966373 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.355061133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.321745324 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32955932 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808290302 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.276825561 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.323967549 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476031329 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966561768 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.321345942 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321564371 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.004631277 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.626720709 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843719199 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.376586061 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.645354455 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.327057625 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36319349 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.058740383 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322372478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811509161 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323601529 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.324749166 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932276062 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.322436948 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.671154186 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.322345629 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.323243656 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87916126 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.322095448 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.327053031 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.740605507 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322435977 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590430716 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.323395348 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.363276866 seconds)
  done (took 1109.062640254 seconds)
done (took 1382.506813273 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.322171812 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.326637498 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.312239382 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327276252 seconds)
  done (took 26.546924676 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.332638993 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.329821302 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330477451 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.328312868 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.329908519 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.329090142 seconds)
  done (took 9.239136205 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.455692571 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.326385636 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326579232 seconds)
  done (took 19.366813869 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.563682363 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.650509648 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.71956543 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.63673282 seconds)
  done (took 10.830118932 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330330376 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.32979439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.329948225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330714615 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.333673997 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.334404636 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331266168 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331465246 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.334702395 seconds)
  done (took 13.243565998 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.415858614 seconds)
done (took 85.9017605 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.757536284 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.324841011 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.31829456 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.543910149 seconds)
    (5/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.648164658 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.027046454 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.409062386 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 5.655683384 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.580353917 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.751622921 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.432808915 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.648500088 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.766976926 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.36537646 seconds)
    (15/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.309517452 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368086609 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.685749388 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.767545547 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.40631101 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.875488791 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.19298013 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.325522478 seconds)
    (23/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.352247445 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.434998405 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.314511724 seconds)
    (26/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.981305159 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.184272164 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.335482935 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.946378436 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.350637195 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.04588328 seconds)
    (32/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.972270254 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.378763353 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.432555237 seconds)
    (35/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389735524 seconds)
    (36/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.548827483 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.390944252 seconds)
    (38/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.33440334 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.431509992 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.274551252 seconds)
    (41/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.32650637 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.383436736 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.428311603 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.49305872 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.433464815 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.32400415 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.427171248 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.738524481 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.279190135 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.437101737 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.327902799 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.415393664 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.58711095 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.336711191 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.944955322 seconds)
    (56/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.311071347 seconds)
    (57/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.488786158 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.206789352 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.645113211 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.741665386 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.366691939 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.383658603 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.999842649 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.341289099 seconds)
    (65/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.522105101 seconds)
    (66/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.544976008 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.411921141 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342877711 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.659296829 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.367856908 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.992054053 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.329262756 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.412088541 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.358734657 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326454936 seconds)
    (76/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.332641578 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.219033216 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.335120601 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.233849615 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.972630887 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.353470802 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.328163898 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.806883637 seconds)
    (84/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.327837209 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.720342587 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.562445452 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.338139387 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.547340162 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.842178566 seconds)
    (90/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.460731325 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.867253628 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354020907 seconds)
    (93/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.119679142 seconds)
    (94/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.244857024 seconds)
    (95/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.676505665 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.906538403 seconds)
    (97/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.982849277 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.100279683 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.313991815 seconds)
    (100/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.868952857 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.055542511 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.213373324 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.461649498 seconds)
    (104/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.47378752 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.0648607 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.571855142 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.182090125 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.589539838 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.87361853 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.328763289 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317933377 seconds)
    (112/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.530897079 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.614156187 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.894900737 seconds)
    (115/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.698755093 seconds)
    (116/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.875370095 seconds)
    (117/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.007162961 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.441200234 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.724470529 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.849782956 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.352087619 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.291285859 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.611353059 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.353092049 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35483249 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.844889752 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.125987245 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.608086372 seconds)
    (129/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.961261717 seconds)
    (130/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.974896594 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.343761814 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.529433437 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.475002719 seconds)
    (134/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.695154107 seconds)
    (135/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.768565033 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.129454612 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.356186599 seconds)
    (138/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.357612388 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.329937664 seconds)
    (140/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.339250674 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.222368814 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.198905088 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.944482312 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.77298199 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.292401486 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.198033285 seconds)
    (147/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.41242961 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.356522851 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.353023805 seconds)
    (150/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.991198116 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.298022803 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.394542279 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.406969201 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.346513465 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.415617357 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.762462265 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.336096102 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.437140807 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.842157825 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.453563862 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.333570114 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.359114502 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.709049212 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 4.39025242 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.336580321 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.528731763 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.318897912 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.359117521 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.209352342 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.40962181 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455419687 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.275361797 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373342871 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.332881763 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.270073496 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.373101276 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.765356593 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.127763022 seconds)
    (179/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.664570932 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.134095899 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.319161283 seconds)
    (182/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.190112289 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.347911637 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.330679438 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.485164577 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.754742469 seconds)
    (187/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.404911431 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.832716416 seconds)
    (189/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.526357745 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.129915733 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.037852553 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.839904263 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.479343157 seconds)
    (194/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.696562996 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.456585335 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.654264157 seconds)
    (197/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.372910973 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.022111644 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.606896584 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.769486851 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.343041446 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.981037504 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.568518232 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.333332513 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.343910147 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.418835823 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.338873672 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.695787135 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.303833823 seconds)
    (210/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.398814243 seconds)
    (211/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.767692091 seconds)
    (212/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.357194138 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.633073069 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.809991454 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.373982779 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.549162283 seconds)
    (217/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.319949246 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.258201464 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.336013945 seconds)
    (220/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.614564164 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.655891724 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.779976678 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.326384354 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.950308021 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.810319603 seconds)
    (226/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.735460433 seconds)
    (227/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.917202259 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.717880793 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.53333897 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.46206854 seconds)
    (231/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.683005165 seconds)
    (232/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.840734294 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.228010829 seconds)
    (234/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.00033911 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.788526931 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.403292884 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.550127295 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.702695958 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.381025117 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.398710437 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.326178727 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.350266433 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.086650092 seconds)
    (244/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.74747755 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.338770251 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.57810567 seconds)
    (247/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.978660263 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.939329669 seconds)
    (249/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.356680986 seconds)
    (250/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.421278782 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.436363489 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.433645533 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.725127499 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365283044 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.239612219 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.395237301 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.319870454 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.342140747 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.731029419 seconds)
    (260/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.716210313 seconds)
    (261/309) benchmarking ("sort", BigInt, false)...
    done (took 6.338637952 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.155199385 seconds)
    (263/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.443499236 seconds)
    (264/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.948659182 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.472929319 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.344483114 seconds)
    (267/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.366649712 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.939466113 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.337379373 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.459759142 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.336466379 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.379377084 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.381411028 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.361840913 seconds)
    (275/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.452667824 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.717584006 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.421522281 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.419667591 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.929640728 seconds)
    (280/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.348640766 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.419893922 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.350346198 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.449405517 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.157942268 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.338081887 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.323627477 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.080509964 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.386681264 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.016579188 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383319465 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.337944707 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.450079413 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.737159455 seconds)
    (294/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.356729213 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.673379703 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.35039334 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.978095926 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.778273897 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.327024135 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.425910707 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.339081191 seconds)
    (302/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.365170332 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.350708921 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.90769028 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.379522432 seconds)
    (306/309) benchmarking ("sort", Float32, false)...
    done (took 5.356506061 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.011476745 seconds)
    (308/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.442433942 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.337435853 seconds)
  done (took 930.795809278 seconds)
done (took 932.059359308 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369266443 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363432327 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347403805 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369349935 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.458595989 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.376810128 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.357839755 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.350707496 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395520746 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396769145 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.346554933 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.37456493 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.348849236 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.347698606 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.348026985 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360855809 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.474576582 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.350940196 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.365364193 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.357305518 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.36413371 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.34596251 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.397391787 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.374632424 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.351317075 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.351502078 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35175043 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.367404256 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.459161368 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.351667831 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.350844194 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.359303222 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.476575509 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.349606835 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342872501 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.368286713 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.360342757 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.358212262 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.352287184 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.380572772 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.925793328 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.352298059 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.350349635 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.349769433 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.350214889 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.354580743 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.350487788 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356549663 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362427454 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364023529 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.935562111 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.368030922 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.352503185 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349532311 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36119309 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350157292 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.353918107 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365887009 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.369057614 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365498533 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.429950571 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.35645865 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.353239099 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.366369075 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357324911 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.973639824 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348812793 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.354695773 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.931729819 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.359522657 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.97452348 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.362229792 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.353198967 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.365383429 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.383297857 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.451838639 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.347080795 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.350319273 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358472396 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.349740585 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.361110124 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364059485 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35527067 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.352068895 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365245013 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.379997283 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.362402001 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.351399607 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360604425 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.37078751 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.358719922 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.362033025 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35454258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346849794 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362242991 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.35598817 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.354910821 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355585628 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356778207 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.363386801 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.930513327 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371839514 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349452952 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.348471844 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.35265701 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.366202661 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.930377326 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.356711037 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.375157994 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.399346675 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.354883048 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.434769384 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.356280366 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369531277 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361817946 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.356034132 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.34866174 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.435750068 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.940280629 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.370861622 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.35425157 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.351256172 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367851723 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.355284577 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.34966111 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.450961217 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.355960415 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367498822 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.474255953 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365054943 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.385247374 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352350251 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357096843 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.382745672 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369609547 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.385235389 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.358328524 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370649039 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.370451306 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.351409277 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.3651831 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.365250812 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.355710913 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361776265 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34925296 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.387031258 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366944028 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367687497 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.376961881 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.474891116 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352160887 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.43685767 seconds)
done (took 229.912183262 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.416920606 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.350840505 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.446854876 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352402197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.456722349 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454946946 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350618333 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.350123734 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350598504 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730933169 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.351025655 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.351190683 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.354003603 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350218985 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.43732145 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.354140275 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350689434 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.695434007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353504494 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.424502032 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.354943654 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.351437056 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352968452 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.737119304 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.35020201 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.351711857 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.425776086 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353667971 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70190698 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.348854088 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.352224969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.70255142 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.444874328 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370834641 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.364017609 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.361183148 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.458412741 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37143098 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435920129 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.437697795 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.450089045 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.392973477 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350548465 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.350252657 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355895752 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354876231 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.352724126 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381380145 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.348038868 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352890652 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697639595 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363874213 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.352871747 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.35281348 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353394343 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.385014431 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352980655 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355512749 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.446146778 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355354311 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418609647 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.767035323 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73721145 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354736233 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.351545346 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353148951 seconds)
  done (took 149.880297755 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.424522527 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.431298415 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.473491323 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.358531 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.406803212 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474999538 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.357149182 seconds)
  done (took 11.210677343 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.362719047 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355714165 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406512584 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406840038 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356869566 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.505101388 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357040599 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36771926 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.35401506 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.410240971 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.357177711 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357527293 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.36323207 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.351784429 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.4062591 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369056283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472438385 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.358433811 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357497511 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.510284428 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355031389 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.363649086 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409532443 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.369090986 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.357778988 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.363600639 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923653029 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356591216 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354795156 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357901575 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35373432 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.396359042 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358498584 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.351774153 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354615415 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474854516 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.357551866 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354963424 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358192734 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.353906636 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35881096 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.357800033 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.358410486 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.354790727 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357521072 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380823173 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.358604536 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358025483 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357761615 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358576609 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.410448131 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35916681 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.355895679 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.356138942 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414926221 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364977309 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359553455 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.355541602 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358332891 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356761312 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.510981711 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.407686229 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359813268 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407865257 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359933205 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358217815 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.359508906 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358996827 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416068331 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.359928441 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.4086624 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.35645857 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.515128742 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.383870554 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360538225 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.362635584 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364130537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359907097 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.358360153 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.366102618 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.357396163 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361656743 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366630743 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357361976 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357234463 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.462788824 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469010783 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357661395 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.37265453 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.367526883 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356865741 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414444568 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360893596 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.356848533 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.413059497 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476250549 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.414732702 seconds)
  done (took 155.651432396 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366369898 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370486744 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.362630765 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377894975 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.361420862 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.362271789 seconds)
  done (took 9.489309112 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36475339 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.36278133 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.361168998 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.360841468 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361960676 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.361153983 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361739625 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363903586 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363985782 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361975046 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.362662727 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.362466658 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362689738 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362386581 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.361351132 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362032681 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.361890896 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359562436 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.361783156 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361308539 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.45831023 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362334286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362525763 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.364289447 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.366714965 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.362811142 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371052404 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362941547 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.361697181 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.37130662 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.36580225 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.363267446 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.365047731 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.370318576 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.368335668 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.36487531 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366766146 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363648405 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360592204 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.363973011 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363120893 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363125766 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362717087 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.364244342 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.365818017 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.369115846 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368169425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371579052 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362936202 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.365483172 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.364862899 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.362282072 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.363971517 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.364325824 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366903136 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368664969 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.369189651 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364366659 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.363436587 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366104885 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.365229413 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.36415345 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366867079 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.368582088 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.37105557 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364280449 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.366971675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368522962 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364159168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.364920715 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.365060442 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.362628731 seconds)
  done (took 100.633177158 seconds)
done (took 428.147137029 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.400913642 seconds)
  done (took 7.693514946 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.505300383 seconds)
  done (took 7.798077896 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.038702506 seconds)
  done (took 23.336577579 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.441154419 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.423513162 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.358948939 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.364141248 seconds)
  done (took 26.881395302 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.913929653 seconds)
  done (took 8.206580082 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.357101785 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.357116879 seconds)
  done (took 14.007391856 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.481631194 seconds)
  done (took 7.774504348 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.521784114 seconds)
  done (took 7.819749922 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.35870727 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.371721313 seconds)
  done (took 14.03399843 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.344355637 seconds)
  done (took 7.636475132 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.065744694 seconds)
  done (took 9.359215758 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.35855008 seconds)
  done (took 7.653414986 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.415146136 seconds)
  done (took 7.708118308 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.815939079 seconds)
  done (took 10.10906965 seconds)
done (took 161.312605098 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.358970306 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.362308663 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.363148387 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.362328848 seconds)
  done (took 26.739872764 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399797334 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.399486989 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.400690214 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.411115014 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401908556 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398326958 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391036151 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390881721 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409761724 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402531679 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401193508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402068527 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400376906 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.391813361 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.401359973 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.401456661 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.410827473 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.401477516 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391440822 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.401825218 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367279049 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410128096 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403218739 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367071989 seconds)
  done (took 34.852262181 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.562508884 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439319879 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522156524 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.419403923 seconds)
  done (took 7.237488739 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418149534 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420404658 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.432244868 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474287221 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.498282916 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.431053339 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393863152 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.389118754 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.374958317 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420908003 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.496351624 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.43654422 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.513075764 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367432548 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.554768053 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367272873 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368558648 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.420639378 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47186699 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.4982263 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367600204 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.419876466 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.42319981 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.437598702 seconds)
  done (took 35.69185128 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.367603492 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.375570488 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.373523811 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.367023148 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.367187308 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.367817902 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.373718015 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.368523945 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.387978865 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.36860167 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366427737 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.367172542 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.367063907 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.367286908 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.367812764 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.380489724 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.380927692 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.368150167 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370777826 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.374654305 seconds)
  done (took 28.724689554 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363802972 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.217259183 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.715403839 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.61975976 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.362150868 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362982544 seconds)
  done (took 27.937177727 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.44589783 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.58966763 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370527364 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.765175594 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.846119526 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.373724301 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.371010709 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.627291951 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.970778601 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.974274415 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434257088 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.443366232 seconds)
  done (took 20.509462477 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.364165079 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.367625572 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.382523811 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383193365 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.429783655 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.374848544 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377628251 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.364026583 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.432375258 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436517833 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.375232796 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.432294796 seconds)
  done (took 38.019399997 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452086259 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417396763 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.387386866 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289517242 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04573845 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039041917 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.285424606 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.852796593 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.371070095 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639461536 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364728324 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456855665 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623620469 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381852582 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369352093 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.454614653 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594475685 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904007993 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367087901 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646970941 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393621826 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372798745 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.752974173 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398650508 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577394251 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349718391 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.626509338 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141263357 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674860321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380059356 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376597431 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367209854 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640448519 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055330356 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464822221 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376253301 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.315453793 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.999684671 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.351643504 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.642414488 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37149061 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368234338 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376416989 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366522982 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301131342 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380313896 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86088586 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.374967806 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.077831174 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367953679 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378605568 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463276945 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.370228677 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.36000038 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56568711 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.374556552 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.364534285 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373180594 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933805698 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199399111 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371714433 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.304688745 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.933047063 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.671205368 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070432884 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.471452749 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.370652323 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371744457 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302309674 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.637208762 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387741793 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506088931 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.392917374 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029289241 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15082517 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368573111 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300163432 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962791025 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374814958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.305764712 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597518596 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145976682 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308652022 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.314290459 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.303119177 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137489885 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377586149 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.842930211 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379077511 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868864688 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382031683 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388227813 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392217683 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594302751 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.252746201 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369155003 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.376009487 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486458302 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390761419 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857650031 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307011808 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.372189139 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627265518 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.580513722 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37983113 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.463487116 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613023662 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388749901 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386768448 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377067828 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.383227971 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.033120203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383214384 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232733775 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3890977 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.149304058 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180546755 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372818242 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.474501103 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37199288 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632709168 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.215105578 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25562331 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438710015 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375207002 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37139828 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.732901023 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223981269 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.252772773 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.37356537 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384757599 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.383402038 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.370354869 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336842825 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.377534192 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371122707 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.149780609 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596361483 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372433795 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65047686 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305264127 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509089886 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387329635 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.595108356 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.65110591 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.370317631 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633783852 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380691687 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377322453 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385832644 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392808564 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468531815 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393277681 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.37109127 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65145075 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.37515032 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.375215454 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.74257894 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15230691 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379569054 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.377477505 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.367114732 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037631313 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34631407 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375296271 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267304794 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.385359413 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440073698 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37789153 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.382492022 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.330077662 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.415398698 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.379386197 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.376957955 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600314062 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384601388 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.661508837 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454039761 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.604658431 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04537849 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388540628 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.307605622 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.084469323 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.065961332 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373318568 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.572710828 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373593133 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38118782 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384424506 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.105820921 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0442204 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377241737 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.654735761 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.382483526 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385014752 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.379173244 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373973635 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.327220533 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236850274 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390214792 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.388678364 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518305768 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.388056651 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308805145 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891924146 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380676084 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3752246 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.150051012 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409224279 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.669830426 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886031594 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635931165 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.340135331 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389448721 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.7853852 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412361726 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.37758679 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375117737 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377988246 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.394013232 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383464309 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385389919 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.762597948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.827631618 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941220826 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183641644 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982722244 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402371975 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.392654564 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.276551384 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869535982 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313584157 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.034843483 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579760431 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867690259 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335296721 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614400835 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.653920504 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204881359 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389388973 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605535074 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403328194 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.384243667 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389451779 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588729506 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410731088 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376002979 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310722926 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.663208456 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663076503 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37651693 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458119312 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866453045 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386697284 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.154936374 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.37652079 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.806153918 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570442857 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.927792972 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.772460248 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382100985 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39632449 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883160349 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379515162 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906507151 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086547606 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382746748 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.634971693 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320989637 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.38923681 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389218567 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.379753751 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.805103233 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.384807035 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.634334517 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388851476 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31158552 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385147854 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993701328 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23842581 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383622365 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378834661 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188032604 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396189292 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694702009 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.392124689 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.291217757 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382384865 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313199061 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313409386 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.071597028 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388112705 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347223172 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918524732 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.891060469 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.559679423 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411570338 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229444561 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636690484 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.392431939 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050755026 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608099852 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.402204337 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403269012 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.480092476 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390970326 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.365462952 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277676241 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61571186 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370040165 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604530963 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.408862833 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.287691744 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380030261 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595543212 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.276334876 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385309941 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651098432 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.093341763 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.380670916 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175060585 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405240545 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382896859 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398860858 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.944865167 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391614612 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450557381 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390682612 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.391324331 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391642256 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571398967 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39683414 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382247353 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.394427418 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476302042 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.295162369 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.336463108 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15739459 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059193919 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193014276 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058068551 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395573899 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381948464 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381284524 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315714018 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529184581 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911805701 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655250662 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501134077 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.024370949 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405169374 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382966701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389460391 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597309042 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657258482 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.25695472 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394228321 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048226002 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.541475407 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392603381 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.593872408 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932247927 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980146962 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499006542 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382731976 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.876619632 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659879962 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.474628488 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382543428 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979360434 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.388596889 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.818386665 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.390205086 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390160124 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530821458 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393284026 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079515361 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.394490543 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.5427374 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.156295499 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.796768328 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643900855 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.90918468 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.394127476 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0628865 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19120822 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650994741 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451994425 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395533745 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.509540762 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528207657 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.390909201 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.282194117 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383260506 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231761301 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.094977618 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.394404693 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065024386 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652454921 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.382102772 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.387374138 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409987844 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.393682964 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607721587 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168061825 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610696171 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394377186 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393082448 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.957595164 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065176515 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400147686 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319256403 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.388422827 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653847888 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623711269 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410291264 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.838130981 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.096083288 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984069597 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.360171184 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407468515 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387977351 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198164999 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064023882 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.347213173 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937350287 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048320172 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38891096 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662612265 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390443111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397053706 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664808809 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.389804024 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38589667 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40084772 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.062727105 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212865299 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.395523601 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713588228 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.325466159 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614557782 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169459102 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324796891 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386987954 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.595719279 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390689813 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506398962 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398062276 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.393170054 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386532557 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.145346751 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666637061 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.392104445 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.380856317 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.374334413 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392979151 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397240758 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676584281 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391463209 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.060487133 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.736873518 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645665084 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399631061 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.375153156 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.390775341 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388516548 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112719377 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366505327 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.118858845 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987109582 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.401685842 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400899692 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392311833 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.604696956 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600708248 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387938222 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418311965 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402373573 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405345783 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.293713967 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161273041 seconds)
  done (took 1621.194620522 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43501208 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.397107073 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.417594045 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.415785332 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406965282 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406840748 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.444551232 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.424595753 seconds)
  done (took 52.669542977 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.389047912 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.543633101 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.422616299 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.397448525 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.398800375 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.391126803 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.883497211 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.4017098 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.398976034 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.39941636 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.401992375 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.40193279 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.108003293 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.401349855 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.390377321 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.392322029 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.398322191 seconds)
  done (took 66.44852511 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.400198144 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.715450975 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.414794487 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.392527252 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.660476129 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.397139302 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.664921108 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.433930742 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.397373969 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.585876248 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.059390455 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.422821285 seconds)
  done (took 80.86808318 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.398689714 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.398550939 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.399110914 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399205332 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.398533701 seconds)
  done (took 8.316617875 seconds)
done (took 2050.505413152 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.687024266 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.177243689 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.098058749 seconds)
  done (took 5.598554394 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.54259903 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.591264063 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.73712001 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.768870616 seconds)
  done (took 7.966243643 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.6916104 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.76213107 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58532177 seconds)
  done (took 6.365655759 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.924864421 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.40885285 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.540273328 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.392901164 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.395971672 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.397749282 seconds)
  done (took 20.514199445 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397857361 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.399953295 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.397008467 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399872121 seconds)
  done (took 6.922406447 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.379615471 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.11950579 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.38399263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.397105163 seconds)
  done (took 18.606284484 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.145024955 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.158495732 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.140873825 seconds)
  done (took 7.77078571 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.393445896 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.239365294 seconds)
  done (took 9.95956028 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.70148345 seconds)
  done (took 3.028197748 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.530873049 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.726339488 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.631728739 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.479937176 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.636092417 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.565354502 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.180926861 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.721476105 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.476296055 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.762739952 seconds)
  done (took 30.039664824 seconds)
done (took 130.657485993 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.463122592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.418899353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.594303193 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.437683908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.632293075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.592859113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.721627761 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.400869754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.936748566 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.927125477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.433074036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.63116633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.670205704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.418852693 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.670375122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.443628798 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.629707974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.500217228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.119848277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.333747651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.721488438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.069242189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.2654817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.089346413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.627092484 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.55012776 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.651524404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420107704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.295723392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.672566692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.550790102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.397050418 seconds)
  done (took 195.615459905 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405114337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403607762 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.399718267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.397540077 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.404369028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.399331113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.399279076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.395880509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414388858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.417423687 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396586745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.39691297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.399411111 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.413756984 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.397743349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397924476 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.397709335 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.397309914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.397988113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.405880759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.415478562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.397926537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.397902965 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.39803215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.397461117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.398954379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.413289844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.397707389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400518955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401059099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.39743642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.414454774 seconds)
  done (took 206.198530273 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.397906099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407341819 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.399090343 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.41479709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.399283385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.415537713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41839766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.430157885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398503618 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.399217452 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398935943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.399012118 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422364951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416198982 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.401547441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399215129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39960725 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.412591428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40082558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414015326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.399197895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.410779126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.398945865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399165143 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.400260569 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410353026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.400054047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400861427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.415357192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421604694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412398316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.399932664 seconds)
  done (took 206.346751051 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.596219956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406309049 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.407516504 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.34682406 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407127554 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.4055329 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.407553662 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.605113944 seconds)
  done (took 14.914438715 seconds)
done (took 624.405202575 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.926680361 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.560486416 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.611162942 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.42825865 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.26747724 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.428570373 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.427732188 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.612758557 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.374141764 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.616970019 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.715415506 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.426519073 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.863279257 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.425618549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.692716918 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.532077781 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.325928542 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.442324461 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.754211332 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.029957231 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.69903065 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.922733311 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.608960953 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.393692798 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.862789111 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.927602913 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.171560877 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.326956216 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.426745881 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.758693546 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.29273232 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.45432308 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493823202 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.474223321 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.526987359 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.510005554 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.408271006 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.470934533 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.615450199 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.681922324 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.032010792 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.181946005 seconds)
  done (took 96.0390006 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.397258179 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.39695437 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.396805408 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.39722171 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.398889633 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.398039813 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.396680394 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.397267845 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.398390122 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.396921794 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.397375801 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.39876057 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.396548685 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.399349234 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.397701814 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.397558541 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.397602911 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.399782845 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.397188645 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.397331606 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.397811098 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.396897135 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.398912453 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.39794728 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.399791755 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.398435431 seconds)
  done (took 37.679485219 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.410726709 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.670755666 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.843010516 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.417788248 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.41002025 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.414978428 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.496227957 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.413226148 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.41380746 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.413822499 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.570236244 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.413641991 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445506892 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.871305101 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414121926 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411530253 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.410781038 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.411732963 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.678549148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420925972 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.516702941 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.41276672 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.495943884 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.4223047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.434207615 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412297743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.417867233 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.937277747 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.416622861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.572591818 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.285287967 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.495822358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.888250144 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.867107427 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.287024305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.416475448 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412934563 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.575965396 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.414141885 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412779178 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.496334879 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.414532153 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.862889768 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.055158803 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.435788949 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41327935 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.962826385 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.580029057 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.68538864 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.424438363 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.887462313 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.421111976 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414870655 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.415723545 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.683345787 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.422224649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.414035738 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.967106503 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.440292052 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.497758194 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.417437026 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41454973 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.684606122 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.415090311 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.673011736 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.415983082 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422638945 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.414761526 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.859998022 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.418240847 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.076145473 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.436874652 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.413242129 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.573896955 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.673168361 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.999319118 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.420121178 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.688719858 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90106182 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.499895195 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.420474971 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.927313367 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.504727893 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420159697 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416484594 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416926798 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415119919 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.460221589 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.497569468 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.998228615 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.06678791 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.988040736 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.522526263 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.431250137 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415495269 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.966954442 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.437137879 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415230658 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.860298006 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075357738 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.439216886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.424465364 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.058185892 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.44018203 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.501360859 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.425078899 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.872331763 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.421117439 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462287671 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416038428 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423232342 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.420376008 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.501763569 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42222544 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416736938 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.048531399 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.601768902 seconds)
  done (took 186.052758455 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.411348579 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.410434006 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.412406387 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.41157984 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.410006993 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416368438 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.410583946 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.409972559 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416105239 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.410734947 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.411352341 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.410814461 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.413433955 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.423482795 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.420047108 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418006374 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.026360185 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.409544652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.411124876 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.411548087 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.231051421 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.413574519 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.412822542 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.410068267 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.412174408 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.41159257 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.416370612 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.432016701 seconds)
  done (took 154.359165769 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417855021 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.027965486 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.419106954 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.563353181 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.442571649 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415005483 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.557677503 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.480201952 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.420762521 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.415367387 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.415983775 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.743487132 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.419365593 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.971288989 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.628055788 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.562079373 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.971224136 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.419537774 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.416360125 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.415334632 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.564434402 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.430923106 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74540776 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.030506517 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.419668803 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.031838804 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.409035912 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419871539 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.419481339 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.029253536 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.417395397 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.749227126 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.501642766 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.483493734 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.030593822 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.995115974 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.976690997 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.576869458 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.419860103 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.417337898 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.417347724 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.408529992 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.032463887 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.42031076 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.420251177 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.024011066 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.437284641 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.420449272 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.429024877 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.417240393 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.48310455 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.484033836 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.751502718 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.036314672 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.50141256 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.439890607 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.561152663 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.816001407 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.420014461 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.973048731 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.407480594 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032401097 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.423372458 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408826906 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.418715821 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.423971916 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.583784363 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.562524506 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.9752109 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.422409595 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.986474677 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.586073403 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.420801705 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.419889745 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423107685 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037220372 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.97762685 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.582145612 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.567345559 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.634173282 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.413788077 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.421049918 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410849008 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.50444779 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.420488456 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.035399763 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.97887459 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.423728738 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.423719744 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422530167 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.421949645 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.616113416 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.039852035 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.505814259 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.971989298 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.767545574 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.75305604 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.422860231 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.484656058 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.421300759 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.75248057 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.423079509 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.483047153 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.884038925 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.75073441 seconds)
  done (took 169.880635223 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.689740359 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.718147132 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.517882465 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.541707788 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.032476342 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.008825923 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.744548585 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.552452352 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535336573 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.677091984 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.632457463 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.512761428 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.624845766 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.502015542 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.181470851 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.497857093 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.518859373 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.550446228 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.523348073 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.49688629 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.081036794 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.715125215 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.603955416 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.445136701 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.52136016 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.258731415 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.985344758 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.966380387 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.607435649 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.759796322 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.972966961 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.583797513 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.433635101 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.132923385 seconds)
  done (took 68.47696024 seconds)
done (took 713.823796436 seconds)
SAVING RESULT...
DONE!
