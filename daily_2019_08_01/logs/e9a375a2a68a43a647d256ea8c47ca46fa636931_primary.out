cset: moving following pidspec: 26232
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.375561606 seconds)
loading group "string"... done (took 0.547168073 seconds)
loading group "linalg"... done (took 6.821656297 seconds)
loading group "parallel"... done (took 0.156511044 seconds)
loading group "find"... done (took 1.189965717 seconds)
loading group "tuple"... done (took 1.766402953 seconds)
loading group "dates"... done (took 1.189211045 seconds)
loading group "micro"... done (took 0.266216478 seconds)
loading group "io"... done (took 0.975556211 seconds)
loading group "scalar"... done (took 38.236390194 seconds)
loading group "sparse"... done (took 11.882313655 seconds)
loading group "broadcast"... done (took 1.003724112 seconds)
loading group "union"... done (took 12.938774371 seconds)
loading group "simd"... done (took 4.193721902 seconds)
loading group "random"... done (took 8.745420733 seconds)
loading group "problem"... done (took 1.874839271 seconds)
loading group "array"... done (took 19.934386482 seconds)
loading group "misc"... done (took 1.698772277 seconds)
loading group "sort"... done (took 3.20207777 seconds)
loading group "collection"... done (took 16.611653973 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.474592807 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120326449 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112758961 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117331417 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138761056 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112514383 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121243556 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082226777 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.79429554 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13877101 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116611135 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406984395 seconds)
done (took 4.911562682 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170575559 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081351757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08007981 seconds)
  done (took 1.292980898 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063856985 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119960457 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065881632 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065177318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065860091 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064954509 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064742776 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065056924 seconds)
  done (took 1.643015262 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071794112 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067637211 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067251456 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066871412 seconds)
  done (took 1.406660989 seconds)
done (took 5.71963374 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.753522151 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197537196 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184332532 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.391821428 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127690354 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163561315 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.628711102 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316353691 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187852971 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082308861 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104083027 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319417088 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105970949 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.631486982 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075763589 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088418675 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135637742 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422942039 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066285702 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081202666 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087964289 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12683614 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083821869 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074747172 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142507647 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066730933 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127400274 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079880186 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06535604 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20517691 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17239853 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660722248 seconds)
  done (took 10.128808182 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0944828 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096083211 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067527493 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122228396 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094571049 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068425721 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070293598 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065933589 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085527221 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126321111 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087203496 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099935094 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064631278 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067737646 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083478103 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202500054 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078495947 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080207792 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069597228 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0741927 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105634682 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07682495 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076537967 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076003396 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127449036 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178106432 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094821469 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096443633 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066147643 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07891797 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114473595 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12730949 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064383922 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065412551 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12243448 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093532792 seconds)
  done (took 4.528472231 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.892831341 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137234556 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088439219 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159180705 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06832574 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084931199 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107410369 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066384325 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085386613 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199143082 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109108727 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.432409762 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109469579 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083519412 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066440329 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067372753 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065857085 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341620357 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107683696 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111272463 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08239624 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073168858 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068508167 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357138762 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065917316 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06565201 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066947406 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057157033 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111300036 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066638335 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.964465469 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114143049 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066030553 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099666763 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160378826 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085558294 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13097683 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063772568 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064016133 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144071365 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071791957 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063923212 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080803873 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100474188 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.099450809 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0661916 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.194782813 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160721779 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064035781 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065024229 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08519097 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.70579012 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151887257 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077179095 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066932062 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242294402 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084204418 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065818549 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063171635 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.195256676 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126568824 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066298197 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065528062 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065213569 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067368815 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.347833708 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06570906 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.713209353 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069767757 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078568425 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069284432 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066244197 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072255958 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07142131 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083431325 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06516085 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066765944 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065235671 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065088305 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066605822 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083062317 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187966764 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066361764 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066485318 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063932048 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085334735 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096032853 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070236855 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070935922 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101043525 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067027218 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066077369 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099812756 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065494816 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08241242 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067932947 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112180599 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064825518 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088396854 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086624899 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065998761 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095692511 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066337358 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097922973 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07687821 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066088958 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.209625821 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063289628 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063049074 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065280705 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06365056 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06847619 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066437507 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061991614 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.076757639 seconds)
  done (took 19.663275187 seconds)
done (took 36.346664436 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271843334 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076363325 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073461928 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07364839 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073539234 seconds)
  done (took 1.785489964 seconds)
done (took 2.998062018 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118141398 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097474329 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063737628 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094289222 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062920715 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098507643 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097463256 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080332998 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097534527 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062907789 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094410295 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06329314 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063294042 seconds)
  done (took 2.312878608 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081631185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081899814 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069257572 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082024223 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06247553 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080767051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079833864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087223619 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079280303 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071068784 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062740789 seconds)
  done (took 2.03214944 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080094125 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082473988 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069021206 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080861299 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062918655 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079803897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079608552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083947704 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082340129 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074124758 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06433815 seconds)
  done (took 2.030147102 seconds)
done (took 7.565676082 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076563968 seconds)
  done (took 1.260362103 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.57795036 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.009592179 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079834556 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110289048 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181025411 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116980992 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272092588 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085409279 seconds)
  done (took 8.793661832 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089068023 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082349633 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069235156 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071715886 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070910358 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068384097 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069964669 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069773879 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071313207 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073487697 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072798949 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070089011 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069887201 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069488805 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073062638 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072344549 seconds)
  done (took 2.415812267 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092424034 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091301207 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073455115 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075402274 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07295273 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072866837 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.0754389 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074307996 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071827017 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072475083 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073888673 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072510612 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07105206 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065199481 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073083745 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074513804 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069763898 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072652488 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074793239 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074664874 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073480746 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063115107 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070394838 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072824673 seconds)
  done (took 3.070061997 seconds)
done (took 16.732374579 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109665904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070656068 seconds)
  done (took 1.371790285 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078927887 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080691443 seconds)
  done (took 1.356814987 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080225211 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065166238 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087512822 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076415157 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064925063 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065007825 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08549299 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065235744 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064863342 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065031556 seconds)
  done (took 1.918819172 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067310027 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077270333 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069765343 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079153821 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072300566 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062886287 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070829626 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066912864 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076425979 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061935404 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069418553 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080706836 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069816008 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082141679 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071214422 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067212184 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069472547 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066009137 seconds)
  done (took 2.481536544 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064495377 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065594 seconds)
  done (took 1.333871258 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066056707 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062812682 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065133261 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065133021 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062395072 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061382365 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062137978 seconds)
  done (took 1.644852571 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380248348 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112360879 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298527578 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071214136 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081554329 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246243824 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064392529 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069016408 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068822201 seconds)
  done (took 2.63496775 seconds)
done (took 13.9491986 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077510949 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083802274 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093050275 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336748401 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090188383 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064685007 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112324964 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186292455 seconds)
done (took 2.258787309 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204980633 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.555671514 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.372537957 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193357012 seconds)
  done (took 2.326873658 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311438456 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091786326 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059589897 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067584775 seconds)
  done (took 1.742976023 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064958712 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068019447 seconds)
  done (took 1.342788763 seconds)
done (took 6.831083264 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065501102 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083878966 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066153321 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064525091 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064176122 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067042945 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064132817 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06389478 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066568654 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066383433 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069485449 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066339847 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065736947 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063872112 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063438945 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063824727 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066187286 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065927431 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064207403 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063148796 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062183875 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067560456 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062185957 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063290881 seconds)
  done (took 2.82297646 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082021614 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065111511 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070236405 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069381121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068529602 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069766001 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069808678 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064697425 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069951227 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066772329 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068510029 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068499391 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067081312 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068768303 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067165734 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069188863 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069900401 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065108262 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067239674 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068819279 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06938933 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066091713 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068372567 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069549202 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068269639 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068413058 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067229424 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065395018 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069767952 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068208162 seconds)
  done (took 3.275497211 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068224435 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061776757 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062855299 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069441465 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062419851 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064905603 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062332654 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062963478 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06335896 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063827794 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065575898 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06361987 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063915305 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06506782 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065356042 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068363766 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079556634 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064925684 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064392362 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064758241 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06720327 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06413077 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064148079 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06422176 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06419618 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063624751 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064416985 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064192062 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064889327 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063938435 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067297994 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067600157 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06387391 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070374169 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067486628 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063795857 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067846757 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063736377 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064381996 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063956213 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063448671 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063780995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064348897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071188712 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064367044 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065617993 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063660029 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063722657 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062454745 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065192517 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061784135 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06229485 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064074526 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063320639 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06600273 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061732477 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063043144 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062674137 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064714532 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062527605 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06227728 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06272453 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066415139 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064803166 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077868725 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069521526 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062670926 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064975625 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064981862 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066594924 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065244394 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075255778 seconds)
  done (took 5.915251695 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089403902 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.197107028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064554526 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064089274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06079953 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064564889 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067707098 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064668586 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066735918 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070070442 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064661631 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065918571 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065839615 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077266483 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065270691 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06603379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070365845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062306439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064555418 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067605359 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065507123 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067748363 seconds)
  done (took 2.843469894 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151759957 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069463077 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10387369 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071709383 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067770377 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073541106 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070434512 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070732527 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070364562 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069273121 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068731818 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070618171 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067960243 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06845664 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068407015 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068573346 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070215465 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068450277 seconds)
  done (took 2.598329137 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075599125 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065284163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084631177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065185031 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064858596 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066760491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069127916 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073051021 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067693756 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065164901 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073665604 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067327751 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067548685 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066203536 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069024215 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066183591 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068970277 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066462626 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074626506 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070839047 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070963333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074609945 seconds)
  done (took 2.762533284 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078583168 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066811551 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080888896 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068472663 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062614868 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064942143 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070942034 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066738822 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070433312 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068031752 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066428418 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064861363 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069860612 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066552019 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06976942 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066263835 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06786604 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066437806 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068437056 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062104089 seconds)
  done (took 2.598200006 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085539906 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066322251 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068103474 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075318742 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066663677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066263206 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075118613 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067678864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068117486 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087997371 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067913511 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067695212 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075282968 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071951894 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065890706 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073102354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07453861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07558258 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06783963 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067986364 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086852137 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067493089 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074536886 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06602969 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066591249 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066680001 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066526383 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071412489 seconds)
  done (took 3.232949476 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066747515 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065318223 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062825112 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062387242 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062401702 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062184537 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062531385 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062674018 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065165459 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062692307 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066757408 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067236015 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066922417 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066562219 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066519244 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066394338 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06553987 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062776459 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062553 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063178126 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065272738 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065101889 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064642387 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062385753 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06223826 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064461002 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062291777 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06286213 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065057416 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062532259 seconds)
  done (took 3.160965219 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074169841 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072002411 seconds)
  done (took 1.381359369 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061983099 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078668729 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063169482 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068846439 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068497501 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06615753 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07202089 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068713652 seconds)
  done (took 1.779183201 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080040568 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077647867 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068244712 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079940342 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077471035 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083079783 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134079653 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068356051 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074025623 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064472275 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079716041 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065122538 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071336605 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066057581 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072446363 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071666668 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063027342 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071081281 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067491497 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064984512 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068050308 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075715956 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069520032 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062514313 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068332103 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089469091 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078411814 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066589969 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07021009 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074220217 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072614925 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06096235 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066883884 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06788563 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065140017 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076741532 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082592137 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069886213 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075830916 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068470923 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077674092 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062339056 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071878638 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073476011 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076654587 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067451005 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067348208 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061939939 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064738754 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069106778 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062383354 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066827254 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061618876 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076400748 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070240045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077508932 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065284679 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067897872 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068009672 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068027834 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071749986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067126142 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068393631 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066210836 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076422417 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071420414 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074865029 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061811545 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060999346 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064677363 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076731196 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089117416 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073179526 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067395869 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067780906 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064802573 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070054039 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067847715 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07283671 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073015337 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06705084 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072285482 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074630706 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067533678 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069558104 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075169697 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06554106 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069997501 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064815664 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083461242 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065502193 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064810489 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064547806 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078102779 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070111126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066453615 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063798921 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072031804 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059743306 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065656222 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065833602 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065674649 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074604912 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068830475 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069186646 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07242782 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071526334 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064404826 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067040547 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060977556 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064620962 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063969751 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072550729 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06010523 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068710968 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066739273 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066645257 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200710383 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06415268 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066337734 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073773336 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071487879 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06448863 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062371656 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068488599 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065649334 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068091015 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074430939 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065865765 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062347925 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061525397 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070424184 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067672474 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070866936 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07004084 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070224392 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061269584 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064252798 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071134983 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074541763 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065997688 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067109186 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071238479 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067557943 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064915626 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07220275 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068028937 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065266662 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070765988 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066482398 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060834595 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069383795 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068385111 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064125169 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069561919 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069215093 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068293271 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066321443 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064639656 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073252156 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066769316 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064855032 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065371699 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064499412 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075721467 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067306173 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060928385 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063219704 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074816419 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063395294 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065075401 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064299017 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068046132 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065920005 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06354083 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065252532 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068023318 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075884801 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069360393 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066253076 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070825973 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076889198 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064681568 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067512953 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06498919 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066363004 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066039576 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073608508 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070328852 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069698001 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067552239 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061706236 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070773312 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072677097 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064514595 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063300731 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064447732 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069350814 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070260349 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069025336 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065317279 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063127954 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066379514 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068381704 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067991209 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065003238 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063985206 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071236055 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063488822 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071662917 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065851169 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075071179 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068405457 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060536544 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068370861 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063378103 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071256678 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061006573 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063080322 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064375082 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066002569 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06425927 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067572642 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05964176 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071063936 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071760908 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064807123 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06409667 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063555682 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070288076 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065383436 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067363472 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067255953 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069774464 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073726479 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063408758 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067016611 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073832104 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.194161383 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060184576 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071041969 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064606972 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065000097 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064801211 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063571604 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070241374 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074976846 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073958365 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060692478 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070254835 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066024063 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066698826 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06272453 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070616113 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.0687856 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066836902 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071997791 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066971366 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066122157 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069315111 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065449196 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066511077 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066911506 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068647665 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067008748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067656272 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064452099 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068664321 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06497765 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063341118 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067579214 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066238563 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065285511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071077965 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065323613 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066140009 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06783645 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06622074 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06636395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066356981 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065459319 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068839878 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066262348 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065846006 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068096247 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061078069 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072453114 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065552157 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072859377 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066025521 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061942537 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072658144 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067851564 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071996358 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06564196 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066765484 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067532769 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065080084 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068316502 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072655755 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063370642 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075923244 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072486295 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065842992 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068334477 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065449345 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066863993 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064919156 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066353387 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065528219 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065446105 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065298157 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069588463 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067664728 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065907065 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066914773 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065870373 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06545169 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065943351 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0598233 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065201404 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064780029 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06464614 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075390616 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065362051 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064610058 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064176429 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066017481 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064108518 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061980614 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075140755 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075876506 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06750334 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074037845 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065992102 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068396176 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077472304 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061026196 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065015274 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064901993 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064314221 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073005849 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066240246 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074956022 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065253116 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064808104 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062616883 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065752362 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063795763 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059611514 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062614361 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068673801 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064238124 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063418705 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064346596 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06656668 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064790956 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072963994 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063006434 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064741361 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064244289 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061404135 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06464977 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.198334093 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068709628 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066656179 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064069886 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064738778 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065082874 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066764226 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066929679 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06616395 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067638536 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074622071 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066247887 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068430901 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068870864 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060759753 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068539928 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06594226 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065197041 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065268079 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069771756 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06939341 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066295394 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074961822 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065087892 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065975658 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065943063 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064309919 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065995065 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064933268 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066156393 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065204771 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066598806 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07313519 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063726217 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069693135 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066290679 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06680721 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071868648 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066638723 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068289748 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072206074 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066155104 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067911353 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073294773 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069757764 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069411638 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0668761 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066959372 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07052968 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065085547 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.0729059 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066051984 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066474771 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067695889 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064234401 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065105369 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066162851 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064612797 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071572583 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066884743 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064415846 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064883572 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06375805 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066631653 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06890312 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07290457 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068223038 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069110935 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061259725 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062386171 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066540081 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063491453 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067564281 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068011726 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070911849 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0680788 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065793975 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064671915 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074473819 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072287211 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069572327 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064903681 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070733455 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068086474 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069573982 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068395999 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067535286 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06857384 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071605344 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069105984 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06669878 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074664219 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070799824 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068486328 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068843241 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068263893 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067875328 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062402211 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068148219 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0691123 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07268084 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069720091 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067328426 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078232596 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065233721 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068107444 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070567882 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066400381 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071727296 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062415968 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06854657 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068126887 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067685982 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062623292 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066415501 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064601554 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069334574 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065776759 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061348484 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076981043 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075066452 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069436763 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065813214 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065086875 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061858143 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.195128497 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0663489 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06827125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069888353 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078461401 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067031629 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06773515 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063619286 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067701076 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071057447 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071230952 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065007549 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063296792 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067786588 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071591125 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073045208 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065697962 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067630066 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071444212 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070131269 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064760974 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06883677 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063109544 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069862061 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07818354 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066711393 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06674098 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072275248 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073844391 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066504492 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061798018 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067017992 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069381534 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067172172 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06714903 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066533861 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080676781 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068587628 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065402727 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064872856 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068377308 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065059442 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073446806 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066831735 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066076393 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070227144 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067786398 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074726781 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069333779 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074126977 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069075482 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068856496 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064837326 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066074929 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064452319 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065048886 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066536023 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066638794 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070908123 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073910413 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065265838 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076014662 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074573798 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067532281 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062613269 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065202455 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065190359 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061267138 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066659544 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064154441 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06381449 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063655162 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064368667 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06677635 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070830334 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067267185 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06804374 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067355422 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061755297 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069696181 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069400337 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068123516 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064230807 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067389672 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067527035 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071111886 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07086968 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065166364 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068836308 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069183935 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068110805 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062508478 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073479958 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066077841 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068940578 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066827325 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067550037 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068328337 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0705874 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072267909 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068536102 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069591819 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071126674 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068682645 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063125253 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06392909 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072444172 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064698505 seconds)
  done (took 42.346289838 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09885685 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062514892 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061648093 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061713175 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073550321 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063546923 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062995448 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064391115 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064040755 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066387573 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063745453 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063383862 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071490552 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079164845 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074580847 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067461943 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062525669 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063816224 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061283105 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062110266 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069413376 seconds)
  done (took 2.745544046 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072832138 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069398339 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071869794 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074345528 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066650577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069255557 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071450737 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069731848 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074671243 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065787362 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074531194 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0696553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066091439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074448454 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065972786 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069650855 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074721138 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066328685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069154805 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071081806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069206018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071409151 seconds)
  done (took 2.851423808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066308436 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065352774 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066968809 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060425551 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064828509 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060356041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068316204 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063167949 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068054009 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064838934 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064099106 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064053848 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067003361 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060979367 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065338184 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062844864 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106859869 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067882207 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064626182 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065705522 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06055018 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066756234 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060809928 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060888776 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064150361 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068420714 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065431973 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063173891 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064717709 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064099679 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065399641 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064081613 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068125129 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066857475 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065462394 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066541566 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066337593 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066691748 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062674047 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062978513 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065597041 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061178426 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065307583 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066398507 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063064647 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06283107 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066520944 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064546098 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060575199 seconds)
  done (took 4.514592061 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07887631 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107720195 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068214343 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089437371 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080598062 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076892834 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069492576 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088727248 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063806569 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064318605 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079814205 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07820318 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064918718 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069245923 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071104186 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064596091 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065764804 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063581657 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068743894 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064147975 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06883547 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071230987 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078420248 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07723601 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069111853 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063700102 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06428254 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068814441 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076654842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069078903 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069247478 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070691195 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079008796 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070197574 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063863943 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066874408 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079971778 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064926797 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067148275 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062895123 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066939035 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068549675 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070887042 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080011635 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065137292 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06960542 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064471718 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06211925 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076878773 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067237366 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072353072 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078508974 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068315606 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064567178 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068803929 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078906719 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064480351 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063331169 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067450384 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076427039 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062150181 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067972597 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07774158 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066373354 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07110084 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077804177 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069768162 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068119764 seconds)
  done (took 6.280295358 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07379522 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07181157 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078885646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078639047 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071636844 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071269572 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071163001 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07111376 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070690126 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075897446 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071137412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091727126 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066443002 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074871163 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073045408 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071612634 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070839731 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071258342 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071084171 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070884835 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071437176 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078758351 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071517489 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078583669 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096837236 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066862032 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070680132 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071128225 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078583662 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071183402 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078451648 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070890839 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071417594 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078473244 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077788482 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070627925 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064190331 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071410482 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071267573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070540883 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066302463 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078238718 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070452824 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066533637 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07086335 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070820464 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078283128 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077605066 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073404969 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075648772 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070934353 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078246934 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070710678 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070933341 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078300611 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102555032 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077809327 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078057699 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071063301 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077953189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077936574 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084412472 seconds)
  done (took 5.94677475 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08205662 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073407173 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074515535 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060690839 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063082249 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068946114 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063823232 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063178893 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073415641 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073014893 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075595477 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06851413 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071797962 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07544578 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068439262 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071288978 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069198162 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068453554 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073113377 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068769205 seconds)
  done (took 2.738931991 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073192324 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081738111 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066277707 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071048202 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06846682 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070610858 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067367365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067955555 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066086684 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067849922 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075263135 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074476916 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066187394 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070341971 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074398202 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070570286 seconds)
  done (took 2.453103523 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074093862 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071798818 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078851774 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065493916 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06341885 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061779408 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065272503 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06084439 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061815832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076818073 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064786195 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06721907 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064850205 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063849522 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062325436 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067718191 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061886632 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062638363 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064934506 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076565929 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07562766 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063718896 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065660465 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064603743 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064743797 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069860675 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06418 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062514909 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062065456 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065001605 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065026438 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067995832 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061917938 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062960403 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06367111 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062617706 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064606117 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064986813 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067720772 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06464632 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062933504 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064348795 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064775057 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065373013 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061430029 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065197625 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061165863 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066826895 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062666528 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065284392 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064496557 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066885245 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065296732 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07079473 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067447766 seconds)
  done (took 4.93907297 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077838526 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06823517 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060881585 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063031815 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067517734 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066387919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068350754 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066791456 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066673981 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062871231 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066617389 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067729533 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06708099 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068323289 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066770052 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068411358 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061224914 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066646263 seconds)
  done (took 2.536796482 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070312724 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064996477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072153849 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065400785 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064298118 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067721 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061407933 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063647551 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065066376 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066553102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065247232 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066895751 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063738992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067460936 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065239818 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065058179 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066906061 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063480375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064578254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061055625 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067211507 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063609265 seconds)
  done (took 2.7700326 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071364544 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090749178 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.135984253 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082367258 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080190389 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077548982 seconds)
  done (took 1.867551596 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089115521 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077248183 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066356467 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086376495 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072220265 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065901339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065844803 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06649203 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075110297 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074820204 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066406168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074568874 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074472232 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073826295 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071901914 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071926349 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066376301 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066412818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065312134 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08248252 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066353225 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074747792 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066366213 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066293499 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066625061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073509438 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074422509 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074407209 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066275417 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074527469 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07153594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066251577 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074475111 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074734446 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067995114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074073192 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066137947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082209764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07178189 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073741134 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067557616 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072244155 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074475082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070632477 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074203396 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066133464 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070490252 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0661209 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066113827 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08459893 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071793651 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073413469 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071570131 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07458091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075062063 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083990168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074902843 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073892549 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072445615 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077649843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073994974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071545939 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07349509 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0745383 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071937762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073720406 seconds)
  done (took 6.115617661 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080043885 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085249254 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066820799 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074652637 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073773958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066066127 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066550959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066343055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06670869 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066061706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10608161 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066719394 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074282319 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074070855 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066481257 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066428589 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066418185 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074091049 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065984856 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084518907 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066416179 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074178818 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074024922 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073639198 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074906789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071859551 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066457836 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066256766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06681591 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066597751 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070992794 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066501098 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073971004 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065708898 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073662029 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066336937 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066111057 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070777884 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066051826 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071860558 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074168008 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08268131 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066514572 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066128365 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074914625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06584133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065976242 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065948425 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066478882 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066421321 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075189552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074579662 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074706278 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073339962 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06647772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066380688 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06673968 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066696564 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066466246 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07185669 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074031352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066678139 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084741922 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066462806 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066241364 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073874359 seconds)
  done (took 6.03134679 seconds)
done (took 127.716148183 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181758386 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16743158 seconds)
  done (took 1.678260433 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067297265 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094937011 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075957868 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127378026 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06583962 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098728745 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097461907 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077208119 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065171488 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06500876 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065267005 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067001317 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.12968893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06568848 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065422633 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06719526 seconds)
  done (took 2.636634591 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09581369 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171219215 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097927418 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064079159 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09541483 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071794301 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063947931 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073526754 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.06980553 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064286704 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072089741 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069852352 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064063827 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069563307 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069665115 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071588736 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063803543 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071745385 seconds)
  done (took 2.764423595 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098454776 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089671253 seconds)
  done (took 1.534026614 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154040778 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103772155 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148656577 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33105067 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158964611 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228436257 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12577873 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124476512 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115046741 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12116621 seconds)
  done (took 2.954248358 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09638281 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145854874 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253057174 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114044138 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071055511 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090225268 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114643329 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076562444 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07677973 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076333574 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076053638 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074990791 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094270456 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072438917 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072275676 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075045302 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097843552 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071527636 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074608845 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072923068 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095221381 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064728836 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072616867 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071078052 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073849099 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073481788 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064558225 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064572774 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072974725 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072580931 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076217639 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088609226 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07378668 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102815132 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068746009 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103950469 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075297233 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07022358 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072644005 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069840411 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074369417 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074657513 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070788148 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074875949 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064953625 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.0747605 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064952312 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064669544 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076490105 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065761416 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076857216 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075874593 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103226711 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065546057 seconds)
  done (took 5.825906903 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.657615408 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101314076 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06888982 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106677301 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094518061 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071082945 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.680728929 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089024362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172497778 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091759963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088288091 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07108487 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081614409 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083087252 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10948645 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100126273 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092117943 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070111489 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099314579 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.096899992 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067153386 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091831183 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088498846 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373404018 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066395391 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068316511 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066790515 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068833313 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108254518 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07679286 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069383225 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11931722 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08303685 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119192404 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066147526 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066543739 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066676657 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077828703 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175839056 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130292285 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128997972 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06603095 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072409742 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067773363 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088230595 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065894867 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108421313 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07913974 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117166474 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069105732 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068856833 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067028625 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067822401 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078693843 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075641279 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078837706 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227663618 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06722276 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067074256 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069760464 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177733835 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077564704 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077527765 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089994285 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.126503829 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066690261 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.689774063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082756789 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066722747 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068114821 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066309037 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068455361 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067147798 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244122885 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.341731389 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069166439 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069967431 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067879599 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.160589542 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077489262 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068602519 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110608594 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066860674 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068581751 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068595832 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069251931 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116636846 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079318128 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069383439 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068137879 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069476192 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068039984 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067076394 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.161504253 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079991725 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078958792 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.159451486 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068733055 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110540491 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078629627 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06976651 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079003232 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06711472 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069834336 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068306875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078583879 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094113063 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078812816 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069688958 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067045822 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097084726 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079660666 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066799329 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078029266 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395481767 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078758317 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066818344 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07976868 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067877448 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.110099743 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069013392 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17429562 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06814449 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078304005 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068105868 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066034681 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067341391 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108913801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069286015 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067772829 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068197687 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069169614 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078180723 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131300593 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069060291 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.159867613 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.136157061 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068990267 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117437456 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067074671 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114748221 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069071853 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068091397 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066177234 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.705788379 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066795514 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067002513 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06817868 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13476776 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06631336 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077764909 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074956626 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065800125 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.684674253 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077058734 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.204738993 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079922932 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069616975 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068560503 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06769887 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068887964 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10826164 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142660349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069766465 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068045558 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077101023 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110563584 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066425278 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077401725 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077715855 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077854758 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067835767 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069749824 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079660146 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115941301 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078117194 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.132701172 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512422103 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067185941 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076962322 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141339374 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067562183 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083964764 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06727835 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081669404 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111256881 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076186496 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225408657 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112683321 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137057498 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079093153 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081425458 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066893695 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066874604 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078505679 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067550833 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06860582 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077239501 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068981967 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068837365 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082504105 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068138808 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171772583 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066782388 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077613388 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066745109 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069035614 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081741552 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067269352 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068540204 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078217602 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069383238 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076865079 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.632613191 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076759585 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066919996 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068612251 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133129926 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.111060332 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067140671 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067541613 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069655399 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107793339 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.154598742 seconds)
  done (took 27.803740955 seconds)
done (took 46.552055196 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205087618 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148167427 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198581695 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1162827 seconds)
  done (took 2.111396481 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119298176 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099491573 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093582444 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064200189 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099833928 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064812048 seconds)
  done (took 1.921865989 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303838772 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206128568 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177805318 seconds)
  done (took 2.063505972 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.192991941 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187702772 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395599192 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249737674 seconds)
  done (took 2.509220703 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141687549 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087194397 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065855245 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083135193 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135505876 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158611872 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099506047 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123404647 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077283292 seconds)
  done (took 2.402344695 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142004607 seconds)
done (took 12.541382085 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092314086 seconds)
    (2/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.204436514 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114743923 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175022886 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087014967 seconds)
    (6/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187752574 seconds)
    (7/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.182306906 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072456176 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.153537768 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.208740079 seconds)
    (11/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.211419487 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.171913881 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078502827 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.209157246 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073723611 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105743766 seconds)
    (17/309) benchmarking ("sort", Float32, false)...
    done (took 0.128676238 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.148243543 seconds)
    (19/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.167579785 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090511669 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097502157 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126668154 seconds)
    (23/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075670978 seconds)
    (24/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070867692 seconds)
    (25/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.219302515 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192925677 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.147920298 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06760299 seconds)
    (29/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.14461432 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188133692 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.161899994 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070668004 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070387164 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081734221 seconds)
    (35/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078774307 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.133464922 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071293878 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065780506 seconds)
    (39/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.147333937 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11151808 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.142574373 seconds)
    (42/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090949149 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073219289 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188920904 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055750779 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077360783 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07467651 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.19899949 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.134143674 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088636373 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.133519405 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067990626 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093103509 seconds)
    (54/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117317358 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071315438 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090460132 seconds)
    (57/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095132499 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089079492 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066016649 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066787214 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075869343 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072249919 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06003642 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126793962 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111485945 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064324318 seconds)
    (67/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.153989377 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088153758 seconds)
    (69/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.144466247 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073705274 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.065633737 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075072725 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064417043 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.049889205 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.049705571 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081191313 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053253772 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097627473 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070912096 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087207168 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051544897 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080134044 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051483628 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049526328 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096615574 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.27301117 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071620628 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096891957 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067060755 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088729659 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126478134 seconds)
    (92/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110403152 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087103523 seconds)
    (94/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105701229 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076362925 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.065931234 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094804147 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113842055 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174196885 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065844557 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068878908 seconds)
    (102/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051575577 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072287797 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065342316 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.17092937 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07562583 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092281349 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.180106741 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.151428999 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051035314 seconds)
    (111/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081289531 seconds)
    (112/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051214247 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136687354 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089142284 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050391974 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074593433 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168976238 seconds)
    (118/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.096885704 seconds)
    (119/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052544923 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050104815 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.352736217 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050678026 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071096253 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072071832 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051410207 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.167659024 seconds)
    (127/309) benchmarking ("sort", Int8, false)...
    done (took 0.136967424 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.192766612 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087521247 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071849108 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065283411 seconds)
    (132/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071490307 seconds)
    (133/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068479606 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140570608 seconds)
    (135/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074632838 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093406818 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095623822 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.136850812 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096602884 seconds)
    (140/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103520315 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084787546 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086017311 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063752865 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 0.131392229 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071807486 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074657473 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070827043 seconds)
    (148/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06820602 seconds)
    (149/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050739192 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069175482 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060978367 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064025605 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070476079 seconds)
    (154/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100924761 seconds)
    (155/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052134913 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143824934 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067923395 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076937 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06303768 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075057129 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070850781 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077862475 seconds)
    (163/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067307507 seconds)
    (164/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05108544 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106677069 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16327248 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050439084 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064035944 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073242549 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071199115 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.145436867 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070825567 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064283549 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067012755 seconds)
    (175/309) benchmarking ("sort", Float64, false)...
    done (took 0.124281331 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06627053 seconds)
    (177/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086846837 seconds)
    (178/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072334536 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050198559 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120065059 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064120755 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.097379512 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107160139 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092842363 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077007549 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051269241 seconds)
    (187/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074463375 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.160500348 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093794562 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050015889 seconds)
    (191/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085910042 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051413238 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063736305 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06463621 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.294612805 seconds)
    (196/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11558051 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06700079 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0726918 seconds)
    (199/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099906305 seconds)
    (200/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.137289768 seconds)
    (201/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.161568499 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051438776 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064837897 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07380221 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06589443 seconds)
    (206/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051870388 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050741262 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050426073 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088512167 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06358925 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072295776 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050621205 seconds)
    (213/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061796187 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064907635 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06403696 seconds)
    (216/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07281889 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062409548 seconds)
    (218/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050545424 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07401066 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051598027 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050501744 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073557606 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071614617 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066675785 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070765035 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052045626 seconds)
    (227/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06129847 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050515886 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063999005 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050396261 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066365012 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087562946 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089490722 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073637688 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074974678 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171255962 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133264394 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070140734 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05077704 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06359442 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051957131 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164246115 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060735234 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066455149 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08663848 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064790316 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13620829 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071822325 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070649002 seconds)
    (250/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064049142 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060275011 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091119572 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063582632 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07214806 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067620057 seconds)
    (256/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06521564 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064440773 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063998718 seconds)
    (259/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052132085 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07054767 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07075016 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070923417 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08628776 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072203175 seconds)
    (265/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065249412 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116302018 seconds)
    (267/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060535544 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066404961 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050359936 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066509008 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064454994 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064505535 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064023954 seconds)
    (274/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05026019 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050208896 seconds)
    (276/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050305616 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065911672 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064642812 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071185478 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084237243 seconds)
    (281/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051479439 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077898782 seconds)
    (283/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051987162 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071716708 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143444836 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063103904 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063249684 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050439669 seconds)
    (289/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052959477 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065419792 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071498195 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116362685 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138039515 seconds)
    (294/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070209148 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050529924 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05266455 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130039562 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.06922561 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072034762 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165639805 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052022221 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13776088 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051841434 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094773358 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077736475 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070102283 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050884236 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174008737 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050400911 seconds)
  done (took 29.938482378 seconds)
done (took 31.330888223 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082526099 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092408692 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074465229 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09311852 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080051766 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076064396 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071956922 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077316756 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079193101 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080891351 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.0778226 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054623465 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073156854 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074363644 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073700882 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090325176 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077486045 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072247403 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072463643 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064568157 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072638262 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065498877 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067089431 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054775159 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077921239 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071171785 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071881114 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073398165 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065863256 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065771722 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068533631 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073184514 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065387624 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077520019 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071577071 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072469733 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073727741 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075682411 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067142174 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065546209 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073599366 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065334958 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07273664 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073376909 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071506805 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070883871 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07249396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077172859 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090440434 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06785239 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073710553 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076470924 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075371145 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071970335 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06901011 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072340191 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070075701 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090368371 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073126409 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06773888 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073126823 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073177739 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070636083 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072363644 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072284125 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074278322 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074788122 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070715804 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07430637 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070738198 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064937311 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072403973 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068302689 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065182893 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075023612 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076445013 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063968882 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070580272 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07217426 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070479425 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064546361 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067022047 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066330505 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070853906 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066606872 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054333043 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06841725 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070838577 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064218485 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072353386 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070835612 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071578319 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066641993 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074819791 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06419903 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070004929 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064872266 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064825393 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066119618 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068828971 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064486254 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067096869 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074175908 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066388974 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070775851 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078162607 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064599411 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070995532 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063697741 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064632989 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078443362 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073946941 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064841249 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067434887 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06367931 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071492055 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063749779 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064500921 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064318912 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064603785 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070087723 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064365419 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066133491 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070652131 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075755654 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.0634378 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067310639 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065692992 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063983358 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069005934 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064045649 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063701459 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201308981 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062810352 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068402678 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066103726 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073274636 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068217035 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073044705 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067001597 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073584109 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069879422 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071121964 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071164322 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064472546 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058865048 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067580897 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067544114 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067522774 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065621085 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06748389 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066174763 seconds)
done (took 12.357896507 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066365284 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141791234 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098019997 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095443672 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085869376 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066220138 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075511331 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101044322 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067310415 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101544768 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087218626 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08456291 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111119126 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064862031 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065589656 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06922128 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067398009 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081214545 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100085182 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086090434 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108083771 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065033678 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093382639 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089165679 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086325015 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09181327 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066592145 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06922333 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069261519 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099375058 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086652718 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069573398 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066621975 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099587258 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091480736 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082358622 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066366657 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081259423 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066221982 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065477974 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080413501 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097075346 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078954763 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079635277 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069753063 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068523111 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066930474 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083073669 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088223297 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077730409 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085885442 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101796017 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068467856 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065421911 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064229841 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084103378 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064754725 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068511192 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066012027 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067700074 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065787291 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068928546 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080248862 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085584852 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069375532 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07892697 seconds)
  done (took 6.760508339 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082931721 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08979519 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082830239 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083228594 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065437042 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065914708 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066457812 seconds)
  done (took 2.023093728 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067242555 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08763633 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088514077 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088553996 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084401494 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086761211 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075465045 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066236935 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080237433 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067449723 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086936467 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101304523 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066392562 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07274913 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090616506 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066108636 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089851598 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06645607 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069494511 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089481118 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068172541 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081622085 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069770376 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066685988 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080081194 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066517858 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111870127 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070692729 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067652847 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069536028 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063989527 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105162198 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079750325 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074779786 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065743071 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080014565 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080460373 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064414594 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082207203 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071179543 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079790654 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066591637 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066949116 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064047654 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069762656 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075850044 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066668157 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066720773 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068566274 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085093084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066293396 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079041402 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070517242 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06813176 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066909489 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069184387 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075255471 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066415333 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085164191 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066929889 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082120855 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081489862 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079167193 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081352312 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067762249 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07919197 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079159021 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068310593 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067153125 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068816036 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081688433 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064085705 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067327462 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076146051 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067810964 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088290061 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088401824 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067541462 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075123924 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066821979 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066149017 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066312913 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088305218 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068238986 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065919165 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069546267 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068684572 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063928312 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064816837 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068956666 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064205309 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067010452 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06846307 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069081725 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06876861 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081988732 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067762582 seconds)
  done (took 8.688034916 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068394835 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067061622 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069170639 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066682469 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067201971 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067073476 seconds)
  done (took 1.914689954 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09185064 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068894086 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079566217 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071503331 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102976695 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085822613 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08728732 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078029741 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082865834 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078255394 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086063142 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088347389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091879881 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072180107 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085832307 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071633825 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086832066 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075189652 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077794628 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072445946 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086120418 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071922978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072222135 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081007313 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075050319 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071884123 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066827685 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077894888 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077575221 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077792685 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071967722 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074838467 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070029575 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07793051 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085995158 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069985979 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071132228 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076212369 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071669846 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074897051 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087373562 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072225691 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073685616 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076119071 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077370848 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069698833 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076397148 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07528561 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085373391 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075846565 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076220092 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07094386 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074468861 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075833556 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069558152 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077278061 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076106277 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085156673 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071404663 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06978954 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068416349 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074718863 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076513229 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074356267 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077626076 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075951787 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06898194 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071706381 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071855997 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070985445 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076246499 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068294294 seconds)
  done (took 7.018064659 seconds)
done (took 27.880688104 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542185565 seconds)
  done (took 2.019960129 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61315092 seconds)
  done (took 2.114579688 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.384184317 seconds)
  done (took 7.880732855 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389938311 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.503207617 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.7045978 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128426555 seconds)
  done (took 3.26914003 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.66279344 seconds)
  done (took 2.171637622 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208349376 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194096699 seconds)
  done (took 1.920645177 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.368615981 seconds)
  done (took 1.867001271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.097923111 seconds)
  done (took 2.597991436 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256217249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160622435 seconds)
  done (took 1.922949414 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458238217 seconds)
  done (took 1.960093345 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.81864957 seconds)
  done (took 6.322721629 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.202594129 seconds)
  done (took 1.752895153 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238508498 seconds)
  done (took 1.743548225 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.71204042 seconds)
  done (took 3.218498865 seconds)
done (took 42.271672743 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079327837 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080235674 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079583597 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077028271 seconds)
  done (took 1.813468716 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075242766 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071129722 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07505034 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071786621 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075979332 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071108923 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072839344 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076234977 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071454106 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071828718 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071355541 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072026083 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07375405 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072729057 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070023558 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073761895 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07431936 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071262733 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074442888 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071485776 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070641054 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073369657 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074124103 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070900089 seconds)
  done (took 3.259006259 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076549456 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072382262 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074209833 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070469992 seconds)
  done (took 1.812305101 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076750526 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.08972435 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088074215 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076549165 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090234835 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084721069 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068056857 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068059229 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071914945 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076061312 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067330733 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094406686 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086624888 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075738563 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077827794 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065196329 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067467029 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085841573 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075758284 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076469942 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068800492 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076055916 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06705306 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086504449 seconds)
  done (took 3.375344879 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07641368 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10111784 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076429777 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08605483 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088152167 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0642062 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07359369 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088190778 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120983373 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064098801 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069205032 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064460241 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071293535 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.0640499 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074980748 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103504162 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107041502 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06776438 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094466278 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064880396 seconds)
  done (took 3.14423929 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072208467 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068418098 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064213725 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067846109 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076422451 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072644948 seconds)
  done (took 1.946355932 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067251612 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06682748 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066705244 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065543812 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070843674 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066624013 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064769775 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065975125 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06578604 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065955277 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065274165 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064872643 seconds)
  done (took 2.316656054 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333370625 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06775392 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067553664 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06508666 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069486773 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065302552 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078564111 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06755943 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089679735 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065584073 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065533845 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067585681 seconds)
  done (took 2.625603141 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201970317 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075271992 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232292237 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134883343 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109483217 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113467423 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102499407 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111937103 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140881719 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100030413 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164396527 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161975718 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105367483 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134419085 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088193198 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096855175 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152542747 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159719223 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101861897 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16275983 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141473576 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122480796 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144015896 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099838818 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10395759 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119439884 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06962943 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078716308 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166673107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12905161 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143629104 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108979432 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091915149 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172881919 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16821474 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139562536 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131741253 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08289684 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101098899 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129932745 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194007363 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086445538 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158461183 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243299796 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080567383 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137858083 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118688772 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118709127 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106298371 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088697821 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145049381 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179279163 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136436032 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086054276 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110064128 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114121987 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114855132 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102631119 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179349468 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158579297 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124906878 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070642896 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097138666 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149731533 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130278662 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107184356 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124503021 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091299136 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130923502 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15112941 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116187406 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140302398 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126343107 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087128939 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116738034 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13679931 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125436603 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166637348 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122451975 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071790886 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122440526 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101623349 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080242434 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141116082 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073935636 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17121982 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09653838 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10396997 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110829215 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106371291 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106835069 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156609308 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138317986 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242636394 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065601699 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102450504 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118277449 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1448828 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087030034 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10604533 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114671957 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076987621 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136583514 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073907482 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121722717 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075274563 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123110699 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130206907 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075144321 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120191595 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099124264 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09952386 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131749091 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157294659 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087505211 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082183606 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163717983 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120882512 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102862164 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142319984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152752247 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097455726 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101426057 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146306504 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176878082 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088011424 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159887713 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106069709 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082799355 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086564386 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121896625 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110172911 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119875977 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081427729 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116375626 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165280533 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073956587 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093821708 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131375597 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077204307 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079270817 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101429818 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098849084 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093724385 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098022673 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101921086 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1358281 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119852502 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101890342 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266721822 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096934733 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168223493 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087442166 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09923235 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10288582 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068373993 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135120762 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154885474 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078394449 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160615177 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121175771 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103596701 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116816335 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081923847 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138686546 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077952261 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0700681 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143036146 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110297331 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108599997 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147868411 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102888376 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124930766 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117740837 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131907979 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129570746 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127138387 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104631857 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087253531 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110111788 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123480589 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071722651 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089623284 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079204389 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102148681 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093839256 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08185585 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139611315 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12215515 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098051558 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10960412 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094811231 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144471821 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075062465 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126701886 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117378107 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091867211 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148126595 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149196743 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128013485 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096984613 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141018542 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068835008 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072152673 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085904508 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118368762 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080503385 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080521712 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112143134 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140564889 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122765543 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129913756 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106920148 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11451603 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14807626 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06690862 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112221211 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139154133 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115094776 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10084913 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086318424 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094778455 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132506555 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10136016 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166660141 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106579656 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118499685 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142442812 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.094778758 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076124394 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097011714 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123898971 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101882633 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13244042 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09366003 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083225667 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101283121 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071084005 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092052881 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117919272 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110988371 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124041034 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107143603 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122022864 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07316763 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107575546 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112616228 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112598928 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061623044 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110517488 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147845546 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088627675 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108913607 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13944889 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075456999 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.117090571 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.425122961 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144823581 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085587735 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109999924 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118392108 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127235485 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118909308 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139423522 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109092719 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13402755 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108542813 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085833825 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086966969 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09666863 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104619133 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093977509 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107784729 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114026399 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095427168 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130481984 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102389854 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108722465 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116506248 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096168178 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088972277 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095582889 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17241762 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117741733 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168875199 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098023234 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143143413 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161789905 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073985172 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077937222 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077046419 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138258246 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082579686 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129097939 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095630175 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103875172 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121940408 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139147119 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093234578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067129033 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106242081 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131612673 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110636205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096240455 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103298886 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15880867 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09814983 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077765738 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111168914 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102146169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100128927 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167958745 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.2077612 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096396635 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075011136 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080214064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124584425 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149892484 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079767801 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102282465 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117118378 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109171173 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125565872 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099537845 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097435294 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112951262 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147266046 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126924582 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088022732 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110273438 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127549084 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170413363 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102986215 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094034102 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168155685 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148622502 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157121206 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08696485 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111647046 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11244114 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109100872 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136708007 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082580203 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160785177 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081003468 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133859107 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102383403 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08859358 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127937585 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096942367 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086675811 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144937184 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115447897 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081070347 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076301739 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11578813 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118399348 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104931206 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073879664 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136037272 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071629768 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12935756 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16479663 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079840718 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102515305 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24178533 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078707798 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107065381 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101616862 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088283235 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09736851 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170503566 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087104012 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147232086 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139199288 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111477484 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135205291 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09835498 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63392575 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077195602 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149621101 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115375135 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169796026 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095752795 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115981314 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107776534 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121609921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141575281 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103383464 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17501458 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129284545 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114884721 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078313105 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100897256 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10066144 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087258481 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103424749 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111720622 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113767316 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091869287 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11396205 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120933486 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080683762 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093798044 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152997325 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11498792 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141195472 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137804097 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083290358 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115739827 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135593027 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078878845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119165596 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148307171 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103475498 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096059965 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079177276 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245152253 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165814324 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072177572 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159923692 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118479849 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107603382 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111547224 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112900569 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129631061 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106871922 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119920002 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091142367 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108248715 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110940753 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081075881 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075800045 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103012751 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11010338 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095991253 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096675915 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097002675 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147671967 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070559832 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09385464 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101707074 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142366074 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17183038 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086503226 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081537707 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117007148 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110622351 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111212526 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118500862 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078282692 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081370508 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080285847 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07721712 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106272707 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109976912 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10210571 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109190236 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160469593 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08122742 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221606273 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09378425 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102949393 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068749654 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077356596 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093886241 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095474177 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106281701 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098632317 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166896407 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092649663 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087852938 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09031111 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071943259 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081032068 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12488273 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253202032 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116422848 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095852046 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061827213 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106665421 seconds)
  done (took 57.646313211 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107433504 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081685728 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096987384 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149859757 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121751641 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211227726 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15747269 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198376683 seconds)
  done (took 2.795402541 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068151706 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094034916 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099497559 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082012443 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066901029 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06794589 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223639829 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080656009 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06624423 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088396202 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079345733 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068505485 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.399568091 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06823474 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069612061 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063980852 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066728789 seconds)
  done (took 3.405860317 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375687843 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.369461146 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371404303 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073265575 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.671511932 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088861159 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.080294472 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095549727 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070658892 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.28160491 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702108771 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.095377007 seconds)
  done (took 13.938935589 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074979793 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068939263 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085428899 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086206137 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074319499 seconds)
  done (took 2.051570326 seconds)
done (took 101.687011532 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079313482 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.309282364 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055014968 seconds)
  done (took 2.054081542 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082511091 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086233025 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087266657 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085597973 seconds)
  done (took 2.006379341 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073777114 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076219645 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.085547319 seconds)
  done (took 1.897770632 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223518489 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139439992 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087050818 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081646708 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077628898 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07851854 seconds)
  done (took 1.903276621 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070960325 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074486867 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072472256 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075624657 seconds)
  done (took 1.954928189 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075578015 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054552508 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057353119 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057701526 seconds)
  done (took 1.908035163 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086146671 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078030515 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077720658 seconds)
  done (took 1.906399756 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105982883 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084238261 seconds)
  done (took 1.853776032 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081064685 seconds)
  done (took 1.745087853 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098032953 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112905928 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12755491 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108339538 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135284612 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107822705 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085168263 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08576105 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076084297 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086228761 seconds)
  done (took 2.686634189 seconds)
done (took 22.108975585 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078457312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365770181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360543256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090740792 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667981214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355711522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021909999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091392556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120427994 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067515673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083276222 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647163616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978670256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323568383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961289696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322762625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649999927 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067672797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067234036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068169923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009720063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067178428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067454445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067879344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648914504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370206429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067853558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318767469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06756086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069432351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353966859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067558827 seconds)
  done (took 16.217158927 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069967909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117072128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073051879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083425681 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071002697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069241796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07119903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068586711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124557009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067491246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084264574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067346375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071422448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068116177 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086738421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068074947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068270213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068167621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067841879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067993444 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08632992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067543414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068323176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068281833 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067891049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079255189 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068244612 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067863631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068268979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070204256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070867767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068491028 seconds)
  done (took 4.064682272 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114742621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124391055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07348901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102777529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111492492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070130858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142693357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092412314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126613652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067673774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084149665 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067796476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100712399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068495173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087515776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068007876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069034935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068320161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068233787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068452819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087239121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067990609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068052276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06861936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068725934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0809968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068515812 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068684108 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068031983 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070218375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071250816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06863839 seconds)
  done (took 4.314814267 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072490982 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074799677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081634667 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082810658 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06917681 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071658094 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072520602 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069195743 seconds)
  done (took 2.278495435 seconds)
done (took 28.544711498 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078436098 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069450671 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072214594 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080640793 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072786477 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078268817 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066808335 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07452462 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071606129 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072623819 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074562548 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067460001 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070854924 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067081357 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073394764 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06743986 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078903998 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071339256 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079151655 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079115697 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069674972 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072806086 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074361308 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078864577 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078595447 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079257503 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077141947 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072504399 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069415179 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070160925 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076787598 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083800188 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069068025 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079008312 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067250376 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067579124 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071306384 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067912292 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078850579 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076939244 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069418105 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075955462 seconds)
  done (took 4.755912627 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08741204 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09050309 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084522483 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062451025 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06674378 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064348918 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088249726 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059593086 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059441422 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088304167 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055605627 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059125124 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062364255 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054082208 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058989747 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056939372 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061544588 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055844373 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05901336 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059258137 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05813072 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054150274 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060108224 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065221377 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056170383 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061965138 seconds)
  done (took 3.383701824 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074166165 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083578226 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088240186 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126117958 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103804565 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077090527 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07790031 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087078481 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085254769 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067050767 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07108512 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093935932 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08800554 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073329149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067188914 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083974631 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082242722 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068737958 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073120425 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090514968 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084106722 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077553355 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092383784 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080570955 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066916919 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069936478 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071046266 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080959457 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071792829 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075745382 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070904754 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070574285 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0688514 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07886135 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070775873 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068774668 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089532671 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076662849 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07796943 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0676544 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070183656 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068218061 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088728749 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122617001 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066711007 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073538087 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.086273686 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07654817 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067108714 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085907424 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078402881 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066990682 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070801802 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06665093 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067264376 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080136782 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069000407 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069184011 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075643445 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070030538 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079602444 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071012092 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082153943 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066724477 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074374363 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066486618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067886767 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066079158 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092134617 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068752953 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10760922 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069159457 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067849039 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075442571 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074528785 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072943711 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067199903 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082018541 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076944687 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070128167 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07596422 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070489574 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07004739 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08740702 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069679177 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068969176 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068211218 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072953063 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069838334 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068414153 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079903884 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.0669957 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069747852 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083566974 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066977636 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06822727 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073121547 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071692014 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066958315 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078014772 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072165169 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067828836 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076280508 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067101229 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070257676 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077314203 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07324754 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066304798 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072063839 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073010567 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067855562 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068929553 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070207451 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069022792 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076698904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073494725 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071283369 seconds)
  done (took 10.549726245 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160552014 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15257187 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070417847 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143781836 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076270764 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079042944 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146529421 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094299496 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06817937 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068115415 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0691334 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117147161 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105201955 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121414052 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078226856 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06728282 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083261196 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116654717 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148199588 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14270095 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083443741 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076839588 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070105854 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068918963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074467485 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08268885 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090671638 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076594651 seconds)
  done (took 4.452572557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079945893 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100329251 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074051098 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089378263 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090293151 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067654528 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070153514 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069982286 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080320361 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078129223 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067329752 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073052157 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074150878 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073428186 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06875383 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074214942 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07487568 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06915576 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070883088 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072678276 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077198028 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080832957 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071685702 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06709155 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074045573 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066888596 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063679375 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083676116 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067776921 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089966195 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065613475 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075158678 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081356178 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068540233 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067221993 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067636479 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067152382 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06711624 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069475377 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066307871 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065981886 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057377054 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066533031 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079705297 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073756879 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056489418 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072228738 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072851196 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072427883 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065136452 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070204939 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070075336 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070431463 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074495805 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072431756 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072402142 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068383314 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065815559 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074963934 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067434606 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064264458 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06558223 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07155447 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065419149 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075225581 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07160658 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065961624 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066833886 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068916575 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073312626 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066763904 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070338581 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065115545 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069080946 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071628759 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069062456 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068120159 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065903386 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.0669814 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067434061 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055262859 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067065367 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05314739 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070071266 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065419702 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065874531 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066824019 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071940328 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078957313 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068821039 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072895185 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068317993 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066238415 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070204876 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059869793 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069978443 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082327908 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081955059 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067239478 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065250494 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081396827 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071801901 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066143047 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055999405 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074575874 seconds)
  done (took 9.155032198 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094957312 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087302125 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070834386 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083787768 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090667403 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08661976 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.0746487 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076334769 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06923265 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081721638 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07361405 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076414929 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068240308 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076863348 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093929218 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076373701 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069472539 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076450085 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072056141 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101435022 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082794299 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081638643 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07430313 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068139199 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075614929 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079913838 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090028834 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080688618 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078377859 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075710708 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.07984039 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089843168 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073835911 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071796 seconds)
  done (took 4.43980557 seconds)
done (took 38.415665113 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.77959597 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.948971154 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770834803 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.119185532 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.853078047 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.948264669 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.941838479 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.767251915 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.115219722 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.81386224 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.003392429 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.819006462 seconds)
done (took 65.584982965 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.784929052 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.905059619 seconds)
    (2/2) benchmarking "String"...
    done (took 2.040086123 seconds)
  done (took 5.653402356 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.095890271 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.297072299 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.012954985 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.76390952 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.773165215 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.074113992 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.576958276 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.289325204 seconds)
  done (took 30.49581179 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.041914142 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.970158096 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.464787737 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.499624764 seconds)
  done (took 15.736634761 seconds)
done (took 63.561646546 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.782020196 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.800440929 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.775216982 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.751092838 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.825475263 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.771782059 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.317284164 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.796885889 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.76575708 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.757443901 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.76722723 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.205709084 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.779453436 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.271423994 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.765569145 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.779534712 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.839294241 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.387353728 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.922912101 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.779481396 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.784829345 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.784519999 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.767521044 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.777311277 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.772508807 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.767246556 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.216686387 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.771052817 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.392134714 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.76984033 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.797521034 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.847283331 seconds)
  done (took 203.9978734 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.767092468 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.831296667 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.888566016 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.777991423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.289815948 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.96584435 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.903501781 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.330129072 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.772935237 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.785099826 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.980057673 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.768668873 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.992879022 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.718602673 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.77555088 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.842344488 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.046201524 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.015241161 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.768580395 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.040677903 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.779820154 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.828914246 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.805311775 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.965299455 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.804627294 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.780313214 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.945645334 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.770324767 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.958381784 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.044831273 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.811882617 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.797726057 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.988100398 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.642239891 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.7682207 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.773142486 seconds)
  done (took 170.435927433 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.165683451 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.769538247 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.768292437 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770123177 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.781092327 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.768616991 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.7678034 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.891441213 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895417346 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.232362252 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.174629536 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.821048257 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.611944867 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.772168176 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.836040075 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.783339759 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.775080401 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.785931517 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.795453261 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769745558 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.770083048 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.895786993 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.783217517 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.190807643 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.779756449 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.770042532 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.775929129 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.139684588 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769866434 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776069429 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.029005927 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.770153873 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.768965896 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.668134532 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.420266315 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.859839246 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.769884046 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774880241 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.769635402 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.988123637 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.770024536 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.768676108 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.772703156 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947093675 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.768291356 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.893245483 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769191553 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.276888383 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.769013499 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.768967843 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.770212769 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.569782144 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.454389712 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.75964394 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.760158964 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.76215601 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.760024283 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760503472 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.766510436 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.475574758 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.830691956 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.754809962 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.757215013 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760459805 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.75324641 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.814402408 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757039206 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.740741825 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.813889473 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.973839793 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.877575314 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758365747 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82154174 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.846879878 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.755445531 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.753998443 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.7545668 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.7538365 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.835411919 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755021185 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.875790908 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761506757 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.755741737 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802373105 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.823601227 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.754199938 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.663584048 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.75902459 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.75507848 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.076856553 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82132718 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.75505258 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.753384012 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754250827 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.883027798 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879084854 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.542397972 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.758885069 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.7538754 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.562645559 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.759343095 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.896441597 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.755473855 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.950947621 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.756516042 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836680868 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760460279 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.756702054 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.756124524 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.785973664 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.756901498 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.813048744 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.758867737 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.754919132 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.124730737 seconds)
  done (took 400.890507664 seconds)
done (took 779.255624284 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.424845467 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.39188201 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.50020009 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.420749762 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.394152264 seconds)
  done (took 13.828374329 seconds)
done (took 15.525441721 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.840175307 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.846778824 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78183646 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.846024879 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776911328 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.842439963 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.826276075 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.778094952 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.809179534 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.780111831 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.810326331 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.777365915 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765500793 seconds)
  done (took 25.175524099 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.982875812 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.014849057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823886303 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.995091222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80023989 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982250441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917634303 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908936335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.908494306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.770266215 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.766776127 seconds)
  done (took 22.567191943 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989222904 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996709019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.828044043 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993650587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802963122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.993507812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919694533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908577322 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906721667 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768630611 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.76662093 seconds)
  done (took 22.569785128 seconds)
done (took 72.009058905 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.76087495 seconds)
  done (took 3.455768247 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.783628034 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.91945646 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.768231362 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.765964643 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.761166007 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.763277651 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.766022066 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.761918266 seconds)
  done (took 15.986168439 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.760222192 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.760928048 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.758413624 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.761246237 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.761147446 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.75952227 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.758813811 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.758494638 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.762617164 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.762369621 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.761444905 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.759513117 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.765711898 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.766344616 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.772204079 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.76327763 seconds)
  done (took 29.888566787 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.762274904 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.759120936 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.75913097 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.760646621 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.75842021 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.758423893 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.759141331 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.758329751 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.758993875 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.757344897 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.75825973 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.757284443 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.758914511 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.758093226 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.758862801 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.75883516 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.756669958 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.758367272 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.762001139 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.757622853 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.758243661 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.755657725 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.755840771 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.755739846 seconds)
  done (took 43.901094253 seconds)
done (took 94.926874996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.466251028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.212977461 seconds)
  done (took 8.371792984 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.760525606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.756972334 seconds)
  done (took 5.249024237 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757203575 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.758139199 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.757417486 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.758660497 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.757238188 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.756582676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.757149086 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.757056472 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.757293231 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.758602688 seconds)
  done (took 19.265675775 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.755985402 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.755364453 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.753272668 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.755720564 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.755842425 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.752977879 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.754963022 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.756314358 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.755394828 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.755477175 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.754408046 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.75102868 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.753522297 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.751456851 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.753852485 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.750676368 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.751698016 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.751539542 seconds)
  done (took 33.260820506 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.754397091 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.753720927 seconds)
  done (took 5.195774876 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.751284362 seconds)
    (2/7) benchmarking "second"...
    done (took 1.751411655 seconds)
    (3/7) benchmarking "month"...
    done (took 1.752277311 seconds)
    (4/7) benchmarking "year"...
    done (took 1.752306622 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.75266724 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.752291308 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.751039327 seconds)
  done (took 13.95178116 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.755583219 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.9144784 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.979374415 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.423012956 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.75570555 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.75823353 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.690533992 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.759124221 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.758482973 seconds)
  done (took 19.484221078 seconds)
done (took 106.471948527 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.559422308 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.751688383 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.128314761 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.876614274 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.765666958 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.045785238 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.755796565 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.965469563 seconds)
done (took 42.538079934 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.793037954 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.209388246 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.234358576 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.772960062 seconds)
  done (took 11.90460299 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.732135226 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.267390786 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.785419318 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.345687863 seconds)
  done (took 19.839336622 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.114066519 seconds)
    (2/2) benchmarking "read"...
    done (took 2.107723039 seconds)
  done (took 5.914234245 seconds)
done (took 46.140360564 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752022016 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.752154089 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.752163267 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.748681926 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.748875929 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.751404534 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.748683981 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.748595979 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.752259361 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.750900942 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.751334746 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.751069831 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751429059 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749028462 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74931433 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.748441941 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751480742 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.751038684 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.749633222 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749216938 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749360925 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750399196 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.748104981 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.748067171 seconds)
  done (took 43.692062502 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.751669391 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.749469382 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.751236738 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.751084202 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.748638696 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.75116834 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.751875557 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.748359405 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.751985492 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.751120679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749901298 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.749115517 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.752634656 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.74831656 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750603717 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.748761559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.75148762 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749490322 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751274082 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.748834034 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.751899556 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749168454 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.748989294 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753459975 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.74987009 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74889829 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.752128472 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.749784703 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751822232 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.749962909 seconds)
  done (took 54.200753607 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.755934833 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.757806942 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.752011707 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.752745339 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.751025166 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.753145968 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.75121598 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.750538094 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.751340767 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.751282154 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.751047957 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.751354114 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.751476925 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.751615796 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.753095972 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.752028438 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.752125736 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.750512587 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.751258958 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.751746127 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.751302743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.751393652 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.751359275 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.750847684 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.751836392 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.752338392 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.752533875 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.751576879 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.751373502 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.751542516 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.751605405 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.752263064 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.753202217 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.751092112 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.752437148 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.750757371 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.755121067 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.757682514 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.752055776 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.751357608 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.751596937 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.750759278 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.751415283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.752641158 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.751265459 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.751448604 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.752160553 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.752448188 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.751813261 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.751563643 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.751671928 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.751575557 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.750772829 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.752416126 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.75104324 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.751308675 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.751491543 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.751163506 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.751658312 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.751009978 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.751333198 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.751898929 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.751089815 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.750918377 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.751565372 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.75125205 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.752616327 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.751041925 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.75171298 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.75239946 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.751615268 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.752870361 seconds)
  done (took 127.828039912 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.751485091 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748823687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.74986607 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749035367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748049564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.753660542 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.748758395 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750827766 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749331887 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75154782 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752388021 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.749193736 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748702906 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752432469 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751807665 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.748259026 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.752443349 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74950798 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.753080922 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753006966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751709499 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.749971063 seconds)
  done (took 40.20220619 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751650455 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752527904 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.74925459 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752422358 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.749842612 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753100203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.752657035 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.7535603 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752708494 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750583799 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751294118 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752098619 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.750537253 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751249004 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751396585 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750855695 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755153929 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.751188569 seconds)
  done (took 33.221498772 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.75064625 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.751273032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.753256171 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.751994162 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.752311313 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.753179838 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751020588 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.75380406 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.753999135 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.751598913 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.75341909 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759199203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.761246924 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758978461 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760315866 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752752699 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.754013588 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750619525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753445919 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751249635 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752826294 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753426194 seconds)
  done (took 40.274272491 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754207321 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.7542885 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.752085343 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.75210907 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.752232671 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.754273499 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.754224245 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.753119003 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.755009604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.754196355 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752488723 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.755004516 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.751786706 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.753742794 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.753458317 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75265128 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.755139913 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.7531719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754910727 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.752297145 seconds)
  done (took 36.760718009 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756188316 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756294334 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756507766 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756806261 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757277799 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.756833225 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756662139 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.756995952 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757015203 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757908537 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.75846204 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757466979 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756566693 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.756819975 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75698227 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75721924 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757519606 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756979082 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.75697545 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757005862 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.758140098 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75735064 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758375968 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.757154952 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.757395429 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756733305 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.757545588 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758926046 seconds)
  done (took 50.894481848 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.757035667 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755853482 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.75386829 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.753743086 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.757326811 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.753503994 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.754516257 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.754815836 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757060314 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755383473 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.763068841 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.757285543 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75748332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.757711415 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.757806565 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.76068103 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758097864 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.756663527 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75429229 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754987233 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.757242644 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760688375 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.757879742 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755998006 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757875052 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.764457489 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762933408 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.767474659 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76038324 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.757358994 seconds)
  done (took 54.426161804 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.778182908 seconds)
    (2/2) benchmarking "in"...
    done (took 1.779067333 seconds)
  done (took 5.253554318 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.754294645 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757202712 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.756279024 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.754197768 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.757330084 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.758195332 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.758453679 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756159881 seconds)
  done (took 15.744953562 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.757976544 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.75954216 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.759073099 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.759994394 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.760470386 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.760130629 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766597087 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.759627609 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.760772348 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.759309409 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.764501284 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.766060184 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.765582154 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.760262484 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.759377387 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76170245 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.759331185 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.759939697 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.761143346 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.759229649 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759913959 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.761807199 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761700948 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.757224296 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.762591001 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.771932136 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.765510757 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.760181401 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.760473863 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.768157016 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.760750862 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.757350597 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.760358624 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.760580457 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.758902265 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.762634304 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.771333365 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.760782359 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.768247005 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761119555 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759919116 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.759554062 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.761769923 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.764712369 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.763854637 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.760951234 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.763651671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.758854571 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.761314875 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.763175818 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.764712373 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.760636014 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.75983159 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.767401553 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.763886449 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769559644 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.762505617 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.763716137 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.771894475 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.772510757 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.775962546 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.76815282 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7643498 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.765944501 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.77023489 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.782867881 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770142607 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.759477997 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.759053897 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.761464238 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.770645421 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774849146 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.770206257 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.762659079 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76401887 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.761968622 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763248261 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.762604578 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.770639744 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.765883401 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.763017184 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76247439 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77178668 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779895085 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.762530174 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.764196311 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.762933373 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.764143594 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.763076688 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773647291 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.763923215 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.762370798 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.763489877 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.764038201 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.766019023 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.763939206 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.762136943 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.764750056 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.760657562 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.763305447 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.76412216 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766506945 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.770692066 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764829696 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.764959454 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.773076741 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.763624591 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763773342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.774307774 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.764380197 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765362729 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.76523515 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.771344981 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.76106638 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766570748 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.771338774 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.764907836 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.766170082 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.766153056 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.76511924 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772728934 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.787161102 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.764259322 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.764702546 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.768982213 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.77353314 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765212863 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.769128979 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.764348047 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.762366901 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.761835183 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.767494739 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.765722922 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.766617855 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765681306 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.768462815 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.762688124 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.765077958 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.766844972 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.767673782 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.768268654 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.767341514 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.768122224 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.769519475 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.767215817 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.767278621 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.774770548 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.767591743 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.768123214 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.768287866 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.764155203 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766079837 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.769767644 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.767458563 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.767901551 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767314184 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.766796185 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.767419039 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767245096 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.766815871 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766917051 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.768062721 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.770660966 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.768870097 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.772419042 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.767169797 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.765238297 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.766537151 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.768443411 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.768069906 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.767169838 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.767562434 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.769601336 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.773832324 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.767403733 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.768271244 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.772148385 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768100602 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76806297 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767578005 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.770816248 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.773939663 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.767946385 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.775764875 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.769029997 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768254081 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.769965733 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.770938259 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.772235309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770131996 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.771470051 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.776634636 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783140963 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778791844 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.769121508 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.771972552 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.769821459 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.772638332 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.775315411 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.769472142 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.768190385 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.76945422 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76891612 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76890776 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.772074131 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.770570349 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.770663955 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.768866228 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.769228125 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.769927793 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768530754 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.771093921 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.771919573 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.767304786 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.769953257 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.770047404 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.76920913 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.767199566 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.768977319 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.770494775 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.771422916 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.771769516 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.779991392 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.767614537 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77148108 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.773522671 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.771309385 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.770572054 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.770812533 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774216148 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.771692285 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779415399 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.772048062 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.77263981 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.778381502 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.770909421 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.770520429 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.774505466 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.769732655 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.768182274 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.773627948 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.776996027 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.770428077 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.772304989 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.772798708 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.771390035 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.771194298 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.779672471 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.769448236 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.771138172 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.77407004 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.774797585 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.76959783 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.772833151 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.773346579 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.77231822 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775802313 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.771622156 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.772283014 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775027318 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.772961354 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.774798408 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.773422878 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.775014483 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.779166896 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.779537018 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.773862209 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.777802329 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.773459444 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.774542043 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.774385874 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.773220055 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.775306804 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786130238 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.77958448 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780677768 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.776170605 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.772744798 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78361085 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.774745012 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.777637131 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.773845245 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77408343 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.775050375 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.776865306 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.771472076 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776618117 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.773356788 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.77599742 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.776901782 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.776650398 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.773941568 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.773689245 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.774030209 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.773994683 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.776108475 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.774362071 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.773429325 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.778186734 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.776265158 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.774457837 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.776218508 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782019425 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774670413 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.776815954 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.773576359 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.775823316 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.774850888 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.776149974 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.775864498 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.777309358 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.780379608 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.780123194 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.782897259 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.775620849 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78448283 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.775167866 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.777328759 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.782552476 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.771608417 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.773902121 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.776589783 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.77491375 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786553718 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.775316594 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.775115112 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.778720882 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774982246 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.776166295 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.776166478 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.777703807 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.77573626 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.775758394 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785181068 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.778357431 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.779973412 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.777836892 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.773297609 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.775838655 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.775391936 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.778225559 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78221649 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.776707378 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.777947251 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.776688159 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.778208431 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.778492927 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.777066038 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.776080819 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.773139571 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.776389467 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786015751 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.776872335 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779869229 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.776314199 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.788396247 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777518767 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788389393 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.777030554 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.777178454 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.778144335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.777024368 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.780471867 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.780555486 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.77880344 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.777145819 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.778608259 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.779675766 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.77965712 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.781107177 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.777866491 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.778361887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.777622402 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786116341 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797574204 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.778285839 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780620781 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.77473256 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.778771416 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.78463609 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.779664083 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.777517524 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.780056317 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785746996 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784105881 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.780628822 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.77976888 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779850155 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779001073 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.778875317 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.778781484 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.780081855 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.777456005 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.781559547 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.779139403 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784804158 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.779733366 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.780875309 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780384605 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.779113535 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.790040368 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.779619772 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.784328667 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779858729 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.778757311 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.779700387 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.779948627 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.782275441 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781564729 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.779456676 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.780824527 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.7846759 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.785019445 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.785549188 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.778536239 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.780494513 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.781131374 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.78125261 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781968862 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.781959446 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.780560102 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.781718196 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.780098212 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.782224441 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.781478251 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.779431388 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.780717337 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780418731 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.782895216 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.786206706 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78391594 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.777908837 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.779570122 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.781204124 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.780607308 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.782526993 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.795519052 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783284043 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.788118837 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.78758896 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.784303776 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.784392626 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783458382 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.788448569 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.780166149 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.782472172 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.782342075 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.785927595 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.782270712 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.785716709 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782376817 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.790549432 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.78589478 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.782919498 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79117626 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.783540946 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782262569 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.782599049 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.787985523 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.783292164 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.779144352 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.782086518 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.782296458 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.790325137 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.789299725 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782811892 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784260135 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.781374219 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.78306762 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787836473 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782663865 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.783154195 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.780716651 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.78298917 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782895134 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785002692 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.779677774 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.783529599 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.783153635 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.785061674 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.791681417 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.780670181 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7854627 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.784115457 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.785351589 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783835356 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783804877 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.780874282 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.780115811 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.78436858 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784219881 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.784410117 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.788788603 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.784160853 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.785018136 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.783985438 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784854085 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789474349 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.792478808 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.789489423 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.781459573 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.784542624 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.785937595 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.788859921 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78520281 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.78510885 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785596288 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.788240688 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.786647406 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786164972 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.784669465 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.787155775 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799960102 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.784690067 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787429145 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.786520335 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791492226 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.784304558 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.782614438 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.785266625 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.789594981 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.787912136 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.791812275 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.786231816 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792948415 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787931032 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.785890414 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.788122714 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.78790214 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.792494592 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.789066351 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78902577 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.788735715 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.791051847 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.801064688 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78602563 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796591885 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811284938 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.786914182 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.786321591 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.786845445 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785049105 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.787275041 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.789327188 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.787126536 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.786108094 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786388605 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.787274114 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.789832664 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792083982 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.788431739 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.786579095 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.786339631 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.788186534 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.79053898 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.784314794 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.788002031 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.786472763 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.78749723 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.790758604 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.788442457 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.788116771 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801694985 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.797296303 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.789707506 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.78860897 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.785038918 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.793001103 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.790943396 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795798234 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.795973551 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.789022066 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.78888754 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.790578616 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790035631 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.785433221 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.789081404 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.7898483 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787729691 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.786420125 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.803274913 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.796890235 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.795169719 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.790563072 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789471233 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.788856747 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.790819915 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791889501 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789876556 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.792370929 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.789316159 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791782785 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.789447262 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.788017839 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.791312405 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.794544877 seconds)
  done (took 1060.345397956 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.786992496 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787940139 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.785506494 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786189261 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786859909 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786485739 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786696802 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787838343 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.786737571 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787415628 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.786384144 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786712365 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78762645 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787472373 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787707568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786345316 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78744491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787201367 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.789137677 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787305951 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787382365 seconds)
  done (took 39.253182449 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.789592412 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.789740184 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788514739 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790182254 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787623277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.791142637 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.788028139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792217347 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789536257 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788404357 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.789950752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791088972 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.788235647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.788132127 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78837241 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790262055 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.790443437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78790163 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.791457705 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787443107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790291264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.788254551 seconds)
  done (took 41.092210207 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.791962243 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.794404361 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.79074586 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.788838742 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.791720117 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.78848048 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.793337449 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.791604675 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.792980029 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.793501431 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.791314176 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.791783401 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.79889174 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.794557475 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.79520747 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.791390516 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.935878518 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.794721066 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.792913729 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.7928492 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.790554283 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.799148082 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.790471676 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.792192429 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.79301204 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.793960054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.793414722 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.793003703 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.793756365 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.795066613 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.797884649 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.793654564 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.794126362 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.797239773 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.794208848 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.795137514 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.796083383 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.794548982 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.790810367 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.793077701 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.803486602 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.809934387 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.794549469 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.802129819 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.793529665 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.794294136 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.796597988 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.800663233 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.792555525 seconds)
  done (took 89.792930563 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.795344101 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.795855207 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.790715648 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793845574 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.793892406 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.793538887 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.794838485 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793962976 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.791383591 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.791672109 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.794408357 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.790277468 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791176097 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.794106763 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.793313786 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.791050541 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.790865148 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.789718549 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.79364534 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.791763172 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.791057895 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.793191221 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.794185907 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.792748083 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.792488308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.791289297 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.790828719 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.793532418 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.791327293 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.79178576 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.793707602 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.793269084 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.795555775 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.791542452 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.793389784 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.794017262 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.794960998 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.791779199 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.794347858 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.792325928 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.794870318 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.795123614 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.795570429 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.796070565 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.792962173 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.79385586 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.794332459 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.794143676 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.794281056 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.795718576 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.796439873 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.795290438 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.796474357 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.793715936 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.796020356 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.795916703 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.793939681 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.794692452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.796950092 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.794534037 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.794866691 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.797111135 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.796040474 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.796780896 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.796667844 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.795204651 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.794534956 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.796676977 seconds)
  done (took 123.714166779 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7979857 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.798131622 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798530513 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798757418 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797614577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.798435022 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79803929 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.799154647 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.797509627 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.798930811 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799303585 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.798294457 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.798809432 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.797975164 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.798578851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799672147 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.798919996 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799379472 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798904444 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799391035 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.798655183 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.800200362 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799917011 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.798434412 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800010913 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.799536241 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799766214 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.799968358 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799474702 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.799167308 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80057371 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.799483933 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.801323386 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.79960172 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.799878283 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.799357687 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.801165642 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799905608 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.801558102 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799884391 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.799637902 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800016329 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800505749 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.800223096 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800874415 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.800501169 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.800894676 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.80095557 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.800256159 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801658479 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.800452602 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801063137 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80097155 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.800502358 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.802491604 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.799911501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800924716 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.80156974 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801744349 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.801430806 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.802367613 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.80183782 seconds)
  done (took 113.326119522 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801335739 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800356571 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.798251649 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.796874241 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.80115743 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.797952305 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.801305347 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.800656199 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.801042552 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.801186394 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801362685 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799408864 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79820523 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801945955 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800671658 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798579969 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799136856 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798437771 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800911197 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.801275499 seconds)
  done (took 37.735541598 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.799236528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.801587423 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.800129627 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798893579 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.804939285 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.798831422 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.80284737 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80225356 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80070261 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804166228 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.80262046 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.802226252 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799452013 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79926333 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.802924805 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801259185 seconds)
  done (took 30.557523666 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.800559247 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.80250381 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.802655126 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.805889341 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.79951529 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.800329151 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.802762285 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.800078884 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.799773267 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.804141509 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.8030012 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.802401368 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.803246848 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.804151368 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.801219978 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.803097388 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.800560087 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.800699466 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.803327419 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.804069951 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.801597189 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.800290479 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.803675127 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.802991509 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.800675262 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.801539173 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.801089231 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.800230405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.800356774 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.803448494 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.801308536 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.802320962 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.800684855 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.802240327 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.805146234 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.801723362 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.804169912 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.80384447 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.805975165 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.80408939 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.805325669 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.80193374 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.804976521 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.804583164 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.802058888 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.805830902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.802711115 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.802523817 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.803124465 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.80268221 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.804924701 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.807057197 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.804486487 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.806131311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.804300318 seconds)
  done (took 100.892305302 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804103416 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805439006 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803164396 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.805387437 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80546304 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.80247824 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806938259 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.801870025 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802649157 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805801091 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803289745 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.805260737 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803361157 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.805996816 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804719386 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806089683 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803294441 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.803161603 seconds)
  done (took 34.217966154 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.803370871 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.805368532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.807030552 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.802979872 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.803647276 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807058836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804015474 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.805958301 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807252723 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.804202669 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804032835 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.806163421 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807634442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.807477252 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805131235 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80556417 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.807218641 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806399096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804576218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803853857 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806863523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806772222 seconds)
  done (took 41.462659998 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.807297411 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.806818622 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.823339877 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.84660328 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.833787795 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.807434063 seconds)
  done (took 12.665943861 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813435956 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815988894 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812661431 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808997951 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809558944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805097375 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805654807 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805385556 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808252776 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805694717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804636838 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806740842 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807193594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805183945 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808217011 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809426545 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805936483 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80661191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805681031 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808605073 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8070324 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813013688 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814205282 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815004418 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809333585 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807772418 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809719298 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807081057 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806190799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808299026 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809586376 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806701667 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807457379 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807328251 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808245021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808004862 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805551961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808362869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809823599 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807703489 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80953041 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810168967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809653356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808539137 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810507162 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807388887 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80703407 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806743171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808198004 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810032653 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811080567 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808390907 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810890354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810670093 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810646267 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811279371 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808518186 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808245737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810664827 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808922562 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807782862 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810735644 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807709228 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807789256 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810371727 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808980157 seconds)
  done (took 121.120848403 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80767149 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.809086476 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807981743 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809554695 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808112804 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808033624 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80828796 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808719841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808113183 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807825951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811621106 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808214475 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808808728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808284482 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808722663 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808820931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808845057 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81073133 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809058991 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811697203 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810449699 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809500215 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809738498 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809989677 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810401531 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812343802 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809869965 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80953143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810234084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810971664 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810607123 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810686967 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81038793 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.810690948 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81053499 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810799027 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810687013 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810449374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811615711 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813831799 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810712316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813646124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810905728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809868395 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812118202 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811177759 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810739955 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810688224 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811083627 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811897769 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812183705 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811559256 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810965668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811158397 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811196756 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811161579 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811305245 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810961562 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812173573 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814084071 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810187497 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811440857 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814798798 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81078124 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811913254 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81146687 seconds)
  done (took 121.238307048 seconds)
done (took 2471.600755437 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.840282087 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.990941681 seconds)
  done (took 15.578852243 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.983457078 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.935869708 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.819952937 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.851564756 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.819151172 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.841456077 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.825941276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.821053007 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.821010253 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.821317333 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.821223945 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.007757889 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.822741235 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.820482625 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821328552 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.914001494 seconds)
  done (took 51.505966282 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.824500889 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.825513195 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.836168032 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.829852679 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.824484603 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.843949962 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.857262 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.828497282 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.886301052 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.848284119 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.946464693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.830580998 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.819987994 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.876355406 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.833171539 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.834093696 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.919676129 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.895064818 seconds)
  done (took 35.116142759 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.898974011 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.824419411 seconds)
  done (took 10.481826942 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.836040834 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.823292415 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.813497493 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.819785418 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.840199908 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.862834204 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.843994663 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.818843116 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.817093338 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.842972855 seconds)
  done (took 70.07150195 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.82430055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.820795362 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.819810924 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.819243529 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.811807236 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.81666825 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.819130161 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.817098629 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.511307659 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.856015231 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.826870345 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.825103368 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.819341693 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.821518076 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.817337967 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.842663375 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.981862289 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.817995811 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.817629651 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.826327713 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.821162835 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.887316302 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.835351247 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.820732328 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.851701691 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.507800241 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.828952266 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.827151907 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.943256804 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.818549579 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.819824807 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.822177747 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.822757998 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.19848467 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.140229177 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.82129176 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.833014367 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.829797371 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.818959171 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.931740657 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.821298518 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.827837793 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.800934338 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.126571498 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.919403677 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.864410255 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.181333415 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.826320448 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.823182271 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.851688264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.826524906 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.822671154 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.836650665 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.340075797 seconds)
  done (took 130.118488772 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.843310535 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.302310618 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972510573 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.817370434 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109641002 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055200665 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.8202489 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868899838 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.868024729 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.069621657 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99680102 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938568765 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.819247685 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.818890692 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.815271103 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.816423081 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965838962 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.890727509 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.821325296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.821513247 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853344798 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086422419 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.947972619 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.957088179 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.842741687 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.043767089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.94602477 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.937571794 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.825083487 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.817065172 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886233875 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.824639264 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.82015462 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.821146091 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983721188 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92524898 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919382258 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.82350459 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860271496 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.817878018 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.848164193 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040234086 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.937252873 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.961639677 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.068643852 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.048085325 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.824920048 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.818224701 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.82667432 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012632045 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034469844 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.076183912 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.952492145 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.821767913 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.159992729 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.819536481 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870182594 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071260889 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055474612 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931929724 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852511526 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821626727 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.818579641 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.13743785 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825238752 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.929423115 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.182145717 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822417395 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.92933623 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938221632 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.058825776 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062395258 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853213926 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.846318187 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.887923611 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.106592152 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.897849606 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07594547 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.840934311 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822363516 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914554375 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.82571624 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.9941529 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140821381 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.092324142 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864213622 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.825252842 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.82071356 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.072315012 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.076348284 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.099625321 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.065472629 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.988619269 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.866322639 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.821696437 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.81986816 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.848526033 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953953832 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.825354149 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.182321551 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069538175 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.602053327 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.853335626 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139927048 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965254416 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.825878093 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.820845785 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.82267768 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027456425 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.865818424 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.828638796 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822685075 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.07315972 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.767788804 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.936752272 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.519605315 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.891287705 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825711732 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093513252 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83352055 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072338201 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84544051 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.139130861 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.322124688 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.867118767 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.019256156 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.068804967 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.82581593 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088629411 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140947665 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.951717055 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078726897 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.570816038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.825994161 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118660738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835630594 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.862952406 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993996382 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.834508727 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.00086349 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.828417516 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.134873593 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851485625 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994839399 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.095797447 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.109463866 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.87201115 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878020322 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.855112517 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.958911813 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.82626952 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.820352359 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007437397 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.929615689 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.826564425 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.394769966 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.826271041 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975616481 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.1314989 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853852208 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898576218 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.829250328 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.833639381 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920339089 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856498796 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.464396938 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.828325461 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.997570391 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.787015345 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.2797613 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.825385329 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.138421324 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.039066924 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.827955659 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.829315043 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.62735343 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.824587924 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.98073233 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.986733428 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.521886508 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832999717 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04484585 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83273784 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960423039 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.828342856 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.82686667 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.177937906 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861424774 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.826407003 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.843380066 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.827108039 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.826016183 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060141329 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.85978742 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.549811896 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.96602969 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078761744 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.14277868 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.097337291 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880020773 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828876853 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13473887 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853045179 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.896527073 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.83132115 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.852089274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073825811 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835246296 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056099362 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124090952 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.933991188 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877766848 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.832721257 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88891432 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.827460574 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97129584 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927351789 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.83135674 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.829137412 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947186664 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957226685 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023795377 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.830554654 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.833763239 seconds)
  done (took 944.964787081 seconds)
done (took 1259.585097311 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.82863701 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.82750647 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.818897993 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.831224749 seconds)
  done (took 29.072520797 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.836418522 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.833361655 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.83599185 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.833288867 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.836111036 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.834191477 seconds)
  done (took 12.776329433 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.893771775 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.828823847 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.83174448 seconds)
  done (took 21.321835512 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.903856009 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.246518233 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.943518392 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.282183036 seconds)
  done (took 10.144173867 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.836745999 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.838006664 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.836982678 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.83865538 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.837636743 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.839140231 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.837059805 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.83761562 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.83928834 seconds)
  done (took 18.308959827 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.081567458 seconds)
done (took 97.471570392 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.95314549 seconds)
    (2/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.138285752 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.518827938 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.902643933 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.933838809 seconds)
    (6/309) benchmarking ("sort", BigInt, false)...
    done (took 6.829225522 seconds)
    (7/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.014463107 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.968793581 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.967271298 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.223044108 seconds)
    (11/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.818537947 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.708483058 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.87530639 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.343955706 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.860324341 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.473500159 seconds)
    (17/309) benchmarking ("sort", Float32, false)...
    done (took 5.594700738 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.034662258 seconds)
    (19/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.021047692 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.857750943 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.499657173 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.392222257 seconds)
    (23/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.932724061 seconds)
    (24/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.952993116 seconds)
    (25/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.41341292 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.832291783 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.112129528 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.895961765 seconds)
    (29/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.988222415 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185286562 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.999088917 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.026114411 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.073842784 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.101656321 seconds)
    (35/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.341845737 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.088142113 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.940530139 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.88877468 seconds)
    (39/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.202688571 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.915466652 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.84745104 seconds)
    (42/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.718605873 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.916764091 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.203532745 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.821891609 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.930897677 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.928835954 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.820349029 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.149270702 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.113495003 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.823762886 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.901976608 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.166263723 seconds)
    (54/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.840222 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.948151045 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.21645377 seconds)
    (57/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.966457139 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.101094934 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.916100583 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.819728848 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.854221774 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942832131 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.355473234 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.932311879 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.909299275 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.160649452 seconds)
    (67/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.354462811 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.099707541 seconds)
    (69/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.917153789 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.964819058 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.89223179 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.942714258 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.837037177 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.458544564 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.127979605 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.676073601 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.828422126 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.019187231 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.922563078 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.007874353 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.828684278 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.655428133 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.829403884 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.943442011 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.839127466 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.111196394 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.239394729 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.425708823 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.311661624 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.925633061 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.988384156 seconds)
    (92/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.117125904 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.824751715 seconds)
    (94/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.024490197 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.845734257 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.597879741 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.160663337 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.260696543 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.936619776 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.842403152 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.915051699 seconds)
    (102/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.980188899 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.171216707 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.841451618 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.847914014 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.90552438 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.630916307 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.829224405 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.963880457 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.824991266 seconds)
    (111/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.830802696 seconds)
    (112/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.975410546 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.934935574 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.756114279 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.04621246 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.354771421 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.530486963 seconds)
    (118/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.981698865 seconds)
    (119/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.826825309 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.396380975 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.841925926 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.141265439 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.06310645 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.86517706 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.215834315 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.446629105 seconds)
    (127/309) benchmarking ("sort", Int8, false)...
    done (took 4.979355234 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128039141 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.868542999 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.871203061 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.930627836 seconds)
    (132/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.872981759 seconds)
    (133/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.435855269 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.84260467 seconds)
    (135/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.842992935 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 4.822264356 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.89224609 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.044171357 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.847543966 seconds)
    (140/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.98752549 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.815330426 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.559085038 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.184573405 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 2.289225258 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.866746251 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.079647789 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.103205332 seconds)
    (148/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.964769854 seconds)
    (149/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.997206905 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.060741786 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.160424698 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.135302303 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.130808629 seconds)
    (154/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.804702408 seconds)
    (155/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.188681423 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.85142053 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.771073516 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.064303393 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.964349944 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.842488931 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.985016627 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.356950614 seconds)
    (163/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.915874592 seconds)
    (164/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.97728174 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.35526203 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.843223652 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.936231212 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.062314077 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.411483086 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.960362784 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.024345477 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.87724091 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.140240178 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.993293022 seconds)
    (175/309) benchmarking ("sort", Float64, false)...
    done (took 5.680270356 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.843479467 seconds)
    (177/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.86286136 seconds)
    (178/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.86466095 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.030572998 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.922182161 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.226081998 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.981057512 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.31853734 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.985726946 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.996631921 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.221018423 seconds)
    (187/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.875431738 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.231460406 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.894519334 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.946962474 seconds)
    (191/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.930385513 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.699512892 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.140787868 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.09237149 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.059434519 seconds)
    (196/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.383188634 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.843448063 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.874188406 seconds)
    (199/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.989960684 seconds)
    (200/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.955848235 seconds)
    (201/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.148351599 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.117201971 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.506378885 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.885785333 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.504094711 seconds)
    (206/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.186321911 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.144237944 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.090790722 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.507682512 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.915532831 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.853670669 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.15146505 seconds)
    (213/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.173023572 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.25070062 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.062575555 seconds)
    (216/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.873309663 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.830685509 seconds)
    (218/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.288736545 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.954319035 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.829914454 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.53217975 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.552474478 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.063513626 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.843656555 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.26487476 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.44468828 seconds)
    (227/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.059476493 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.245296853 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.779720837 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.917400883 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.848217989 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.405411788 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.90900865 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.870879192 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.964317925 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.847225628 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.846460109 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.870338952 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.032388584 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.890927302 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.12002666 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.891016318 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.035126928 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.276698806 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.784111313 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.156231817 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.855545668 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.885080443 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.932310526 seconds)
    (250/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.943442693 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.033983254 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.660932416 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.962254113 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.855933023 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.909861745 seconds)
    (256/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.1435088 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.2552655 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.951158149 seconds)
    (259/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.371636871 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.94225238 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.873609465 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.872714495 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.759241346 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.24995521 seconds)
    (265/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.849272234 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.858138037 seconds)
    (267/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.143426062 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.964082803 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.735573704 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.958790274 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.222741865 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.226437894 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192729541 seconds)
    (274/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.474873132 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.047474381 seconds)
    (276/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.048336808 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.899449802 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.234191044 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.877801858 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.864210159 seconds)
    (281/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.067084058 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.416906904 seconds)
    (283/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.249432961 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.941913326 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.848501128 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.935029929 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.958280178 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.225847667 seconds)
    (289/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.109144241 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.057612934 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.007469138 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.873057913 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.870169534 seconds)
    (294/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.874933882 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.020851109 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.83652597 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.392939114 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.891206194 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.874434193 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.849836229 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.461830696 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.851097388 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.108888805 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.839983543 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.549833058 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.885550314 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.280246013 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.851483557 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.163165394 seconds)
  done (took 1018.765921633 seconds)
done (took 1020.550108246 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.884864599 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.877912413 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.861389961 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.883143341 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.975254003 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.895156463 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.872229999 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.863747739 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.909737996 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.911160435 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.860656395 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.895792958 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.864254102 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.861803212 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.861016657 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875937375 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.173324002 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.892687574 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.878795901 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.871577459 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.880605781 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.861598125 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.912472635 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.898820664 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.867131086 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.866190454 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.867074446 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.883170238 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.976082693 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.867125518 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.866656985 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.87475157 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.175074249 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.891641781 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.858456195 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.885065167 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.874684878 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.874029753 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.868882204 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.895597791 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.317778637 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.872503685 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.866414354 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.865287898 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.864625373 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.867944838 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.86682653 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.871599491 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877373467 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878418234 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.315792545 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.887839586 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.867791373 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.864852435 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.874549428 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.865164399 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.867728838 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.880856362 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.885624917 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881448907 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.168081106 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.896462544 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.86751846 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.881927959 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.872785597 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.351578837 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.867415746 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.868822042 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.319465529 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.87705366 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.353418515 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.881702584 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.866824876 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.880385792 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.898290992 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.174867961 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.888212897 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.865475297 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.873066141 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.864509121 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.876111191 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879671971 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.871212553 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.867160426 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880768875 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.901353616 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.876937042 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.868666137 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.876999444 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.886576631 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.875463301 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.877947605 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.869436714 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.862589125 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.876396192 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.870299992 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.870398844 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.869967518 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.871602993 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.87808132 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.316921802 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89187596 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.865055431 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.864882485 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.866572643 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.88177936 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.315782538 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.874701074 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.889900172 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.914734652 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.86955545 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.169037471 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.900471024 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883502279 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.878064116 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.872235277 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.863632581 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.168673045 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.348285829 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.89086682 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.86952657 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.867153041 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884811578 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.869943281 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.865221335 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.178990228 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.899295228 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88299876 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.990002966 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.879267485 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.90231823 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.867784148 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.871994417 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.899071537 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885521642 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.900410222 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.871700866 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885518921 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.886188154 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.865943012 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.880826641 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.879791487 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.871094301 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.875234826 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.864297663 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.900576179 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882752465 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.883201949 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.891496591 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.991489886 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.868551649 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.17197738 seconds)
done (took 293.590094036 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948436915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.858944806 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.970028051 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.86544826 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.961376644 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.952207392 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.862557874 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.863316155 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.863096373 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.24639273 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.862783331 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.863376266 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.860545559 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.86248552 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.962751993 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.865787242 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.862213026 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.207754594 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.868715398 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.949178915 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.863338875 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.863843011 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.867448109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.248027281 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.867470659 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.860612641 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.938384248 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.866519446 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.213878461 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.866586266 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.867540993 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.212751517 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.959781737 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.885116612 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.876701741 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.873700186 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.951834945 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.871875639 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.949937454 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.959910819 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.966378707 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.907512361 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.868938889 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.862413391 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.871262318 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.869756786 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.86502905 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.896397177 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.866257917 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.866077508 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211378218 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.87801229 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.875812822 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.865776231 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.865719673 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.891673873 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.865555668 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.871146957 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.975104859 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.869886633 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.933118464 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.250717907 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.248076005 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.868184377 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.869788621 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.865714175 seconds)
  done (took 184.266750946 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.937124754 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.94768719 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.937110579 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.872815397 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.919639102 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.940970755 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.873349671 seconds)
  done (took 15.227872928 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.875444744 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.869917124 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.919627518 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.919333165 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.870367065 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.019675209 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869945731 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.881308026 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.867002155 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.921969624 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.870881394 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.869519405 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.876698433 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.862531693 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918494455 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.881702756 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.985205245 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.870686305 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.87152378 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.026902862 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867321481 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.877028954 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.924360601 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.882110974 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.8703954 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.876183813 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.456573675 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870210351 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.867411632 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.869116772 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.868227424 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.909806526 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.870942231 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.864191018 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.868192873 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.987994533 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.871974751 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.86831722 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.871670444 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.871127433 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.871348139 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.87092121 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.870342906 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.868016464 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.870883476 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.89563841 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.871340146 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.871121718 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.871269453 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.871026799 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.922638269 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.872431813 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.868649279 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.868919298 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.928457511 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878015641 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.87299031 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.868408393 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.871801502 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.869424387 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.029011471 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.92070695 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.871970837 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.920641761 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.872603327 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.871713885 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.871925966 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.871954255 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927062445 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.872824784 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.921090815 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.869695852 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.031063453 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.896997259 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.873990214 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.875229473 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.87494116 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872658733 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.870940945 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.879595739 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.872089542 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.875328378 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.879948155 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871384315 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870349571 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.981812479 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.98411491 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.87073155 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.886739148 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.880680867 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.870685388 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.927850292 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.873368059 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.871108974 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.927430331 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.990291252 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.930785419 seconds)
  done (took 205.980195422 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.879115139 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.882847748 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.875288183 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.892429021 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.875907065 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.874239102 seconds)
  done (took 13.084196739 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.876996111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.874552159 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.874682384 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.873979783 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.875726655 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.875722719 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.875669463 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.878687108 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.879663873 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.875356684 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.876245927 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.876023615 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.877060802 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.875464295 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.876158094 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.875115454 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.876189142 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.871428002 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.875591105 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.875382087 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.029093106 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.315891928 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.875995139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.877362658 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.880698359 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.875555531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.883093336 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.874860346 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.875528985 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.884512029 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.880375714 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.876586366 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.877145394 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.88434531 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.881456505 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.878164026 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881719253 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.877546332 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.875094398 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.877252003 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.878565129 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.876959326 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.876887322 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.877805959 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.879125047 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.882322611 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.882063864 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.888090887 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.878679539 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.879678051 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.878491899 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.876569093 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.878220224 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.878142684 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.881357843 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.882947144 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.882883979 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.879027913 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.877403559 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.879948454 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.878961404 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.878195941 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.879412585 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.883139387 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.875170222 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.880549923 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.878202776 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.881589079 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878472931 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.878049527 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.880705679 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.875005016 seconds)
  done (took 138.627715879 seconds)
done (took 559.000430928 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.147710611 seconds)
  done (took 8.955644138 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.939915574 seconds)
  done (took 8.83763076 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.369963718 seconds)
  done (took 10.173357533 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.884574102 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.887784809 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.877399738 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.868177022 seconds)
  done (took 29.334951433 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.165124636 seconds)
  done (took 8.969425815 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.88092568 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.86713516 seconds)
  done (took 15.6189822 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.941005349 seconds)
  done (took 8.74485453 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.019006133 seconds)
  done (took 8.826764796 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.878103414 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.871274084 seconds)
  done (took 15.56664093 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.85449035 seconds)
  done (took 8.65921317 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.530547973 seconds)
  done (took 11.342778586 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.884146221 seconds)
  done (took 8.702894638 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.932636847 seconds)
  done (took 8.741649963 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.114547614 seconds)
  done (took 9.918966134 seconds)
done (took 164.201086049 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.871377646 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.868381449 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.866841059 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.86995925 seconds)
  done (took 29.285242355 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.90802507 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.907023781 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.908398991 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.917587121 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.910038022 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.91007385 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.900024289 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.899516403 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.918344519 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.911210565 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.914045342 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.910038522 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.908187746 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.900569493 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.911307635 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.913214154 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.919734314 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.910410967 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.900754971 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.912239676 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.878799212 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.919169209 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.912061611 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.877011403 seconds)
  done (took 47.584933681 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.074514011 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.949938806 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.030367185 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.929017711 seconds)
  done (took 9.789471935 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.927025327 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.928759294 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.941764213 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.979229218 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.005435807 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.93742124 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.90313776 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.897080467 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.88382505 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.92944477 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.004710452 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.945529297 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.012338997 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.876065023 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.056519318 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.876236016 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.876089749 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.927611111 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.979907443 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.998236863 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.87666428 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.928480949 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.932572064 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.946063997 seconds)
  done (took 48.376736382 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.87573016 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.883743599 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.881617171 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.877791644 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.876084471 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.878064476 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.88257165 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.876822943 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.8982915 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.878634093 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.875640489 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.875823546 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.87487945 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.876553952 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.875938971 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.888744218 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.889710319 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.876891961 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.880730958 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.882318936 seconds)
  done (took 39.414977031 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.870205027 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.725766617 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.223679842 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.127396031 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.872182874 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.87165881 seconds)
  done (took 31.498548989 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.892027852 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.942595717 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.8875121 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.93540602 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.019251673 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.889947023 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.880028015 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.947619856 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.991458618 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.956083644 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.900755906 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.90696373 seconds)
  done (took 24.958736961 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.879396531 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.875009033 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.874874661 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.890374153 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.889806877 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.886334727 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.885692256 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.875090002 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.891777814 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.900338806 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.886343842 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.891301414 seconds)
  done (took 44.440861466 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960807775 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.920894761 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.890383112 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560927359 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254418862 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083595262 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.526546651 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202361776 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.875537384 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144775584 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903599669 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979913624 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130070883 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419019073 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912806957 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.350688612 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16885831 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079713029 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901415939 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548321013 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936965049 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.100981966 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.677960415 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932107395 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085988664 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.003582517 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.13477679 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875630692 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008778128 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910127918 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888830767 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873231209 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151455509 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2475931 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978142482 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884274654 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.493052761 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.587658697 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.866992671 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.60498006 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.578095919 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.999062872 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885903304 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874341676 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.810770917 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073315919 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255438463 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.879838846 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.586780272 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875344395 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887092291 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970975561 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.880172472 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.692548641 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795439723 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.878735372 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.873255085 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886389152 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449466964 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970270812 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117605982 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.858891096 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.970851227 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547299188 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25614467 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.022097203 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.880374482 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883386619 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811763701 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.629024426 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935088371 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207415383 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.898029282 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526101468 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172656991 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.941413956 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821899494 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140344075 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465989282 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.857925155 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106744871 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878056467 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814353896 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.821426241 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812874577 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132624219 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915083814 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.646586932 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917405908 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20831579 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888757472 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895071996 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901970669 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102770183 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.76239962 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878457921 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.649087433 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045302355 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901095893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20665423 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813238968 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.882420594 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136185707 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.090425457 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.006882897 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.398858362 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033660771 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.49652756 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.937703381 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.071820994 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934970268 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.143322418 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935367229 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.98300703 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933412983 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879655442 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168696254 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.518071606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.023833389 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.929736534 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00907052 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.214891258 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907927852 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962731345 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889049534 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88037723 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.653661984 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433098896 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.881211361 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.883798885 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.013790617 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935576409 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.883541098 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83194011 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.505799902 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883454874 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.896283632 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105514593 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496661857 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201324069 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815699987 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210236789 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974857567 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.105108368 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.522753235 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.954232219 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142519905 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005848888 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.047920574 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936590528 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901149878 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980265638 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903756926 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.069908231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182731149 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.885754001 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.887048351 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.621164905 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918551876 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882167271 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.887145155 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636249609 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148675795 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.904716854 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889547399 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.77141065 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.896716655 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947855798 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88868082 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8930019 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.418463436 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612484845 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.890204013 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.467499881 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107930747 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894467405 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.550262065 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001383199 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.964433624 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147731669 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940412534 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.818288048 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.594181931 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.576978922 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884719877 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818962555 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884353443 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89322002 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895886851 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.081312209 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155959552 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926620519 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.55647045 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.926598133 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896586239 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.888886472 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884357863 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396586382 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990108288 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.113052656 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.936516757 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028871418 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.89955149 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.819401336 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888271185 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890402518 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885385288 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.884722319 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918720075 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.563561412 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266967473 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146795266 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.538125636 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900301436 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.623844986 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.943353026 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.895138489 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.71281069 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101087245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.924363067 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901965175 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.896285228 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.633085939 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.593447319 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457071835 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190314562 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180438407 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318286216 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.139133688 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921049667 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.222955182 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821304953 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444577944 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947294054 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232190388 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830355028 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96995218 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.528440428 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227605042 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901572413 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113994886 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268555252 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.733350321 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91228308 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099332868 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922028916 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.084506007 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858049806 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.191138225 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02853619 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.561491902 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094770763 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222046849 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675772727 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902354705 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.88757196 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.556289737 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970196585 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.601034488 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059153536 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.122742551 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.808415627 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387094975 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894562001 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.112863795 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238765087 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.104270484 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.016907646 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824189344 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.899832503 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.899524825 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.890362788 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.887645213 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.771575255 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.143336537 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901481703 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823513035 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.049431842 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179984293 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.789152554 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.895196144 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888820841 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174462884 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473215811 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064547468 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.031723906 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.417000559 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897800792 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.824417436 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824776961 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.582534781 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895319089 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866611149 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090966788 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.988916164 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83878151 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.018079485 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981002666 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147496446 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.904956161 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152853927 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16289073 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.591251415 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917366208 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.990560722 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.536067099 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.999973141 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.891195466 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126007695 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.64704286 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118688326 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.905775221 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.842255039 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.891958509 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105308784 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891504692 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.75760718 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122347037 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.613320997 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.903039265 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190880489 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963157512 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.761808547 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935847294 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.984687909 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901448346 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970912095 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902198429 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.90279052 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903735882 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939253965 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760284749 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.014864864 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.906368882 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987137307 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001720924 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.416588432 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.898050167 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158605716 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240746789 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.208223254 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949178616 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89350739 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893771974 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830016322 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043878053 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.119794153 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171684344 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.023473604 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.011193315 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919078197 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.550015192 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146871409 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142582834 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16966277 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.789133026 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453301945 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.94107696 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.894522995 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905761859 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.105485437 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09833073 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187677824 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030578772 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.027148469 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260497482 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16879208 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.895949148 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895565906 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469470796 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.910648247 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.573108397 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.935137461 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.804677874 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170751111 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905374214 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287605564 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.917916406 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.055038816 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.669466693 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612242938 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185681024 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.877505553 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953452546 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160897939 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266456919 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2067601 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963323356 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907690428 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.000542879 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043610669 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.788097088 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897218766 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896617475 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945738544 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.607069234 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9066029 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169762932 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203244806 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.895113299 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.783939784 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920849914 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.906470089 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120583165 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152562459 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149209515 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907331679 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902960245 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.713358061 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161142975 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952907055 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831301355 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.901631392 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994378983 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145705394 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921115407 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.349802497 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.609473802 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160334253 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.896538056 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921718567 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105891708 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256556727 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209386514 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.430023366 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098780499 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483735902 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.519191632 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207307198 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.903289702 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.091707512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209645578 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.902990061 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.026071403 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945628908 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.157676069 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208395279 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.906380093 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571541474 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.868543517 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240010805 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45670307 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838955385 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908642034 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.960059479 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900528524 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.031707799 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9112382 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.815368408 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103865831 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.66797268 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172820307 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.905819628 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.886505048 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.570750254 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.232601854 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941458613 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042329351 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902322122 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.575584103 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.250963751 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157635226 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.038074361 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.915135352 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.90398065 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901038455 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888143697 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.099005642 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.096759472 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167350943 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.062395508 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.943604305 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90461004 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.11665315 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112507072 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.765189248 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035043839 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033193369 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950402905 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.80765688 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402916104 seconds)
  done (took 1683.567829611 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926501854 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.005676004 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.915559459 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.98006373 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939997762 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.969244591 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.974305779 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962257447 seconds)
  done (took 57.510686502 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.901562616 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.120879082 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.911560007 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.902030398 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.91169395 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.90242514 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.07226832 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.93352589 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.911684252 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.912840106 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.90281612 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.915180275 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.221835809 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.930145396 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.904061204 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.887689058 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.911558562 seconds)
  done (took 75.008598953 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.903291255 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.917882863 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.931924923 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.914202093 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.915706941 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.919484177 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.713229272 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.906243484 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.905336166 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.035996736 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.538376757 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.918664843 seconds)
  done (took 87.360770359 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.913504458 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.911453678 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.910382662 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.912119966 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.911607887 seconds)
  done (took 11.400879418 seconds)
done (took 2192.03185858 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.157239516 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.122836391 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.142642992 seconds)
  done (took 6.10468595 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.054704832 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.102018759 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.222613363 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.241927269 seconds)
  done (took 10.465642653 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.193977817 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.277384028 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.11339271 seconds)
  done (took 8.425590419 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.312038689 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.914594318 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.02177374 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.906829747 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.906854832 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.907915025 seconds)
  done (took 22.564180882 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.909614063 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.912214292 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.910794645 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.913207872 seconds)
  done (took 9.487687242 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.891962719 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.621923145 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.895264325 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.908176008 seconds)
  done (took 21.159570187 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.66739829 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.673886972 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.656984294 seconds)
  done (took 9.841045687 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.523679202 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.830920363 seconds)
  done (took 9.200506093 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.168058962 seconds)
  done (took 4.013737477 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.045288528 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.178527078 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.376794595 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.408017086 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.464854084 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.801725298 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.230967858 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.165524233 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.30582204 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.35333786 seconds)
  done (took 25.176332766 seconds)
done (took 141.684735066 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.290764843 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.148116716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.109432235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.247921741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.135002844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.109467116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.333318733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.232572559 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.755563041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.754378235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.246645716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.134216386 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.073081702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.14561871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.073249263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.149710894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.133021491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.306199988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.981971134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.143283113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.339747131 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.887734402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.091162405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.900330982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.135319834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.063319055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.467828678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.153242268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.134377299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.476823925 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.065228569 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.295364432 seconds)
  done (took 174.362014647 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.821811652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.914039241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.912313728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913499635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.518844058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.913733423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914654432 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.912288068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.0969273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.094251805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.919175787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.532667056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.924122501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914430976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.926099938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914336689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.328377639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.933606269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937481101 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.937359209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.937692486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.496436149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.934180153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.554379807 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.324367292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.932716168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.914796435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.938221587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.917723976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.92139742 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.92392007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.915673398 seconds)
  done (took 210.841058369 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.914440318 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.915932764 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.916328557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.915758083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.915719825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.914783894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.918018475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.915926367 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.599872839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.594489711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.923002909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.922023082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.92505247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.917031132 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.922023354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.917228266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.925259155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.924734782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.923391225 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92585933 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928695354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.850366709 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.932271381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.845642109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.923920487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.923771966 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.918386885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.925495972 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.927428425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.927909117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.928613553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.917914746 seconds)
  done (took 222.558841819 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.117617254 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.922897893 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.923575156 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.861195378 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.923699405 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.922717452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.899998852 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.124076185 seconds)
  done (took 19.560971889 seconds)
done (took 629.182808221 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.398495202 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.236865825 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.09820561 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.947480021 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.175887856 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.980569212 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.944518873 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.004686289 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.127220437 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.017749413 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.593461752 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.962655391 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.688404856 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.968624274 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.072542951 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.998983033 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.494438773 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.584479734 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.124154518 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.014343127 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.112493607 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.881293551 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.020478504 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.159214339 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.706060765 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.937511815 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.104953123 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.500117385 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.957698884 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.106111858 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.697000214 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.333743675 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.954758475 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.942183328 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.999363558 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.978009467 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.280429142 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.95396862 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.065406002 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.687706912 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.000135075 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.019748702 seconds)
  done (took 106.685987676 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.915826281 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.914332465 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.912968447 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.91523531 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.915253841 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.914472085 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.914013968 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.914489308 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.915312747 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.914183249 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.91489752 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.916263307 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.914714223 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.916381676 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.914858704 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.914350839 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.915568486 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.918470853 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.915385975 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.913910236 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.915703203 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.917895996 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.916255468 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.914744391 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.916174266 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.915514445 seconds)
  done (took 51.665670995 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.927204755 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.06906004 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.148148179 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.945872536 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.927251309 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.930496201 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.946728968 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.932863502 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.929156452 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.930142119 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.021716828 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.934528061 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94699107 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.147731255 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.942847061 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.927154862 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.92846354 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.92787945 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.076179499 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.94413398 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.948887498 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.933116741 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.947045458 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.941707929 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.930621219 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.928940614 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.931623456 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.363611957 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.937657449 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022729173 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.971389129 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.950526177 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.313896423 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.159714481 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.982873691 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.934722469 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.93044918 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028082685 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.934659082 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.929774569 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.947186865 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.934463452 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.148698579 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.429077559 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.944518174 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.929533937 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.384682452 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.036122548 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.970415268 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.942818845 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.152573349 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.946021731 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.931312024 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.931451646 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.966937916 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.943222093 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.930000291 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.234510588 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.942073853 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.948548066 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.93569455 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.932058796 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084710076 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.939253975 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.073833783 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.93946389 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.937833006 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.931729234 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.150537987 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946441348 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.42693322 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.944086139 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.931634602 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.022665325 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.077929422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.401137452 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.944813184 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087671563 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.332990058 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.956441708 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.938606413 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.356646144 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.959884281 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.939823082 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.933723934 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.933195166 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.932736055 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.9760387 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.947769486 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.364439898 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.43470964 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250887588 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.959287033 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.94893861 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.93322614 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.239726873 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.940657451 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.932917075 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.145160375 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.445523879 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.945903503 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.939390008 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.418062123 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.946834118 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.951514966 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.941683564 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.154991517 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.949968069 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.977086182 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.933598155 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.93946032 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.935551092 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.95188184 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.940045015 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.933293525 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.405142996 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.043328453 seconds)
  done (took 238.780976102 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.928021687 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.928082238 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.929636789 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.941333573 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.927637636 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.933658859 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.927564282 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.927978247 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.933768709 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.927912579 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.927680221 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.930129598 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.929290763 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.927349538 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.400475682 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.937808747 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.543751347 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.929110934 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.930615556 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.947530949 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.611037471 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.938561404 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.931577969 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.954639797 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.933715276 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.930888485 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.944679431 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.966138512 seconds)
  done (took 169.78543697 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.937194904 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.115619671 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.954836924 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.973074005 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.948115288 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.934742016 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.961328389 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.958043289 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.941830099 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.934314079 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.935247173 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.997783015 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.947690456 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.076125641 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.970072405 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.969997487 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.04620347 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.945598814 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.935994769 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.934741905 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.965394062 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.935578052 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.000103903 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.067098196 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.955783532 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.055131914 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.943801966 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.939663584 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.93777543 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.058395659 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.953624215 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.999150724 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.966339759 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.960034749 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.061787564 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.056813779 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.046730641 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.969105212 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.945077014 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.935806991 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.936304613 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.927199726 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055424964 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.95569856 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.940121542 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.047447059 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.956671065 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.939859525 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.948386546 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.936559101 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.952762907 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.956768926 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.006778415 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.073932228 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.970542731 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.966031479 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.965671943 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.235512822 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.949195135 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.04062103 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.933819359 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.059068069 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.957709584 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.928130151 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.938865563 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.943474953 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.967073574 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.972212753 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.049695728 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.94717349 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.041261913 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.973851688 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.947778435 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.938458768 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.940437179 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.059298765 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.059580367 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.974833926 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.979730443 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.97425835 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.936605274 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.940204785 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.930191046 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.957722529 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.947194247 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.056429001 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.059510193 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.94853921 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.943229573 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.942449415 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.942445531 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.967577115 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.06859615 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.975620352 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.042390338 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.011602998 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.015952969 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.953578311 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.953369984 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.944345351 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.005193849 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.954093707 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.953324307 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.282805096 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.013454511 seconds)
  done (took 210.135810257 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.035112842 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.414191048 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.997045791 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.997515691 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.233703073 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.368819998 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.725287254 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.989353688 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.990372107 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.016316128 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.153286664 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.046014874 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.004498655 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.980900242 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.388250927 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.982125467 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.992644307 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.011809526 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.993661201 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.561109027 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.303080905 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.113923373 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.992834513 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.141811919 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.97183236 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.301467562 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.480594276 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.376909349 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.028472947 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.342172991 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.323528507 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.670825109 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.206928188 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.236471474 seconds)
  done (took 77.250165889 seconds)
done (took 856.156606926 seconds)
SAVING RESULT...
DONE!
