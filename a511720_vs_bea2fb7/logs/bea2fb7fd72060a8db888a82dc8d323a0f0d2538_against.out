cset: moving following pidspec: 27351
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.25194852 seconds)
loading group "string"... done (took 0.522281918 seconds)
loading group "linalg"... done (took 9.665147013 seconds)
loading group "parallel"... done (took 0.168592668 seconds)
loading group "find"... done (took 2.676706514 seconds)
loading group "tuple"... done (took 2.148486619 seconds)
loading group "dates"... done (took 1.42774357 seconds)
loading group "micro"... done (took 0.633194696 seconds)
loading group "io"... done (took 0.682603773 seconds)
loading group "scalar"... done (took 53.556906435 seconds)
loading group "sparse"... done (took 13.614780553 seconds)
loading group "broadcast"... done (took 1.346465496 seconds)
loading group "union"... done (took 2.557754586 seconds)
loading group "simd"... done (took 3.638882361 seconds)
loading group "random"... done (took 13.72749768 seconds)
loading group "problem"... done (took 2.259714172 seconds)
loading group "array"... done (took 23.449748603 seconds)
loading group "misc"... done (took 1.650443677 seconds)
loading group "sort"... done (took 3.756196301 seconds)
loading group "collection"... done (took 20.667907282 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.789489361 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.164520083 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.242457229 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.680861791 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.289572857 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.224856038 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.196506483 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.182909642 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.640124837 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.230611728 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.182032576 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428046681 seconds)
done (took 7.071565177 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.333895254 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.096440615 seconds)
    (2/2) benchmarking "String"...
    done (took 0.215505617 seconds)
  done (took 0.970784972 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097845893 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162871759 seconds)
  done (took 0.917839692 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.138384427 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174784028 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.151114468 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.13502995 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.150979884 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.138293215 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.150356551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.150828119 seconds)
  done (took 1.7076388 seconds)
done (took 4.723878365 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519027175 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.953270874 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.553949284 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.202536091 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345773998 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.348377891 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.318217421 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.277116595 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.138638789 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114407217 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.209918943 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.490306763 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.479277847 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.961117471 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.099745366 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.155599116 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.172532205 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.869521956 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.193521886 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.158819289 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535674124 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.241342073 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.16401555 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137171424 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.24830909 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.171400357 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178684734 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.148548499 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.767427128 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.184405014 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237877735 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.129760356 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.178335597 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.206310034 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.284853053 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156564113 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.779769271 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.250174342 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127113371 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.147840238 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.765696811 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.173932454 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.239893355 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.15354271 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115727915 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183499801 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.143331355 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.123797796 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.157314558 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.145787813 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.218047421 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.517279537 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.1521609 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.23166228 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.155018665 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.780639144 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.146688067 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.333565043 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.187010443 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.152497186 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.124024082 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.151326297 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.212656302 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.142060244 seconds)
  done (took 23.228693957 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.209108296 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.225479161 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.144047577 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.190086603 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.18902718 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.145148625 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.135305404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.141944517 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157789549 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241835851 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.186138475 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.233016922 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.12239692 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.156091078 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.18116389 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.298781919 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.171202916 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.150701636 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.154987517 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.140497266 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.192075682 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.15964586 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.141480282 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.165137969 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.213343819 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.254126729 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.157857644 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.170753697 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.149527953 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.144993369 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.192411968 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.211867444 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123430152 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.153164798 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.23483049 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.154297205 seconds)
  done (took 7.076391628 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.268447825 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.15008417 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.278803889 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.153985993 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.241892632 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.19548729 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.226988572 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.213315394 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.315240785 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.333286726 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.208659635 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.176171495 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.143729171 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.144456988 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.127539682 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.144437152 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.867640431 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.22289657 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208735272 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.219234373 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160023422 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.130112775 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.773321035 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.131098096 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.150796829 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143886943 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114467978 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.257603498 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140734587 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.532480911 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.150740886 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.145000212 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.180991731 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.258630863 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.21367368 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166154299 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.189459916 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.160371441 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.133714769 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.259361264 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166498198 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.127458527 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.146606562 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.132074197 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.182137826 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.158228291 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170497729 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180133451 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.163727455 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.150448532 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174733114 seconds)
    (52/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 0.251474367 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.927538201 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.24383408 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.18042455 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.152913789 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332597882 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.154128328 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.168770624 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.160007428 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.257884191 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183587173 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.146028136 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.127238736 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.162737664 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132022585 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.146333692 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.169669411 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.488990604 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.133622997 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.209525038 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162065162 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.164941365 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134361918 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.151296265 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.155044995 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.152201478 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127920876 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.152263217 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.128604343 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.155659599 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122815758 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151802195 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.126842876 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211278892 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.145083882 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.171485354 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.175437324 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.135837176 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.150344118 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178842016 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.131032375 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.155091719 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.224052235 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.142925927 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.14459206 seconds)
    (97/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 0.757007229 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.159982914 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.19095026 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.137549893 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.271838339 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.132690546 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.174249812 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.145777127 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162120127 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.16200908 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.128524584 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153011148 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.144833432 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130960857 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.209678269 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.137942542 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.146594619 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.136154116 seconds)
  done (took 28.867542793 seconds)
done (took 59.829260762 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.468509439 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110703952 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.132475994 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115520347 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.132668757 seconds)
  done (took 1.698330563 seconds)
done (took 2.414299612 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.241058936 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.358192128 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.254739377 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.15484958 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.221593263 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.224918546 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.202227043 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.223840126 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.229292845 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.241424345 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.128420451 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.244206823 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.234894256 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.220694056 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.128920514 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.26269849 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.222745783 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.200670002 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.256774832 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.155239573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.164970629 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.153583217 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170216059 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134352001 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169712992 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.150553922 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.173741647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.15021142 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.164050959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.136537056 seconds)
  done (took 2.453141492 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.196586172 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152616963 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16328487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.144769317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16666009 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135379366 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.14669135 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.168780471 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.173342225 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.147929915 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.162929238 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135623182 seconds)
  done (took 2.42442129 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.131542705 seconds)
done (took 10.203888567 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.208961489 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.117263096 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.199836655 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.282070297 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.379954812 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.316581599 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.677946336 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.244714709 seconds)
  done (took 16.291483436 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.170731417 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.207674244 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.140650428 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.164485722 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.142445767 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.164351765 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.141617311 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.161375619 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.144673495 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.158972451 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145790258 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.156145415 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.142331368 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.162043162 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.146477635 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.163709086 seconds)
  done (took 3.305793006 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.189082005 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.188116659 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.146889769 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.166663163 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.145317292 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.168519754 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.153308323 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.164325924 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.143809837 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.162101759 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.16943195 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.148076022 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.16422689 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.143703819 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.16433654 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.167900262 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.161574806 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.149364524 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.183937217 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.150623623 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.166808573 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.146401509 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.165343511 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.149864727 seconds)
  done (took 4.661815026 seconds)
done (took 24.989208545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.207761057 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152038748 seconds)
  done (took 1.100857169 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.206161273 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.221797479 seconds)
  done (took 1.175053755 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.166990998 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.160277225 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.173621729 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.171295106 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.142423209 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.158825644 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.184374633 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.142020224 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.158958063 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.141497183 seconds)
  done (took 2.351118603 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.148827655 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.162503067 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.155776932 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.209095584 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.150190538 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.161424648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.163741353 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.144953419 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.166400071 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.142029374 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.162998241 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.159741822 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.162845639 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.161146749 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.165250553 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.149735731 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.168682973 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.146249324 seconds)
  done (took 3.631625572 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.146230048 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142764593 seconds)
  done (took 1.041226262 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.149231197 seconds)
    (2/7) benchmarking "second"...
    done (took 0.16249322 seconds)
    (3/7) benchmarking "month"...
    done (took 0.147927819 seconds)
    (4/7) benchmarking "year"...
    done (took 0.161202692 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.141603971 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.158683447 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.141006828 seconds)
  done (took 1.814364243 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.616206782 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274124454 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.423775328 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125635181 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140185773 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.373153737 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158997524 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10821872 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.126415517 seconds)
  done (took 3.126324933 seconds)
done (took 14.990036653 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.144682993 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.227097036 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.689389621 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.164180166 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.162471917 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.202587633 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.370915953 seconds)
done (took 2.719336656 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.365132465 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.184347604 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.122573129 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.144252771 seconds)
  done (took 1.570105598 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.136690566 seconds)
    (2/2) benchmarking "read"...
    done (took 0.168325595 seconds)
  done (took 1.069097823 seconds)
done (took 3.400941349 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.166711912 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.161016844 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.146220829 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.165759068 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.145561317 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.163822368 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.144731673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.160421726 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.14486479 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.160134469 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.146407514 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.162293682 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.14243138 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.162670197 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143909152 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.162932381 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.145259254 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160786228 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142218993 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.164013105 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.162731937 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143318714 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.161668184 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.145356403 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.162347601 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.144740822 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.159568825 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.143159546 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.162198139 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.145336988 seconds)
  done (took 5.380128786 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.149959013 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.137832192 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.160388831 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.149475432 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.15594965 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.14155557 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.155896012 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.141286402 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.159920475 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.141215095 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.160484095 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.141996478 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.283787693 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.14386145 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.161830635 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.144091298 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.166504204 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.142535234 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.159827098 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142486765 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.161986521 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.141354637 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.159617783 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.141882288 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.158452342 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.139392796 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.158843942 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.14120371 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.159814806 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.140906885 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.162392298 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.144682016 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.14093985 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.16891331 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.161083403 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.143056949 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.146283895 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.155972558 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.143420962 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.156720208 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.138655761 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.160196978 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.143010644 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.165196566 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.142628752 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.160353073 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.142515958 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.160334356 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.143447082 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.160557358 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.139489736 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.158688197 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.144166517 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.160760596 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.144767083 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.15633657 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.141900587 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.156411091 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.143419984 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.158991307 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.139904523 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.157271605 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.147308676 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.160158285 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.156110564 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.164533353 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.142371247 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.161336019 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.143648504 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.164287512 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.144306968 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.169892414 seconds)
  done (took 11.810895995 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.146126404 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.142953793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161056235 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.142665768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.160536756 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.143570491 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.160964045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143138174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160529701 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.143577057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161137181 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142302244 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159000037 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142308948 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160280438 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.142602491 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.159735257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.143120155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.161373873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.143152282 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142366219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.160874648 seconds)
  done (took 4.099737684 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.297525125 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.14862274 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.210675604 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.176669743 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.161318908 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.174532879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.147357286 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.168425538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148232328 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.170251748 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151960246 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.165464477 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.178847044 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152197636 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.171273526 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.15379763 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.165832401 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.153724716 seconds)
  done (took 3.87884458 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.147830601 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.1431094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.163446483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.142628752 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.162126692 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142765082 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.162605943 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.143191323 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.161590311 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.143954688 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.161116298 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143435768 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.160881632 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1433954 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162147086 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.143277298 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.161541283 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.144043806 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163069549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.143416561 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.142826193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.16390995 seconds)
  done (took 4.130888851 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.163907157 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.166374369 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.164052077 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.168347385 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.145708264 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.163624508 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.15122768 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.164252731 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.151204773 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.163441314 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.14585528 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.163263639 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.160730914 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.165808236 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.152115294 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165792591 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146480219 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165343722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.146592035 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.164786668 seconds)
  done (took 3.966976387 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.239936727 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185176202 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.180923636 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169069265 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182080696 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.160906565 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189328335 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.161094019 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.182086214 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.194525785 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.161800812 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180640219 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169509265 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.188401542 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.161083124 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190907447 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.192795048 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169330821 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.184814703 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161693816 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.192717454 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184696741 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.16989884 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.18361434 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.162086394 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183823446 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.161463619 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186857421 seconds)
  done (took 5.821829647 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.161830076 seconds)
    (2/2) benchmarking "in"...
    done (took 0.176218987 seconds)
  done (took 1.132712826 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.151147992 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.147814328 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.167206389 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.146272372 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.167991055 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.145967864 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.167983932 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.147641051 seconds)
  done (took 2.034847798 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.208302606 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.232691182 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.173116288 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.157202323 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.23121809 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.219958767 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.203247564 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.152500957 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.16556889 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.137777436 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.22633374 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.136185684 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.16751341 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14214559 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.169134566 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171806275 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.146702175 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.17672394 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.151652595 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.169231576 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152082747 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172958167 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148150544 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.178174613 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.140483996 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.168088135 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.148732391 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.177802987 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14253286 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.170403932 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.143737482 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.177806969 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.149621192 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.173344041 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.147442283 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.232627277 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.174410377 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142452612 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.168589595 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151471985 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.195453696 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.147485445 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.168134788 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.144612873 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.172138999 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.150606861 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.171704656 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.145968772 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.160080692 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.141823552 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.168903113 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141802111 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.167252763 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.146930207 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.167727475 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.15223535 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.170870122 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.143741324 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.163636242 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.142531743 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.168119423 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.142606193 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168944319 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.149927446 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.169270757 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.16871538 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146284175 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.169581202 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.148534111 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.147406664 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.168987411 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.183068461 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.147141267 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.172488275 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15194069 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.170044808 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144991831 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17394307 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.145138568 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.167722655 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.15065142 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.19076546 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.14859662 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164131905 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.143482631 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.174384536 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.148743985 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.172820301 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.139502237 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.178582207 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.150415287 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.170111926 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.139373659 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.166063645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.142846098 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.173743113 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.139825533 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.167348096 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.146498518 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.175116682 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152085262 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168237176 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.149875343 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.174531202 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153044951 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.166666795 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.215007928 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.143876606 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.164892686 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.149253686 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.176215914 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.141278581 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.167680821 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.14695968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165500794 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.143133984 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.173949634 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.147638188 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.171058275 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.151362265 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171140618 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.148664855 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.169915322 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.147627712 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.164996401 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.15248196 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.176761026 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.149334563 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.170937519 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.148010232 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.170832338 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.147935433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.171910408 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.144316536 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.174704619 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.155234475 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.168194852 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.149342036 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.174028695 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.147890664 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.165024616 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.146128639 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.171546046 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.146524848 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.172565031 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.147982854 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.166446236 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.140772161 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.16967437 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.143027895 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.170882275 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156238444 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.166736426 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.150556995 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.165488922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.156577313 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.165686992 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.152815452 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.17214305 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.153279967 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.175388155 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.139685989 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.167288103 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.15066029 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.170950091 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.144133482 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.171507215 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.14886474 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.176205158 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.1417806 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.173136333 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.140490141 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.166497081 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.153126037 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.17088444 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.150526404 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.164159633 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179533445 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.182136918 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.153474056 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.167918769 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.168548738 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.152280607 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.168151969 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.151393344 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175032524 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.152863014 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.166410966 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.146887254 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.173872529 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.144217781 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.171017488 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146995928 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.17010543 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.140748974 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.170302313 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.140474638 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.173667196 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.149277782 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.173865894 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.154098437 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.172205488 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147341712 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176924664 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.144426327 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.173381685 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.140545317 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.173527933 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.15714652 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.176670302 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.155119725 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.171400008 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145567952 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.170454358 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157224043 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.173386784 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.14818742 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.171466637 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.141929781 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.162448591 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.153804894 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.173486936 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.145108118 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.169776128 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.149544994 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171732104 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14718813 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.163160693 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.153557516 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172923875 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.144126079 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.171230155 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.145038975 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.168988319 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.155318564 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.163774737 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.145522136 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.173189412 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.153210614 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.170627564 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.148207604 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.174881946 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.154964329 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.174432727 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.151267909 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.167526401 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156695694 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.168354369 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.149402868 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.165928851 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.151801287 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.165286592 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.152166488 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.170991018 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.146222016 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.167925684 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.152797085 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.179091419 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.155373529 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.169104814 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.152803299 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.177478296 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.155987853 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.168468071 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.154609395 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.167884477 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.142024206 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.166869963 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.142420276 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.173828669 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.145792771 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.177497642 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.149747325 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.17120096 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.153452265 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.173732288 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.146533648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.178138016 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.181098099 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.143916765 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.164765086 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151525623 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171039627 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.146970924 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.167943843 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.15242951 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172709462 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.153437599 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174683387 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.147384385 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.170970834 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.15807052 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.169246661 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.15650838 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.177002676 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.155626285 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.168085621 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.154623364 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.168872173 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.153179674 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.16584183 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.14908048 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.171501418 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.148864531 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.170408611 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.14780455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.167551195 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.143266263 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.169016256 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.155435409 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.169724516 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.154343859 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.171362225 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.148346728 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.167851163 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145966397 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.177879673 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.148285686 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.178348378 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.150619782 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.165883036 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.144608962 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.176445412 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149653389 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.17744079 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.145108606 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.175991514 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.156170976 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.175421679 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.150523332 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.179692753 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.158625898 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.178265686 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.154600386 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.165912579 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.147145457 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.175814187 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.149676436 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.175574282 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.153839255 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.168168103 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.152345351 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.177884073 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.151605033 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.170005766 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.143753756 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.173638072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.156247383 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.176449324 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.15386817 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.17421559 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.151692474 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.168124941 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154918303 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.179169781 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.150786563 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.17785914 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150523959 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.176145793 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.14804194 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.177769464 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.153332627 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.167731944 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.1442578 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.168945786 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.156704145 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.166921575 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.156203802 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.17612561 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.147462118 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.170396668 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.155594507 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.16889578 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.153508348 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177292657 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.149054569 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.18235189 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.152843808 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.170122401 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.157525059 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.179098124 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.145220073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.170468046 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.149560988 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.179276149 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.149239089 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.177592486 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150571452 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.177885331 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.153451846 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.177080689 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.156776989 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.179698899 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.1458638 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.180443616 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.154228341 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.175038041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.148296441 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.171407691 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.146581629 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.171689501 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.158743441 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.16946708 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160204031 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.178886715 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.149513845 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.17060298 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.157056494 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.172139628 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.15848852 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.17009244 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.153298615 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.1711175 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.15335316 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.174160066 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.181428727 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.149085439 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.168514586 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.157846329 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.157616831 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.179296054 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.176007717 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.158212367 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.16870616 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.14508514 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.154970265 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.172528294 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.184122646 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.155728882 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.172784682 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.150885039 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.177351114 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.153929071 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.181073585 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.146678709 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.172302427 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.153712773 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.176012047 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.15033469 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.169170395 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.157828729 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.173839076 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.153997097 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.172919615 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.146700359 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.172916961 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.161328825 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.171932968 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.148892258 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.171227151 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160572095 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.172525989 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.149379471 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.1680683 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.157123123 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.176979419 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.159296025 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.171378427 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.152111661 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.172780002 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.155265904 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.180242404 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.150153871 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.175248612 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.150310664 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179625217 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157137231 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.167967449 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.149018042 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.185826074 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157311205 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.176969153 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.154769961 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.174678917 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15933353 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.182918094 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.15476989 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.171725329 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.146781165 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.174380695 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.14659441 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.1776478 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157890399 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.175080783 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.149925909 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.180118925 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157253517 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.178516835 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.155786151 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.169741766 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.160304882 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.172497983 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.155991554 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.169029316 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.146515908 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.179877553 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15839626 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.174697844 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.153512957 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.177790626 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.15513998 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.169959951 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.151030449 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.179470797 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.15810572 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.181332067 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.152329916 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.174147914 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.157115441 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.18574031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.156080532 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.174917914 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160851041 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.182999458 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.15211711 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.176698727 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.156095199 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.184830068 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.154993034 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.186949961 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.150890068 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.177553584 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.159445835 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.183681807 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.184350259 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.152079884 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.171651368 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.158084349 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.173802898 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.149038995 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.179308835 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.160360267 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.182443452 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.153809573 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.172897965 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.162741016 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.181088042 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.153844564 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.173629343 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.152130868 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.181251331 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.151811624 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.180916512 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.150734391 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.184954316 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.161004832 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.182978925 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.162170343 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.171668199 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.158735409 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.178274486 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.162212667 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.178664479 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.148331782 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.172582002 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.157128012 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.183722875 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.161283219 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.181454359 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.159389892 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.182130982 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.154832189 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.177930378 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.151585058 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.184077249 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.159662343 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.179974283 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.155467187 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.175609133 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.155966971 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.179023673 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.160705142 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.184322881 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.155308926 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.188241047 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.162583524 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.17677206 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.152186951 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.177508746 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.158676812 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.178847045 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.159513022 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.17446206 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.150401877 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.18327575 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.161928762 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.176339184 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.162042813 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.185695192 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.152118576 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.17938622 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.162712521 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.183177903 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.157487555 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.178426461 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.157907301 seconds)
  done (took 98.111284545 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.207623539 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.188114704 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157831872 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17955307 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17383691 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183942945 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.157338793 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.181666048 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157589733 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.190486234 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157444742 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.178955648 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.171561341 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.203660186 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.198077074 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.16623308 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.180238702 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.159616107 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.179405775 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15786393 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.196008305 seconds)
  done (took 4.625491272 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.162329791 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.155982336 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.180240658 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156689478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.179268956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.156582202 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.179739337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.15679019 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.180534549 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1579564 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.180281305 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157504875 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.178668321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.157478196 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179430918 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158032736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.179446493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157748691 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.180450879 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158062419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156021237 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.179316518 seconds)
  done (took 4.585974097 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.186562551 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.159716819 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.179634295 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157553206 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.184790957 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.156802761 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.186846247 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.157651752 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.191275511 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.153921669 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.173973869 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.153191198 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.181657179 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.157480501 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.175479997 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.157490209 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.19098539 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.161717772 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.186526373 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.157454519 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.173845361 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.15804866 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.183154855 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.149029915 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.186426989 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.161833289 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.185010608 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.161021733 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.173023539 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.160777428 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.183119376 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.151745833 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.172224554 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.149549604 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.172243482 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.16126981 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.183668259 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.159265854 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.182047801 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.150282588 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.182782811 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.162384616 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.173531774 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.159890025 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.157849053 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.177878486 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.161730203 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.184161477 seconds)
  done (took 9.029057257 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.191593359 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.221526704 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.161245295 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.214561852 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.198846376 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.168626192 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.186963859 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.188027542 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.18766297 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.162270984 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.198277937 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.198209144 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.163649791 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.188919346 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.16365454 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.186746373 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.164812508 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.18367189 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.166570484 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.187374875 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.167115944 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.18843304 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.171687615 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.196819023 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.189226926 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.164679601 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.185541123 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.166653874 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.195227829 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.169197144 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.190318545 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.167494833 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.198621068 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.163878102 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.187394012 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.163190794 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.199383525 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.188986113 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164635391 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.183939312 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.16466675 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.189556996 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.165469086 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.198808242 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.164788623 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.188174837 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.163659918 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.185492792 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.172883367 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.189697726 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.193769543 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.174147565 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.190141148 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.164105087 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.190786901 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.172856758 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.18865325 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.163405487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.189509644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.170917335 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.188425847 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.189187327 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.174493278 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.189124189 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.170224929 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.197340877 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.166439252 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.190327625 seconds)
  done (took 13.325538953 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.199125112 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.190062227 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175017647 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.200777906 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168528693 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.192083924 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.168029328 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.192999892 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.189754857 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.173508587 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.190792418 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.29797218 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.170522383 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.197487753 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.166718826 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.192859791 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167261284 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190711543 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.167222032 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192756286 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.191391029 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.175467076 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.190535961 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.174967431 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.202811755 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.164222629 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.19222186 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.191785143 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175946746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.191131079 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.178217635 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.193234559 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.167241728 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.20062663 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.201683258 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.168124173 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.444313345 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170295399 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.19142099 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.169060884 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.189676285 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.17440912 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.192882558 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.164412248 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190733263 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.166832668 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.199741881 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.203688682 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.171644174 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.197700001 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.167612795 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.200501475 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.191961701 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169064796 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.199392395 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.181547109 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.200468858 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.199400357 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168265182 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.199671062 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.175000955 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.207247304 seconds)
  done (took 12.751999119 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.167346839 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.187244481 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.161404673 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.187384863 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.162076197 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.187636151 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.162728025 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.187453516 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16231673 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.185657757 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163348287 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.186458068 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.164771372 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.186194697 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.163163486 seconds)
  done (took 3.706673384 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.184954316 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.204096344 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.264139246 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.165919004 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.188144177 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.170744758 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.188332748 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.166144521 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.185631846 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.168652522 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.190516057 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.166575093 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.204824789 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.164338496 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.187279681 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.166084667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.187540119 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.167001474 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.187718494 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.264649367 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.167451392 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.190678158 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.164682813 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.192559124 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.165950851 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.193189651 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.172369615 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.189346425 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.165259493 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.188467402 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.166398535 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.19589188 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.162441467 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.193188743 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.165239099 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.188595631 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.164388432 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.189072856 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.166394484 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.190648616 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.16623343 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.191202248 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.163874401 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.192663048 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.162850039 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.190605733 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.162858908 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.196371969 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.164742039 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.191722774 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.163893258 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.196021505 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.168454801 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.198249372 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.17035644 seconds)
  done (took 10.95956923 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179118238 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.190960596 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.178905991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.187659898 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.167776992 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.191073739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.168817068 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.190732285 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.168519474 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.187259986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16840249 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.191234444 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.168882579 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.189532272 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.168123265 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.19010958 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.165613867 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.190694082 seconds)
  done (took 4.186597541 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.16666875 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.162060762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.189205066 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161532483 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.188740062 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.162893899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.188703326 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.162481277 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.191189257 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162438393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.188575657 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.163194216 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.188890431 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.163281448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.187555694 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164005633 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.187200481 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.165461264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.163050972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.191719561 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.163882014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.189707573 seconds)
  done (took 4.791251318 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.18040681 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.265749576 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.19445294 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.269913373 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.165497303 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.18411189 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.171494154 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.186912107 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.17775794 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.184942303 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.160921511 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.18692391 seconds)
  done (took 3.275723679 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196190591 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.227312076 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.165421525 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190935104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173024587 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196474705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169059347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19386767 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200502592 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.181306156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194765899 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177187406 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.204038307 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176532993 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200535348 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19935929 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170758935 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19524962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166901252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210350353 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169372516 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203503183 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169408415 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197098109 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194371854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17775312 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202483151 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.180254556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19816214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201418072 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17556639 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196075772 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178471718 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.207850035 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166661557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202713418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169351703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.209631267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.200764636 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17873041 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.193087543 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173976803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.204086986 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199970681 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180274601 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195838731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.177522085 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197715994 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170749017 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217546449 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201700649 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.180319229 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201482256 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178240543 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207438739 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.216500715 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.181561008 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.206507056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198410845 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181158931 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.204099977 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174361628 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.205668053 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.206747101 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175859444 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203738339 seconds)
  done (took 13.556246154 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208884454 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193226667 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171040326 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.208546841 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178322886 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197571073 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19512621 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171297341 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195104419 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168954725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.240469895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170914262 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205020555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203435297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172298726 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195881054 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17126752 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205388618 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168189334 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.218872875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196453683 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17967173 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205663584 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177939667 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.209739241 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.200509716 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172150663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194644235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17134197 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197137499 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175952264 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198181208 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1781318 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.196065505 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202877963 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172545475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196598115 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178186905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197575893 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177274428 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.208184505 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184925891 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197748051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197724865 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183414176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198174712 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172114205 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194481785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171963697 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194905302 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.181953376 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.210437095 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.208528543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.179297521 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198803074 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170942618 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197903309 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171079227 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199049265 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201215113 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182060652 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198814947 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190570672 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199715062 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170199018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.207568644 seconds)
  done (took 13.55342296 seconds)
done (took 239.47571029 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.31884299 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.34735716 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.157580095 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.421684909 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.157388939 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.883604892 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.864777078 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.225067587 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.186293802 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.157962056 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.182928011 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.176144327 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.568541921 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.157004532 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.181731699 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.198788058 seconds)
  done (took 32.14548135 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.352661326 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.399697336 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.173414021 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.187632938 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.164207195 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.188648221 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.161052184 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.190521365 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.162743391 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.192946114 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.163476794 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.183443648 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.191420152 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.160560362 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.186461351 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.165392471 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.191461149 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.164580775 seconds)
  done (took 4.550195315 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.186354074 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.240719438 seconds)
  done (took 1.407754226 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.197020236 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.284822672 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.389898464 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.238568815 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.184977782 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.208264543 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.238410974 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.176029927 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.276898689 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.20006769 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.175816491 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.185189331 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.189334552 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.196381956 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.180513178 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.187510577 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.190922253 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.204054999 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.199551284 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.16556428 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.212254435 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.165659124 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.192595651 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.178274974 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.272124479 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.201291379 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.168185075 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.187367821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.166404261 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.205176021 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.170550529 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.206984491 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.174979863 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.244765832 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.194679295 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.243964823 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.167394192 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.190307301 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.177444282 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.188585574 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.19227508 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.168057963 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.19805668 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.162904585 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.187166608 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.16836778 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.187748037 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.165870116 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.19672362 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.167084795 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.198691677 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.170254262 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.24168227 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.194847752 seconds)
  done (took 11.754538549 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.019351553 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.210828905 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.190190177 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.183789363 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.212295712 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176983888 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.034386147 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.189286082 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.320506958 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.100873372 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.207809108 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.173151767 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.34069039 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.350296989 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.353757905 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.431183183 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.861345148 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.205155418 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195623968 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.233610433 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.196922877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18114601 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.206388885 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514866311 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.163849746 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.190326227 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.169331309 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.197798477 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.247371122 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.163607188 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.195489734 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.269141069 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.367135374 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.282387236 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.191700774 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.163555086 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1888993 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.256961238 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.343362309 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.290019841 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.260258585 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18639598 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.164376141 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.193326121 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.179762943 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.187089294 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.249817382 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.26162922 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.262630045 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.168818535 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.199420471 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.171534523 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.194345943 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.249521884 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.161633893 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.460684281 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.435127889 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.190853809 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170948764 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.203603405 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.338870397 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.191024432 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.311365991 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.211696054 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.287217879 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.163451302 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.898560285 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.257617956 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.164379004 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.194608825 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.170046414 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.197493061 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169139246 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.252557117 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49262738 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170638668 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.197060534 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.188189504 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.297314344 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.166540032 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.189338602 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.250838532 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.167142833 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.196800096 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173556218 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.19788501 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.261285391 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.344740836 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.171910828 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.197781506 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.169521557 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200735303 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.190771397 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.275566816 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.329889716 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.249843154 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.299559462 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.169491316 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.253342342 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.258641828 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.197123461 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.259975099 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.170975932 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.204937374 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193355244 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.300741247 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.226996254 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168202674 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.195357734 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.171345393 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.234003081 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.19506014 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.172377367 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.262103512 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556541512 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.25941986 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.188786228 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.191514927 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197684705 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.250574323 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.174505711 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.334068599 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.20156397 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.257990907 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.170091253 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.19012739 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.171554707 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.252078983 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.202783538 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.197014019 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170520777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.201087024 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.35267306 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.29537129 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.198867677 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.324110001 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.264901075 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.172497774 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.266646548 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.198456312 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.256996228 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.175939343 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.195815404 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168451309 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.900848844 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.178484289 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197649785 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.172220294 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.274190524 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.165246084 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195768191 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166066997 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1898328 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870554558 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.195332033 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.164643912 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.194112254 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.171663031 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.199058064 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.172304173 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.197967632 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.253290938 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.321791339 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.203473361 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.171377101 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.193424667 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.250082709 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.167840827 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.194094514 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166238318 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.194568178 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.173335241 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.199191322 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1701143 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.261475709 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.248527135 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.333389603 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.655658935 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.192655784 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168345918 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.31666457 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.193419918 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.399630358 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.201263792 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.309269775 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.25590426 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190609505 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.436292842 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.25692974 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.281086443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.170062059 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.263240249 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.192478667 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.172663577 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.251035414 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.194693753 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.173688986 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.248673661 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.2043535 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.198201391 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.347548036 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.166387289 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316953155 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.192470844 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.261060503 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168080801 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.199002471 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.404080575 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.192708375 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.179995515 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.251791726 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.19922268 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.168174808 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.964094247 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.195584717 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1746514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.199932198 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.334577463 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.228958934 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.201792561 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.198330109 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.177740968 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.254184908 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.302349062 seconds)
  done (took 63.495975991 seconds)
done (took 114.326693852 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327914394 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262740884 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.406531445 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242572677 seconds)
  done (took 2.314522957 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.34736212 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.207857787 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.301155615 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.18962977 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.307299692 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.165728687 seconds)
  done (took 2.548693797 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.242125762 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.235698479 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235706999 seconds)
  done (took 1.746538579 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275796105 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.279828671 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421602635 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.334774834 seconds)
  done (took 2.408894385 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.340416543 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.183952861 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.222862558 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.290708197 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.308080867 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.279772449 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.189646532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.245212048 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.227053244 seconds)
  done (took 3.353088615 seconds)
done (took 13.404971121 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.210662962 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.224809664 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.187256145 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.206953412 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.198024693 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.228931556 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.195712388 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.222756888 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.193680356 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.210222822 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.192389409 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.205153323 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.28565071 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.195525074 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.206630955 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.193205924 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.207690098 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.20387446 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.225241073 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.205070701 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.199118896 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.204518885 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.179544829 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.211384283 seconds)
  done (took 6.017064181 seconds)
done (took 7.050618937 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.269887602 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.186443192 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.176195031 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.207355419 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.27735196 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.184668525 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.220776259 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.177324365 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.217580322 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.176995972 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.195493296 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.189779789 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.2072582 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.277153889 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.180154264 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.19732223 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.168306319 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.215472023 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.193200267 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.222124964 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.280398995 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192266768 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.214992633 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.1686183 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.284367167 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.198177087 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.17745441 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.206451533 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.191726476 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.204295044 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.178444409 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.194620978 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.194559098 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.221308031 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16857416 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.204295043 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168399767 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137213398 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.208735412 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.178284403 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.219291014 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.178001336 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.209321521 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.195515785 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.182832747 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.205276104 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.171111704 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.208380968 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.168274191 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.205987088 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.171963767 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.22144485 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.177663304 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.194955798 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.168145614 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.196326851 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.189807516 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195127537 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.195526959 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.195718673 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.173288656 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195097365 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.182739509 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19562334 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.17978655 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.196754419 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.181442347 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.206570473 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.177817235 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.198597531 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.171733012 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.204947361 seconds)
done (took 15.265001227 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.177508537 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.240961648 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.279579826 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.253929777 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.242995146 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.218183961 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.181947858 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.220812088 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.181963712 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.214860982 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.203303647 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.231528255 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.28871332 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.212180054 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.186666196 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.210275622 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.180681357 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.202699589 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.284165536 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.194717638 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.222111275 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.187017288 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.225804902 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.186231783 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.201536871 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.194958032 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.203895691 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.208043774 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.174233608 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.218109859 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.196248629 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.200628795 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.176388352 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.219125979 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.190503694 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.211365565 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.185474564 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.211344334 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.173139335 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.203262998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.178596245 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.218622843 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.200239151 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.186864336 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.210898677 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.189761282 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.208470783 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.187146634 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.200812826 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.181420696 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.202146655 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.19777962 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.21577276 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.192114375 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.215718843 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.18589892 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.215681756 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.185519681 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.206503146 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.185102869 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.203126808 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.174021222 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.203819494 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.222379885 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.177743692 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.214337382 seconds)
  done (took 14.599944867 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.19669701 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.234189627 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.184320157 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.27378314 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.181529788 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.199364737 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.167245989 seconds)
  done (took 2.499572048 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.174641203 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.294098293 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.291191918 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.292239048 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.286588889 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.298303716 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.194180978 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.198999258 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.206825673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.21304483 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.294065607 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.321409308 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.1795046 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.216937153 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.294920046 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.169696439 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.293234845 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.278285039 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214081483 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.292060813 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.189732996 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.233051703 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.182946309 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.200135786 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.286665923 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.172690257 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.341863585 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.21908205 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.179778657 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.214695738 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185312531 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.280888862 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.290672648 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211938543 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.180318252 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.293028464 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.28888031 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.184000843 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.301470319 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.207617323 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.289470469 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.185033865 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.216189713 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.186965255 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.21645071 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.276803426 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.189591078 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.218460113 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.183626144 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.294597588 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.21534987 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.290640311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.183018804 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.213220969 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.182346093 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.217927992 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.193032717 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.216001491 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.299098161 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.188750399 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.291726064 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.293783169 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.292615352 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.293072953 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.194500781 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.29101487 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.28385139 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.214697972 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.290214558 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.18720991 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.296430573 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.212875674 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.183876664 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.286270971 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.217205763 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.295092972 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.265979843 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.216681604 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.192635041 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.207433292 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.183248163 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.203734009 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.297585957 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.185667325 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.213718798 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189098209 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.216044512 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.213760004 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.256305638 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.229005239 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.216318151 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.183524036 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.222618812 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.186462258 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.219719631 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.300503367 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.182340366 seconds)
  done (took 23.888607414 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.179163566 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.171633138 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.208213628 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.201262186 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.174291647 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.200406211 seconds)
  done (took 2.236432301 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.213477845 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.21653403 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.197021912 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.216376748 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.235941177 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.301141088 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.310151801 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.214470709 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.204514694 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.229139962 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.302886352 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.304013101 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.301684104 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.190014805 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.303788981 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.219978602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.308966035 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.185244855 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.226196572 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185562005 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.218097497 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.189999162 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.214896741 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.294905518 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.187210538 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.22236885 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.17926721 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.229829506 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.223193257 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.182585439 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.219373358 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.188274012 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.208323628 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.181220252 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.305172536 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.21141641 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.182522792 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.220157186 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.18960351 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.218218812 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.306143121 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.184371351 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.225310006 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.189764704 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.21191829 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.178691438 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.220175554 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.208674581 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.304910213 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.194794044 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.220654596 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.188418513 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.21775702 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.191145746 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.209078403 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.180694976 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.219481123 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.309749375 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.191041752 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.211913331 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.187495072 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.221295948 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.180509337 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.223685498 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.216464887 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.190737942 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.209226956 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.191021009 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.21232274 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.189334203 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.21966264 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.189016983 seconds)
  done (took 17.021754862 seconds)
done (took 61.293954701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.81282529 seconds)
  done (took 2.909549462 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.21155302 seconds)
  done (took 2.31238309 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.249490386 seconds)
  done (took 20.3892451 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506098855 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.426195677 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.11421634 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.250699548 seconds)
  done (took 3.398443895 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.177779101 seconds)
  done (took 2.296183474 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.47223135 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.348776545 seconds)
  done (took 1.929188761 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.913096352 seconds)
  done (took 2.034359467 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.835880526 seconds)
  done (took 2.947807399 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.370414702 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.288663384 seconds)
  done (took 1.780159474 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.691046536 seconds)
  done (took 1.815578433 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.417845523 seconds)
  done (took 14.546310673 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.327103956 seconds)
  done (took 1.459341303 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.363670617 seconds)
  done (took 1.498112714 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.883721317 seconds)
  done (took 5.02001295 seconds)
done (took 65.453200161 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.192782896 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.219223967 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1922132 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.216147249 seconds)
  done (took 1.934217264 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.196845423 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.216273801 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.192845612 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.214983903 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.194517893 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.215457147 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.18713937 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.218543993 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.187687275 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.216994424 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.187605771 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.21437789 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.190927701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.215044106 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.186851065 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.217923313 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.191537905 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.215960564 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.189492881 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.217014189 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.188559243 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.220620793 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.190900952 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.219940748 seconds)
  done (took 6.013322575 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.188749072 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.176901476 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.21290375 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.177028098 seconds)
  done (took 1.89018394 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.202878732 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.231429779 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.20083783 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.224473168 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.203053755 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.230349055 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18750031 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.214051173 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.18823518 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.228813385 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.203208941 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.233302503 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.19963663 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.225329212 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.226649841 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.185372106 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.220248329 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.20238258 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.226591524 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.200377925 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.221220869 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.196839347 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.21762076 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.198899804 seconds)
  done (took 6.210332823 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.266766814 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.232487036 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.214438302 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.265680154 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.247883896 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.18658518 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.245004689 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.193570635 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.224306387 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.188593885 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.219330894 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.234724751 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.225590838 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.190148691 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.220506881 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.223679142 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.197665569 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.22281353 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.230196941 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.225555918 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.19387647 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.230438662 seconds)
  done (took 6.024641611 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.278520683 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.214943604 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.177377095 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.210316619 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.222726298 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.183744315 seconds)
  done (took 2.433783584 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.183629077 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.172689558 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.206435608 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.173026472 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.208488733 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.173518365 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.20393606 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.173846409 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.204694046 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.173767209 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.203893596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.174531412 seconds)
  done (took 3.400522441 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272723368 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225381035 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.356053448 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.472463153 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264152375 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260574267 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.381100977 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22926407 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.279812188 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238477952 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284251929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232025735 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255343295 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291598883 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212180823 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246181725 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274634645 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31154283 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213288506 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317613713 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25953901 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.281240722 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.293114229 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218921274 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243721356 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262302071 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.192406171 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229056223 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266748795 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233797328 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278566918 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254229116 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243390169 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256754997 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330148128 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28133403 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.400786999 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209204467 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.264563322 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.299085868 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.333952174 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211205 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.327085798 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224205536 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233497709 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298357075 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220664863 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.29086995 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.236098669 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215441153 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285347809 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28449777 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.274103711 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206654981 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.435769241 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206971221 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.243469857 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279165458 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2583728 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309299178 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284118114 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.223827206 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271695444 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29893571 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31664704 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.213776835 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.268694853 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193727219 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266615957 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313215598 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28679031 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260369563 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.293090064 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201231037 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27775648 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266786649 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256323657 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279247521 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277679236 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.221824507 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222589968 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236416167 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227212763 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.26076654 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224333485 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321178622 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202811335 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.277453089 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278888607 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222169174 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265493468 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265330389 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263092045 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220156139 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.189243269 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214978525 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.262049525 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258211676 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199584249 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254762774 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20968707 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.229158052 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254348266 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.19525367 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274837953 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.193059047 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264758039 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277302861 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.233007634 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.251880773 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251486379 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.264471411 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237694891 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.302525552 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234677747 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202640015 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.358192896 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245143395 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.239472561 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272261438 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.301960536 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209949673 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237557304 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235943761 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298191341 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246177534 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.307347534 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239387844 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207237108 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.227929404 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244403845 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263788083 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.264090985 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198421043 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.271933952 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292932293 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.227900141 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209518124 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288162413 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234298859 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195966889 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238137615 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206988333 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.245238798 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.251127396 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.210345603 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258530152 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27041679 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238859354 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261953004 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239015799 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277522512 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204452465 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.274546784 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218380633 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.222898456 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.278296423 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302837672 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201330281 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286756926 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.264985722 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280117464 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282771433 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201921278 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.287237993 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198914611 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.223870647 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265646211 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240892714 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268081856 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.298417278 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277926055 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.268742974 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.267643253 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220096285 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274735007 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.291676896 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260202153 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.211679991 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279703376 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274063413 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.191525333 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.226200972 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.199514966 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24206905 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231781081 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20990281 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287208101 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26872265 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.279100506 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274435108 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210439819 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.302742479 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.22663273 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231311118 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.284108964 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241558022 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.293899314 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263991671 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287134907 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243784283 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26573945 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.192400584 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227940858 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.205585291 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265943246 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239764149 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207707209 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245798715 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.297985519 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239176365 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256140253 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292679048 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26929898 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.309995775 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.191968616 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.268666707 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268874345 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241073603 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.291145334 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243365724 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.234716719 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.302411501 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244751794 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294147321 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24183592 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289532628 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301232161 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.271924942 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203012827 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249170303 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264809931 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210605971 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265219131 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245696258 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204160948 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253244773 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.209543546 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245855217 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293606401 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246782429 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279212671 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.227679372 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273317718 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229996985 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214772912 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280488322 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248929699 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.164466445 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26900397 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293853429 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221689504 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258242686 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274709026 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202729342 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.423982686 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288126933 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274626403 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208447457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242732194 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277419216 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231369925 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265118072 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292002146 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213934328 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315613179 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279390417 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.242526581 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204440383 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25287699 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253899885 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197428597 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.2581616 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.268622847 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.216210245 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293784915 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243248182 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247066474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285620329 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.251157777 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.219904501 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245684455 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.335631368 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276850639 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277726309 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.238839101 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.270582035 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289949441 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195401664 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232182738 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.204272974 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.289335327 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236081768 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28239017 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.235934542 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315286672 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252395574 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268939716 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245834683 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.200293976 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.276037337 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22100059 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316147605 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21244587 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.242233318 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292968051 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.186680653 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236685476 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233689703 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402695971 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250735236 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274301152 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165949315 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.390171683 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202002992 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237468606 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261965366 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242678277 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.241134155 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.263051258 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280820906 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247991801 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264485937 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208983419 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.281235833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286108031 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275178708 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281159846 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.217967383 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269714117 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262492668 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243642784 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25412233 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.252587637 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233014268 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305429063 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.28445391 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.237468955 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245336645 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28070916 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279370443 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277930944 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213472817 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290690946 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201095125 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27454413 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246310581 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197080788 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269117532 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.269689812 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236848903 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246031147 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280901294 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236514155 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201307583 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254794482 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274749185 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214420214 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.236652371 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295176363 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.203688542 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293742661 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321264037 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236530847 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242915736 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25157403 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20327564 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247805186 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249411395 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206044358 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.282590824 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253529028 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.237835901 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28190184 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272816536 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237977189 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262982115 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249684474 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.339974727 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.237011564 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304017152 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223481143 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304485927 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257289562 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284538627 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244297686 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260509804 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272632365 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220707814 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.332736098 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273665178 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.275563533 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205985482 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24930342 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21159241 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.241371546 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257503905 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242835838 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24958502 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.242983692 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.24349074 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253586577 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.252203789 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216178678 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312969617 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258493766 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294834559 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259241835 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247672766 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286649021 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280206652 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203578193 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.271581044 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280919452 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218183262 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262428832 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.242204543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.212143528 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325716489 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.232736021 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234922262 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287196438 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.280350316 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283034386 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.210490105 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289686558 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249180639 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252928602 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236589513 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.224286412 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282810824 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243364467 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.202314065 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282548221 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268486307 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.240363387 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.254386329 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.285895155 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272745228 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.233018948 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241622905 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364173544 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267584027 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.305198377 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.192628685 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246868893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253256996 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233482833 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.27703034 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282228627 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.204523983 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239468022 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.253217675 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223953129 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.230269156 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250074608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291067391 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266316618 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292946889 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.210112753 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.363340477 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215833801 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282062405 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.210293782 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.205555888 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248600608 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209109064 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251593097 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.285658812 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328241112 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.272567133 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.222651428 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244490728 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.201602662 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239983171 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235881882 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260330801 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280543985 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256858082 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.165227296 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215617991 seconds)
  done (took 124.318234815 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.300266675 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.307232156 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.306741242 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.321214241 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.302004117 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.391412763 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.361591652 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.343520569 seconds)
  done (took 3.912935158 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.258537485 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.249022729 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.250848799 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.193991917 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.224378184 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.540879954 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.242908892 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.197425803 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.272166244 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.228095347 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.19208532 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.656142167 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.229197861 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.226225556 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.231028401 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.190211479 seconds)
  done (took 5.647273022 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.37199514 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.65493992 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.478532011 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.379975275 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.34610784 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.295993855 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.924722481 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.274380911 seconds)
  done (took 14.001044058 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.252309389 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.285915618 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.444517421 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.382752234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.298572325 seconds)
  done (took 2.946828923 seconds)
done (took 179.852586007 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.20555952 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.233751024 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.202089037 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.238372352 seconds)
  done (took 2.14363293 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.241074371 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154010646 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.192097193 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152749312 seconds)
  done (took 2.014992409 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.478932411 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153891566 seconds)
  done (took 1.938169512 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.225612 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.245691369 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.212768328 seconds)
  done (took 1.978522688 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.216359776 seconds)
  done (took 1.50324116 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.200482687 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.196196458 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.319174107 seconds)
  done (took 2.004957684 seconds)
done (took 12.867816641 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.221929688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.051043851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.666830258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.209707533 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.834109841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.511017358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.505319706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.258928387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.31285829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186924538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.255394977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.77236819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.524597855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.961622424 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.509578767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.958234633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.807024133 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187979072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.229241233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189171822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.518866749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186262233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222986666 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188311027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.803990927 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.496067202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.224327899 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.006152319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.187995415 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.231901347 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.480553149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.22091224 seconds)
  done (took 24.187833244 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.193837219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.278960614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.244404683 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.225725352 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196564801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.224949556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199283303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.235221742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.323923175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.189445459 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.245164207 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.187739167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.22996388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.18897452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.247673535 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.188037319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.226568686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.189292157 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.230146515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.190722787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.245404321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.218416253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.193893442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.220473707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.193048571 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.239472702 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.188476971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.233866611 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188556519 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.23176383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.194332254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.224543917 seconds)
  done (took 8.295586471 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.234119366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.290365206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.245497001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.263783683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.277019864 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.194692914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.313494405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.260215004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.295660014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.225511778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.210288054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.224570806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.264199379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.189984634 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.246533166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.189945732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.22436666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.190011244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.230486782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.192435434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.245757928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.188610158 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.225693645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.191079746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.223863314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.210731826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.224070673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.23214202 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.193055345 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.232087055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.195401734 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.223383714 seconds)
  done (took 8.647033049 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.207902136 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.238458675 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.213448931 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.247742328 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.200748992 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.239186282 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.205802847 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.233496382 seconds)
  done (took 3.085431814 seconds)
done (took 45.506785116 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.216080131 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.241265667 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.210301254 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.239896498 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.27665655 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.234016351 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.207295914 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.23158769 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.20425691 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.24781175 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.190459765 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.233296357 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.209305806 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.237025183 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.314315459 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.205573139 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.320931454 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.317226234 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.197217957 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.24204314 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.19879176 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.317171897 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.240393279 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.198106268 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.294470337 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.194341263 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.307648131 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.238663032 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.201222446 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.226297772 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.316316133 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.200490789 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.234178243 seconds)
  done (took 9.233413271 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.299378364 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.236838497 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.199639912 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.234243405 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.200852287 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.234831538 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.335410809 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.198796509 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.233474662 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.199604643 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.232874446 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.282483757 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.246453687 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.194502528 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.236895348 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175556682 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.337312587 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.234559297 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.19276299 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.15775358 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.75590199 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.201388459 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.348015834 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.230778719 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.199387506 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.233498478 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.200514465 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.238077482 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.202004319 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.235101894 seconds)
  done (took 8.82295081 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.208307984 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.246602937 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.218961713 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.300663723 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.229138566 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.247474068 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.216981014 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.245539325 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.220926698 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.229744788 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.209617578 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.264310497 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.245296696 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.204314389 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.227322483 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.208902124 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.243643483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.194283226 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.234611957 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.211548061 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.247371192 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.210334778 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.250867726 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.204000174 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.226290648 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.204715558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.239057914 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.203881932 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.236733037 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.209032308 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.229698484 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.196933004 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.230132128 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.22792221 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.230872376 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.20791373 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.249786303 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.207741082 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.240945374 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.225866641 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.23119197 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.195089823 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.257597841 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.28774092 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.195680959 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.239901108 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.196760775 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.244567622 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.191642667 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.246244093 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23733046 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.230089804 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.214744138 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.229138356 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.191622971 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236198611 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.193965936 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.231553119 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.209720664 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.229599658 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.214742532 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.23619058 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205706955 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.230598667 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.20688371 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.226727645 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.193262146 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.232341208 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.221087682 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.236289964 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.232121278 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.228837131 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.206158618 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.243752226 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.206321628 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242825152 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.193717931 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.241776207 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.204944078 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.234629767 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.207414574 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.232830935 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.196090229 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.246604334 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.214840588 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.245055673 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.20565164 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.240192276 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.196457664 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.231295055 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.211789222 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.232616313 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.198394922 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.243776879 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.195036464 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.235079056 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.204851748 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.238951755 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.192351206 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.257430502 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.197746027 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.230572896 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.221346443 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.234508174 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.198625747 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.239453425 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.237429285 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.231264395 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.203225703 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.241254073 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.194055473 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.238406714 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.196001042 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.230357087 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.21168027 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.246905001 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.202185976 seconds)
  done (took 27.517452814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.416945758 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.404788835 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.299141881 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.455653474 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.24610874 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.328537938 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.403781026 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.407007274 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.232319277 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.229029404 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.288328634 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.37136552 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.232033626 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.222907885 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.44511617 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.454912318 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.262969265 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.232574966 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.26812837 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.243466226 seconds)
  done (took 7.790697267 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.207497685 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.264709919 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.218287396 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.24720923 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.205855717 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242565832 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.195821759 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.250598627 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.206525494 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.237916079 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.198454496 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.236497462 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.20874079 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.244783222 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.210204174 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.25518287 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.201795005 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.235767062 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.217069154 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.235311278 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.214381451 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.258400038 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.239198085 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.217543446 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.247968544 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.206293901 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.228470184 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.200475843 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.236714459 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.205060364 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.232963912 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.203466307 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.23629192 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.171550097 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.207286555 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.24725316 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.20221503 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.232893931 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.200533532 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.232199779 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.20920747 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.243787147 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.20441964 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.23911637 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.214556474 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177236225 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.247786608 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.20710846 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.208077298 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.21538563 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.244891407 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.20961667 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.238064282 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.216594791 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.23718498 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.212431692 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.240959203 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.209373552 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.236590352 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.195151562 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.228547918 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.198599417 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.238132027 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.209067647 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.241956955 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.205226516 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.240297807 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.196073676 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.234724262 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.198468814 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.232350706 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.208649926 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.252310298 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.205580263 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.237165913 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.206738581 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.238903774 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162038343 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.239750809 seconds)
  done (took 18.871030038 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.2246352 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.242275362 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.21286387 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.26227148 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.208191978 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.236488104 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.206480587 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.247964004 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.210814238 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.24951043 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.210292524 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.244689216 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.217604068 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.24260606 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.206078231 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.248027699 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.208324187 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.26983997 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.207443558 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.257273918 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.211000086 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.237370269 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.208817336 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.243734765 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.25978115 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.208744352 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.258440756 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.209257057 seconds)
  done (took 7.805422812 seconds)
done (took 81.339330024 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.537409052 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.776285308 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.450492342 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.458384198 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.49599778 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.481826145 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.453195829 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.457425138 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.065916832 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.428467335 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45562414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.454287449 seconds)
done (took 31.914125394 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.516032241 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.233457761 seconds)
    (2/2) benchmarking "String"...
    done (took 2.228757093 seconds)
  done (took 6.110637184 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.213557045 seconds)
    (2/2) benchmarking "String"...
    done (took 2.224125778 seconds)
  done (took 5.784066186 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.444730786 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.444052627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.923727801 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.442734373 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.46148599 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.442839694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.458370719 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.450379899 seconds)
  done (took 17.965632223 seconds)
done (took 36.168173621 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.491814287 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.787028783 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.729353852 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.43384651 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.454668153 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.454552426 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.444061986 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.513032628 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.458191366 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.431639387 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.005642547 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.754228454 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.452993569 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.896883955 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.432321386 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.449627917 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.442325592 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.855125642 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.452946147 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.430028219 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.43929469 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.426143366 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.467920955 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.460602217 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.46157385 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.456374445 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.444470767 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.448875238 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.773131625 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.459541747 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.426673532 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.463724403 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.450925149 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.446447764 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.452711619 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.460329837 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.813818433 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.464563964 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.435700588 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.463236282 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.797202005 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.450458749 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.448359949 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.459231094 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.434310257 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.446767498 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.431386072 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.639710679 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.466164727 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.459802046 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.544849243 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.875198655 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.463094085 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.45744155 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.454915182 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.830921516 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.453979867 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.596654156 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.480828603 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.447010545 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.447335446 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.450254952 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.5067613 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.469139407 seconds)
  done (took 160.943571599 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.447355422 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.446506012 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.447003631 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.467724283 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.447507396 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.446930018 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.448794571 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.450671905 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.44880805 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.47069568 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.447458228 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.446503917 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.444366424 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.453996629 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.45616541 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.485242712 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.448491879 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.45000073 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.455839322 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.450739231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.452042261 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.44777419 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.448733739 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.449845543 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.463557971 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.552806471 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.455452471 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.468545616 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.455791062 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.450738044 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.488516801 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.475596582 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.260292737 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.405952601 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.451180559 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.476739396 seconds)
  done (took 89.612755857 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.450065053 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.448511783 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.451330927 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.449542152 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.490990509 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.448437821 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.123975123 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.098900217 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.523841405 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.664883782 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.058220253 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.780180147 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.44853539 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.549241702 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.461771221 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.45080579 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.552803607 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.47563723 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.447379796 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.451324432 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.127717917 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.464200511 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.624594302 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.647773505 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.446971154 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.49043611 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.858297553 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.453783753 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.489707176 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.805966108 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.490028096 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.452694717 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.863408608 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.39855627 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.448956393 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.573105909 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.455339538 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.491793894 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.450265149 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.751190357 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.451992603 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.454526166 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.456408807 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.453602515 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.452283981 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.127555536 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.452111613 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.518064762 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.177199419 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.450990661 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.451461251 seconds)
    (52/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 1.861306386 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.970167087 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.328623214 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.451905372 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.453984895 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.457922548 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.453448934 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.457152617 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.495682447 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.926036754 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.426986561 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.453223277 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.459521634 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.495991704 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.456825341 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.454207829 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.453951442 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.875444706 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.519364928 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.608272323 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.133273023 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.454551658 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.560656282 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.581038692 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.451935823 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.456053316 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.455224858 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.454108235 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.577223193 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.455222693 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.936566933 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.647978071 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.454908197 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.078468288 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.560633094 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.455583563 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.927991612 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.454512896 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.457146541 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.297020103 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.557872898 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.451640184 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.454480629 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.455087481 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.943159672 seconds)
    (97/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 21.580602953 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.10650677 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.8816911 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.457191099 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.971748294 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.456401195 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.955173908 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.113807978 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.184715249 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.453058102 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.57541151 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.650039435 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.456569093 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.458957526 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.23182564 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.457975347 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.52428343 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.453690655 seconds)
  done (took 402.154835412 seconds)
done (took 654.054159837 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.437941515 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.442642252 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.464435386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.439734829 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.442849751 seconds)
  done (took 13.583524414 seconds)
done (took 14.936316134 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.462733005 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.455461829 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.459754763 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.319188216 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.460910148 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.463737113 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.470158671 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.47626692 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.460826897 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.482897511 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.301736135 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.472776601 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.456455671 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.482596634 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.274889635 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.475450335 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.426314757 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.459679475 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.479464812 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.872937753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.467317876 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.590072034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.831322894 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.534362575 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.860789071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894054754 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.467058066 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.691277082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.532468619 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.510690989 seconds)
  done (took 21.609856673 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.378635579 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.860017674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.469265959 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.595410562 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.857944995 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.534606251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.886923609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900319657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.472650747 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.704364082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.515228158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.510584272 seconds)
  done (took 21.665164474 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.22800553 seconds)
done (took 95.581056085 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.524267995 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.610888228 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.519479258 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.500750689 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.498168447 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.500269273 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.503476036 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.503852131 seconds)
  done (took 13.51837374 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.500013025 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.498170892 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.498293603 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.499031825 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.501021743 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.497438676 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.496714562 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.498160416 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.497972333 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.501184334 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.497535476 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.498243946 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.499680441 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.49924526 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.500941775 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.497905914 seconds)
  done (took 25.338731623 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.503109648 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.502212607 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.497466054 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.497891387 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.499798543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.498955488 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.500258588 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.497985113 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.497824409 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.500385768 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.498859876 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.499451711 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.499008359 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.501272474 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.500564073 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.501953007 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.499908263 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.499664238 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.501928772 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.497731729 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.501791115 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.500343584 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.502179013 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.500782257 seconds)
  done (took 37.362150174 seconds)
done (took 77.576693868 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.464871964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.460484186 seconds)
  done (took 6.282522938 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.603612024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.602709465 seconds)
  done (took 4.567061356 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.501581242 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.503206099 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.502100931 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.501085648 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.50470161 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.503007749 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.504468341 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.50280095 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.505072118 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.50436749 seconds)
  done (took 16.391305906 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.5005214 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.502991197 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.50162573 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.504986284 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.502990709 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.501780428 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.502290759 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.503375954 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.502709876 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.503726067 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.504160969 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.506289102 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.503325318 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.505674709 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.504036652 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.502172239 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.505873966 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.502915489 seconds)
  done (took 28.422818782 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.524425139 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.527795399 seconds)
  done (took 4.414254564 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.684664719 seconds)
    (2/7) benchmarking "second"...
    done (took 1.584200896 seconds)
    (3/7) benchmarking "month"...
    done (took 1.670315757 seconds)
    (4/7) benchmarking "year"...
    done (took 1.656094884 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.583781778 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.532707756 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.582321886 seconds)
  done (took 12.654641488 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.507465859 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.858540042 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.053796646 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.720742352 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.493510034 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.518865423 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.44890499 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.519928197 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.518926743 seconds)
  done (took 17.002627919 seconds)
done (took 91.094593735 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.467299578 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.475485954 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.480336012 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.483710533 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.891636849 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.48830155 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.46534493 seconds)
done (took 18.119146855 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.468865559 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.452261283 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.452638356 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.481497193 seconds)
  done (took 11.21747165 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.476423713 seconds)
    (2/2) benchmarking "read"...
    done (took 1.872959264 seconds)
  done (took 5.71035807 seconds)
done (took 18.295205417 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.507510138 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.507665884 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.505953446 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.50780822 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.504452207 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.5046801 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.506674836 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.503513959 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.509085967 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.5056833 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.505442417 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.505818722 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.503894804 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.502530315 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.505997306 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.505802449 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.505220182 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.506742233 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.508261909 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.505440322 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.506869135 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.503726207 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.507138862 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.507136976 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.505551369 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.5065501 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.508826367 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.505918874 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.507994767 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.507698221 seconds)
  done (took 46.548587709 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.511668768 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.504901985 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.508286424 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.508448735 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.508502862 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.505925998 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.51488454 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.506463706 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.508719509 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.506478443 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.507473541 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.509446767 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.507320449 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.504752874 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.505901344 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.507652824 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.505990881 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.5078965 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.508626202 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.507638995 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.511108989 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.508147021 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.508606716 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.508942792 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.509592246 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.50551149 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.507116163 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.512081809 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.506653814 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.509158881 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.507227979 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.509536443 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.508810024 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.508221541 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.509002157 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.510046983 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.513888743 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.508391674 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.509632964 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.50985471 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.510273199 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.511230094 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.507239573 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.506702075 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.508308913 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.509515282 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.50852137 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.507732443 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.509532392 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.513265758 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.510230666 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.511604513 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.50897897 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.510430133 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.509343542 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.510928031 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.509464367 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.509131853 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.51110857 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.509876081 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.512141942 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.513065244 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.509709231 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.513718609 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.512483326 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.510590209 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.512500228 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.511409377 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.512285536 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.514525276 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.510740437 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.512872901 seconds)
  done (took 110.046243942 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.50944544 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.50988523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.515371054 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.514854507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.513398317 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.511389263 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.518804801 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.512542272 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.511235332 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.509098748 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.512343016 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.512098082 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.511353574 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.511234145 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.515077231 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.510321319 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.511271091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.512760526 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.512317663 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.511260056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.515947943 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.515449276 seconds)
  done (took 34.648379519 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.515325518 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.516233175 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.515017727 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.513802139 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.515411003 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.515109777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.513660851 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.512096056 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.514352629 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.513788451 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.515205321 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.512581733 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.516385429 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.514032546 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.512333866 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.516441371 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.512753333 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.515819156 seconds)
  done (took 28.634316767 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.515014374 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.513809821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.515457308 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.51274558 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.511855034 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.514341314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.516184007 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.516283949 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.516155301 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.517056114 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.515251136 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.516266978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.51921435 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.515026107 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.513503638 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.517453582 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.517761651 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.51570692 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.516244209 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.517233232 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.515767473 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.516818165 seconds)
  done (took 34.716122421 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.51851496 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.516269353 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.516521689 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.517079162 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.513826584 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.516379352 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.514646661 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.515314412 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.515405904 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.51534186 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.515695885 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.516707747 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.517778622 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.517319555 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.518640813 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.517986052 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.516440463 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.51856755 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.521049499 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.514287397 seconds)
  done (took 31.708397696 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.518889099 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.51890174 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.52011202 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.519628369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.522519658 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.521497531 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.522839252 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.521305608 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.522598509 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.52336823 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.522384585 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.519682776 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516300013 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.520911284 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.520087366 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.52160823 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.521104674 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.521373633 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.518974724 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.521834236 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.519415633 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.519630115 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.519908293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.521569119 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.518164495 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.518308578 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.519818197 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.522838344 seconds)
  done (took 43.948902791 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.541210163 seconds)
    (2/2) benchmarking "in"...
    done (took 1.548401511 seconds)
  done (took 4.464580866 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.517162063 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.523780085 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.518544363 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.517686013 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.519406972 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.516267536 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.520721944 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.520704832 seconds)
  done (took 13.53167613 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.514189619 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.51944755 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.520260642 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.521938788 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.524303335 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.514760222 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.532725635 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.528672885 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.521125696 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.51794247 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.513862831 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.516790927 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.521486985 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.516109486 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.516734775 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.53220434 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.529138726 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.521046846 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.527658021 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.521808325 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.522134065 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.519097156 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.522696497 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.52659818 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.516433689 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.531215457 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.530899914 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.526864485 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.51705807 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.527703767 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.517287918 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.523385061 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.523304745 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.523411113 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.520859112 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.524955234 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.531441184 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.523135659 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.529954962 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.530530594 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.527091119 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.521925938 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.523665125 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.52365835 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.525381614 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.527134351 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.52757924 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.52207896 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.515983003 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.517605975 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.523954548 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.515654679 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.525252408 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.53173319 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.526913234 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.538525464 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.5330446 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.517607162 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.523304884 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.536157915 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.544924672 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.52742133 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.535619858 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.528622111 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.528313482 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.529892594 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.535525153 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.533034333 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.529297196 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.526480777 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.534996803 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.550265506 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.536497972 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.530208136 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.528004853 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.528027342 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.520572833 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.53095425 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.537877617 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.53538121 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.528005622 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.528338206 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.530459914 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.526304916 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.525136402 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.533708581 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.52703818 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.529426193 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.524269462 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.538537338 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.542898576 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.529233432 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.522542217 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.524839088 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.524899989 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.532772917 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.522599207 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.528662619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.528770035 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.526117253 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.52622851 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.520104058 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.534503724 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.535053654 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.531434898 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.54267313 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.536412975 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.526929647 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.545688666 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.537996067 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.529821844 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.523029849 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.535436106 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.5330446 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.52370738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.533079661 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.532078905 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.532805603 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.533795813 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.529187406 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.533554931 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.542794932 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.535075445 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.531863095 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.528114085 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.536050709 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.530525355 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.539482081 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.534493178 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.531034079 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.531635482 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.532140854 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.535668817 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.530851304 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.535609661 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.532079114 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.53484448 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.535200321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.531300873 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.532866784 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.534195026 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.5373265 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.539944151 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.542892501 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.539581046 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.538599566 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.549796521 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.533838905 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.538965674 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.539471605 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.536432881 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.529139564 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.534852442 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.537127661 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.526578764 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.535583052 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.52496536 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.533063527 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.532258886 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.532024149 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.53239766 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.527954846 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.533638601 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.540457205 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.541929529 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.536590582 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.542835301 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.531828873 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.531008238 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.528987311 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.534704168 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.525504116 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.530464454 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.537298773 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.532752104 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.53313714 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.538618493 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.540697458 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.533013172 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.534322206 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.527696643 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.538915319 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.538829554 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.544646564 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.548544057 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.534323604 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.533205165 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.53249467 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.532423362 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.536109864 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.526617666 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.540660513 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.55363828 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.547804927 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.531274892 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.537063268 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.52461811 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.537461713 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.544832621 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.542368132 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.539027763 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.538769071 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.530437495 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.540877649 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.53612069 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.542075288 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.528348681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.538338989 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.53818003 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.533712283 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.536500277 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.531448867 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.540110792 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.541011116 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.535719172 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.534986747 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.53425921 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.54048563 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.527413576 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.531489863 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.541847186 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.538874392 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.547096177 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.543869511 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.539054164 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.548398508 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.541824697 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.536472969 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.541430373 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.541908367 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.541408374 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.551766325 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.540888614 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.541596875 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.554979024 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.542327624 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.533486975 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.548891238 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.547288591 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.540104646 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.532680797 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.540644589 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.541566703 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.536952499 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.541813383 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.536982042 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.545330799 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.551694248 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.548843607 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.535197597 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.544772488 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.539295256 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.547550775 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.546348038 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.548288019 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.542734449 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.551573004 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.550552692 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.536761344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.543142742 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.544330812 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.54306878 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.545085028 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.535842931 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.540843427 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.547186692 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.545221777 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.548513327 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.538785274 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.542047561 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.534382061 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.541807656 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.54469685 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.567026785 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.557434364 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.557019158 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.557770371 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.545060304 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.554506827 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.543615288 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.540574259 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.537770551 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.54301151 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.543560672 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.540786436 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.548185073 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.54601671 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.550851683 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.547971778 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.54215351 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.545803346 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.539975789 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.535153388 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.547380501 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.547514387 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.543263986 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.539101236 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.545423199 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.546517683 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.55219494 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.545141809 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.540220932 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.560453184 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.549642382 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.552820997 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.546840908 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.538595026 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.541469554 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.548466743 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.553319664 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.538333471 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.545434514 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.541415427 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.551666452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.542333631 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.558530103 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.555207893 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.541370939 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.549097619 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.546460831 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.535592759 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.541463059 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.548071511 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.558185437 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.555740294 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.539600322 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.54770687 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.542434482 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.545762209 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.547805696 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.547693321 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.547424083 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.547747936 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.55859352 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.549886687 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.547057765 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.556873678 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.56003211 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.546213873 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.548640787 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.544016527 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.56231592 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.555403518 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.550898617 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.557886376 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.543494742 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.550511835 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.548531975 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.550623302 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.550165632 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.547693879 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.560822853 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.551494642 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.547847739 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.547982394 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.560917209 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.559111323 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.562068333 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.557530814 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.545047174 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.552668395 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.549761041 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.545654584 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.546001695 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.556818573 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.555000605 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.540163592 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.552923455 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.551556103 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.551913341 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.559625006 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.558537158 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.540390995 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.558742211 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.557288675 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.542222373 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.55091468 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.551856349 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.543629396 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.553351722 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.552245855 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.543413377 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.547675092 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.545083771 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.554649303 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.546797955 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.55463289 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.552425137 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.55558329 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.552973671 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.551421728 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.553656299 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.553127741 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.54571786 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.553841099 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.564968492 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.560719558 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.556084821 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.555061506 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.547893416 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.567079165 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.558544072 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.55445682 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.560524491 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.550790851 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.545246152 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.557708421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.55816176 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.554048109 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.554957583 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.560393748 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.546934286 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.549341505 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.562956434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.559103361 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.552847607 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.544927676 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.544858812 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.554357715 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.551795378 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.550311322 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.557652059 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.563961171 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.547801784 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.54880212 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.554256026 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.553619773 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.558447901 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.546416133 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.549203499 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.548680178 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.555483627 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.550543753 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.552900407 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.545000381 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.547215396 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.570091909 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.556733228 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.556802929 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.551501975 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.55791969 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.549887035 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.553217696 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.556253418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.552315557 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.556030763 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.558790821 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.557006446 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.55284188 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.550950579 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.556711157 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.566071775 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.558571659 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.546218133 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.570356259 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.570761966 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.559757215 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.549357289 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.557044789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.55563204 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.558990568 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.557244605 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.552592407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.572086227 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.570001325 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.560211812 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.561441158 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.557229799 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.550094115 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.558886434 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.559631291 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.564334333 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.563115952 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.562934295 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.5654622 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.557841818 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.554494744 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.548872451 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.554528547 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.554143792 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.552801862 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.557872757 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.560928663 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.560408275 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.564461584 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.561940174 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.555665005 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.555143569 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.553430433 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.548073048 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.560443336 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.551901886 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.568116379 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.556398687 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.550620578 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.5571587 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.55572863 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.551219746 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.552769455 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.562007781 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.558907316 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.553796052 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.56373307 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.570213572 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.564397959 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.556651442 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.554134223 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.5670946 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.563343216 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.556929202 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.559391945 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.553787182 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.57733885 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.564862543 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.555862027 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.560101951 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.57390671 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.564052594 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.5615462 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.560594053 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.565736258 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.560042936 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.558354732 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.557333094 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.570929236 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.565205952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.552759887 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.563906974 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.553395024 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.558273646 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.569231395 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.569681592 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.560479513 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.556938351 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.578618063 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.568897693 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.566468963 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.581238019 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.570476735 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.567571337 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.566539433 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.55349336 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.561399602 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.564250733 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.565824048 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.561356301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.563841464 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.560672694 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.555276338 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.569145769 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.572805313 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.56958961 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.560986282 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.552821208 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.557151646 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.561494028 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.560366022 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.563293488 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.559770136 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.560338364 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.560430765 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.554583721 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.583126807 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.581903677 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.569457192 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.560816288 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.56489879 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.570301503 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.568145991 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.560281094 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.565912746 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.563573553 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.561882974 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.568126226 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.567097464 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.559524155 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.557820377 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.556045919 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.556500586 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.56867008 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.580283917 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.580262196 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.573341415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.562977666 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.565947527 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.568275337 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.56538782 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.565094206 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.566682258 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.567913908 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.563274492 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.572123243 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.56995537 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.568489052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.565849331 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.570942646 seconds)
  done (took 922.629817405 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.569596734 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.566228289 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.566741623 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.565130035 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.567946594 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.56959422 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.567583978 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.572940176 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.567588798 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.569138296 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.56604293 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.560123673 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.564522905 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.566719623 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.563958168 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.566073451 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.566461769 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.56758782 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.566195953 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.566976988 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.566173603 seconds)
  done (took 34.316389536 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.566890733 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.565345635 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.565867699 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.568493381 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.56672933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.56830942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.567504778 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.570216856 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.568022931 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.568469077 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.569402226 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.571602087 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.566649293 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.570475128 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.571295903 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.567770804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.569925059 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.569495115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.568493102 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.570229426 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.571509757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.567968734 seconds)
  done (took 35.927092894 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.571303096 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.571176824 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.565102098 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.571403528 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.568660093 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.569825744 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.570368132 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.568795445 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.571611306 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.565687927 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.565442714 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.562615679 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.567802372 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.573373193 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.575027383 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.575116431 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.567955674 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.568690124 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.57455316 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.568842867 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.58151522 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.579129162 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.568635928 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.557763246 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.572363986 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.569552246 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.572371528 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.569984843 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.561285203 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.574315281 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.568883516 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.566436835 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.583048375 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.570126131 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.564515851 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.571081351 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.570279084 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.572377395 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.569741445 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.577989771 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.579865917 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.574331624 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.587361563 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.57930565 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.574079427 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.568335331 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.577679116 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.567257611 seconds)
  done (took 76.84036378 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.572859859 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.571249458 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.573547097 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.571465687 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.570665586 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.573600526 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.574544849 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.573328564 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.575322742 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.568869826 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.570482671 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.571762792 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.571715789 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.568656811 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.57193977 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.570044068 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.572477687 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.573488221 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.573540881 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.570939852 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.57526624 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.57428944 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.573913344 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.576240037 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.575200729 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.574218482 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.575220145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.572484602 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.570339637 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.57663052 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.574276799 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.576774253 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.581142057 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.573682939 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.572920969 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.573747262 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.575661263 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.574766317 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.573913485 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.574968786 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.575127954 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.572701808 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.577464006 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.575169789 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.575827625 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.575483656 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.578724083 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.571773617 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.5759048 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.572615135 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.577641612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.573894907 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.577236253 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.578040965 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.57588678 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.578212076 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.576028488 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.579216393 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.571196519 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.579488355 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.578209352 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.574845586 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.57592638 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.574176088 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.573846646 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.575468012 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.575635142 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.576830475 seconds)
  done (took 108.479479341 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.578869631 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.578393523 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.574839021 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.57742224 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.579064209 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.575950824 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.574071745 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.573084608 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.576526387 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.578339467 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.584103118 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.577295897 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.579208921 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.581087511 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.579528164 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.579057644 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.577067726 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.578317955 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.576801771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.577755104 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.575336291 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.57948179 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.577001378 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.578680501 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.579486749 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.580022013 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.58388214 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.580653657 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.581612858 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.579854044 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.580966127 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.580136413 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.580448603 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.577447244 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.578232539 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.577807206 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.57903271 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.578700615 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.576914006 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.579614838 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.584828 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.580425905 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.577232622 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.581117124 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.58222306 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.582036934 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.579365714 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.579186641 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.582531619 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.583050052 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.584180223 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.579949447 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.579553098 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.580440013 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.578931231 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.579608203 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.58062188 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.579805854 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.579114845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.578951275 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.578925993 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.579933174 seconds)
  done (took 99.339423822 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.579121968 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.583773747 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.584594871 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.582297232 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.583600889 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.581722857 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.57865459 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.579931289 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.580851587 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.579947561 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.580679429 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.584122604 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.580944755 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.58242169 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.584231905 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.583903232 seconds)
  done (took 26.735647111 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.582379854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.583605569 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.583731982 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.581573956 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.586233207 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.581257785 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.586275392 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.582648464 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.582015701 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.58287021 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.582515975 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.582431397 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.585812903 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.58209595 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.581539314 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.582876007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.584101092 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.583053543 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.585454756 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.58532122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.582211118 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.585816814 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.583120731 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.583825429 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.583134908 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.585159956 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.581900464 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.581870501 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.585106389 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.585126293 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.581919809 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.587333068 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.588795125 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.587058662 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.58861668 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.587290116 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.584988985 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.581774331 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.583236178 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.584579366 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.586580947 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.584373055 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.585476756 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.583650827 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.581807435 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.584312362 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.585099265 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.582334806 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.583617232 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.585207379 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.585515658 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.588758738 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.583012547 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.5874995 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.585829245 seconds)
  done (took 88.562611001 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.583246026 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.584746985 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.584256489 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.589275284 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.587693868 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.584263194 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.585128947 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.586528916 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.586703798 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.587098122 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.591987431 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.62925013 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.586114687 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.58351282 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.588045379 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.590228479 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.58621002 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.587237385 seconds)
  done (took 30.030673874 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.588778433 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.588461354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.588858332 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.591282104 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.590952523 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.589556955 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.593403463 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.589871171 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.589987875 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.593929577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.589222065 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.589504363 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.591947901 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.589332973 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.591540726 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.587771462 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.588935786 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.593770689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.58732343 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.587821748 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.586181735 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.588887666 seconds)
  done (took 36.406641237 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.578992553 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.58251388 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.579036482 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.603081719 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.589898688 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.579202984 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.586332732 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.582468204 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.60196789 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.614987772 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.610741212 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.589384935 seconds)
  done (took 20.530474861 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591856828 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.591086688 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.590113449 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.589574764 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590957132 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591161418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588396123 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593728295 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59076863 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594065628 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.590178123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594488028 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59501526 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592132142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591897127 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588481259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.589155576 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591654078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590618611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591580186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.589794415 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594074568 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.590675602 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593272022 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.593923222 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594893597 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.594811882 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593399132 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591478846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590946936 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.590912503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59506827 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590998198 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594209082 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596219813 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591423253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59231806 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59343531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594154327 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.590937717 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.589943386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.591017266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588474205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593151895 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590774707 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.592885799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.593343469 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592574308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592649177 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.594041603 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593907228 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594928518 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.592112517 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589521196 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.589546828 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590907195 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.59188665 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595043406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596648289 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.593615292 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591749831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594594536 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59500185 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596144035 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59415251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596991978 seconds)
  done (took 106.533757123 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592655812 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.592780409 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596253196 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59555646 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.592856606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592495945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592976942 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.592404104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.594852111 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593409958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.594255736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592850808 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595032162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596064835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594237298 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593710345 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.594757616 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595859781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592781038 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593418409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593696517 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.596827642 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595055978 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.602086551 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595979279 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.596707515 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594774866 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59527472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593332504 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597767495 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594197907 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594485025 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592968003 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.596034663 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596012803 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.59873815 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59849601 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.597763864 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597985959 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.598171946 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.599976156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599489642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595703825 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.59986853 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595834289 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597608676 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594873622 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598024302 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597206112 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597736136 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59857521 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597182715 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59622093 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600172759 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597152333 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599376918 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598876016 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.600711376 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604488113 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599558715 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601422919 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59720241 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599008994 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599871045 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599491318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595781629 seconds)
  done (took 106.806790936 seconds)
done (took 2042.750047737 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.565345286 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.559409894 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.589834992 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.795100202 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.586706312 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.265300846 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.151996493 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.584074693 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.59112126 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.589162979 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.596614905 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.56828281 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 11.128582133 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.582769429 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.593091901 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.563211076 seconds)
  done (took 58.750112428 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.633311261 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.608046037 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.753051139 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.594608714 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.630937566 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.868709282 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.673486552 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.600676454 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.822547337 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.603778316 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.563862905 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.627773686 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.599060537 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.574225814 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.620059227 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.867207346 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.961937897 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.585820725 seconds)
  done (took 34.628341426 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.21189587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.592677463 seconds)
  done (took 6.2482961 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.624562802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.597063006 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.604348011 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.595947082 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.565532042 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.564145273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.598398302 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.566823756 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.560635818 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.759420733 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.600327667 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.618943652 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.59569754 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.598945648 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.603300322 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.658200949 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.789443896 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.602797535 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.60441862 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.614573054 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.596883724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.843602179 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.653517741 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.604917846 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.759222524 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.564363876 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.61368188 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.622720529 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.811751131 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.607915364 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.597847254 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.603471922 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.602643185 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.588183665 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.239908651 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.570481973 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.634943732 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.614427644 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.607487168 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.82486467 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.600827452 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.613275263 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.575402082 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.228853334 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.784208732 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.902473911 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.572155509 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.6002866 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.603531916 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.812528954 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.600846239 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.601788258 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.710371689 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.572143287 seconds)
  done (took 101.125522948 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.602997839 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.569675586 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.839502775 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.588921957 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.566014226 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.566837026 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.562125114 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.987737198 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.621413519 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.566436905 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.977811145 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.367633691 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.571803928 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.63952532 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.616291779 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.621359113 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.570495731 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.566366784 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.584536274 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.567655356 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.27736481 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.573439262 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.564132353 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.732273287 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.639756005 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.275788492 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.574792018 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.569246759 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.565721312 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.565790943 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.342137922 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.581213016 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.638479866 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.569497141 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.977196751 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.134061182 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.097774515 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.573614144 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.617248534 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.570459413 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.570212176 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297280751 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.112588758 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.572078824 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.573738463 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.312100094 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.566064931 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.579588019 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.58118033 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.935852597 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.572836322 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.575555104 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.581431549 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.57378805 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.568585922 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.637406824 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.645988711 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.296615652 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575461098 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.581205124 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.612798527 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.572989624 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.57785372 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.57368196 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.573376894 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.11397909 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.745432782 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.578643625 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.102908896 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.332894218 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.574863535 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.409187369 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.573866551 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.586026547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.655446199 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.572568621 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.573661986 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27335159 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.570744855 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.573266475 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.082008753 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.571745821 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990898284 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.588444802 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.57342264 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.293372642 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.580145422 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.644836051 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.573131472 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.574099472 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.573911179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.579259555 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.985788835 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.591112529 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.57673605 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.577651879 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.606704106 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.573223871 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.574943713 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.583692242 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.412829732 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.57774826 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.579928146 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.582610051 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.576151897 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.571722843 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.576623605 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.577223891 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947342186 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.573697325 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.579150603 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.579616864 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.57414445 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.574222183 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.739476438 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.575248012 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.055669719 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.575969891 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575850812 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.573746145 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577370837 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.627193235 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.590379196 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.57762953 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.576557396 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.004963201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.593410028 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.574326246 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.577304628 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.57730386 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.576624723 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.580086825 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.622179748 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.578175898 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.544178279 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.590187551 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.596813324 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.577860146 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.587029608 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578216615 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.57324224 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581636184 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.004067976 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987063229 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.772873561 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.572845053 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.577733454 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.55222148 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.605268449 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.844447607 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.599258467 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.579221353 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.969277937 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.774457981 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.582370147 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.574441135 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.579576007 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959310887 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.58011127 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.011843406 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.36487056 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.582822229 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.583492077 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.549520718 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.430531843 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.580306058 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.582150216 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.998223867 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.594667032 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.580733207 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.580340698 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.584036 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.574028653 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.584379689 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.591078376 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.57957014 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.582353524 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.695270746 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.869544514 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.601680423 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.584912718 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.282304335 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.590948123 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.590552192 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.588026452 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.580048273 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.583828991 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.638309453 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.605871599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.589274306 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.58083259 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.592641564 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.316291967 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.591915005 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.581515149 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.862234087 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.499673387 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.583850922 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.58514522 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.581811137 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.632690163 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.310778207 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.635862703 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.039980014 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.592031221 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.654154694 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.584391842 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.627704334 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.305196353 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.594326904 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.585250332 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.495596473 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.578344285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.282304265 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.583934242 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.583615067 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.429098351 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.583083295 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.583437461 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.581279645 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.598310371 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.984320353 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.584234629 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.616571981 seconds)
  done (took 560.317951411 seconds)
done (took 762.510162869 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.584404483 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.576799955 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.583026864 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.579566369 seconds)
  done (took 11.780413208 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.625842784 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.613062108 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.62451992 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.611893244 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.626130948 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.613276521 seconds)
  done (took 11.175594677 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.585685651 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.581747861 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.585566782 seconds)
  done (took 9.214357497 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.932523612 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.592219443 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.105202205 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.588101881 seconds)
  done (took 10.680402375 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.624039412 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.622990256 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.623079164 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.625757926 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.627508219 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.628984663 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.624208847 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.624167291 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.624489329 seconds)
  done (took 16.084411014 seconds)
done (took 60.392375946 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.747581588 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.752608345 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.588901005 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.6592654 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.815234884 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.754136891 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.758305299 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.756032244 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.757085032 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.65596477 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.747437087 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.649160484 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.742839575 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.878331037 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.656252028 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.747970953 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.649519677 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.849074313 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.746406719 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.657055412 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.775927861 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.656996116 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.660509134 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.627402828 seconds)
  done (took 44.753960543 seconds)
done (took 46.215420482 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.646906077 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.775520197 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.618642357 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.614496089 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.634210118 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.589708091 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.647487016 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.622180446 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.643349619 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.640800621 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.587733189 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.625892929 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.645550457 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.631978131 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.663550092 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.621675843 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.624370669 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.630263179 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.644738482 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.646008406 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.623034606 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.632012074 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.653811005 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.623616104 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.639022393 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.635736151 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.631151979 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.593280612 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.620955919 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.641632291 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.606087059 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.62909613 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.650496478 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.629754035 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.620479531 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.634423204 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.630417807 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.774435003 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.653088497 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.63266481 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.635675738 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.650924605 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.637098405 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.634367611 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.634466506 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.660889209 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.642865828 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.649488737 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.606985148 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.588165785 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.651830725 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.64506939 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.633576239 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.611949886 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.606188609 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.647228045 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.634700055 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.65530505 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.632493769 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.637396208 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.66861191 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.652408592 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.644316152 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.643641136 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.632310017 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.649318325 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.636101002 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.651456237 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.635136912 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.638048177 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.632843744 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.635774982 seconds)
done (took 127.391870716 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.808808229 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.599931737 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.838496571 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.635081738 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.863714233 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.804161968 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.634821579 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.634496817 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.636563351 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.49478764 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.635471103 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.634238823 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.600616601 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.636179503 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.805655454 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.636588424 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.637157211 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.394784421 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.638837034 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.819340015 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.602139699 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.635512798 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.639656411 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.495246357 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.599654397 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.607669802 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.849900326 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.642313803 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.400907196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.609271542 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.601556246 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.397940478 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.819242517 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.656257545 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.647025366 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.645965245 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.860708474 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.637704906 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.807605213 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.811574782 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.843680122 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.676157003 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.604227675 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.602904182 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.63816523 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.63683231 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.639403098 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.667582309 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.599845693 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.635218836 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.398407647 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.650916991 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.637910938 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.638806932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.639079872 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.668951129 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.638285218 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.640551079 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.822688416 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.641482412 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.808783575 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.499386409 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.500134969 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.64180871 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.604706577 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.64488473 seconds)
  done (took 129.449547463 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.757234422 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.766442436 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.812980966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.636820855 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.726373305 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.817888922 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.633815306 seconds)
  done (took 13.624756961 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.64809701 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.642876933 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.727096721 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.728013597 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.642616216 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.865173288 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.641868145 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.655984117 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.640175472 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.726511171 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.647816737 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.641383517 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.650959734 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.607160171 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.726371349 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.65002002 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.804320648 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.636619643 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.642238444 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.846258103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.641860812 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.648561525 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.728371464 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.650082947 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.641321149 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.647221549 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.455997093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.644442006 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.643853035 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.641589339 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.642961581 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.753567266 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.640720583 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.605748189 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.639265789 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.805242901 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.641971231 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.641620978 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.643025835 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.611391574 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.643224184 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.640767167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.643955911 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.64377181 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.643149733 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.668855655 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.644525258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.641187123 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.64611254 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.64277266 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.726746816 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.643490698 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.638510595 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.643093161 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.727386423 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.653068592 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.642905219 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.643156368 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.646183219 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.64597153 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.849640447 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.728006544 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.644751263 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.73104862 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.642657491 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.646811162 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.64920134 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.649837385 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.786326948 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.645347499 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.727189749 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.643417365 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.878134853 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.669303198 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.647292788 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.64427306 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.6436352 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.645193708 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.606459313 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.65093969 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.642979879 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.643236895 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.653367093 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.643891378 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.647215892 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852203831 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.805284806 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.645367403 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.660604956 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.65206183 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.645708578 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.73019062 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.64460334 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.647333784 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.729606118 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.812954776 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.731676424 seconds)
  done (took 168.806426855 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.658184466 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.65839853 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.643225511 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.671174735 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.637328602 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.63810838 seconds)
  done (took 11.386843816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.638951643 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.652826732 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.647359906 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.64385506 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.646685937 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.647525639 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.651660661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.641270304 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.653604764 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.646637746 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.651592287 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.651545354 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.648165106 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.647358089 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.651868719 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.649961702 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.649094414 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.649427556 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.650017227 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.651665341 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.613000508 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.650736242 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.650405614 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.645335556 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.653283145 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.650717455 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.67361946 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.64415852 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.64903847 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.658453774 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.649958071 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.651653189 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.642968425 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.647327708 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.653543583 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.643799257 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.6533555 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.654039316 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.646900769 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.650183728 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.652129297 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.651249017 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.649415754 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.648842984 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.64312913 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.646268286 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.656904973 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.672939904 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.648792 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.653779157 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.650011709 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.648622845 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.651932903 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.650084693 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.649096858 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.640813961 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.656225627 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.65092649 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.650761385 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.644016183 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.653009087 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.655506542 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.644553124 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.653272878 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.649053696 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.653237748 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.643677733 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.655328377 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.652938129 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.652454269 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.662378295 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.652354744 seconds)
  done (took 121.280264833 seconds)
done (took 446.015673094 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.03743423 seconds)
  done (took 4.522125754 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.923514087 seconds)
  done (took 4.411463078 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.952116886 seconds)
  done (took 26.451619652 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.679953366 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.617123448 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.634440245 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.613480527 seconds)
  done (took 12.031016235 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.283962297 seconds)
  done (took 4.771761199 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.624028446 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.62886328 seconds)
  done (took 6.741441632 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.042647881 seconds)
  done (took 4.528560371 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.395726789 seconds)
  done (took 4.894226354 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.63917765 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.633524487 seconds)
  done (took 6.769884355 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.599971547 seconds)
  done (took 4.085733668 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.062496146 seconds)
  done (took 16.550164654 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.642128723 seconds)
  done (took 4.131998839 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.657724212 seconds)
  done (took 4.14545034 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.825497712 seconds)
  done (took 7.315358608 seconds)
done (took 112.835806427 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.614948521 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.617947786 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.618100807 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.616045099 seconds)
  done (took 11.953422359 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.770499168 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.772013746 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.773746578 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.760363242 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.761483566 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.777911912 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.68559724 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.688696447 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.748309334 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.745715708 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.782179145 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.76289422 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.774023568 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.687684866 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.74863249 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.780015462 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.752935971 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.776375683 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.690715558 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.763769332 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.651864039 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.763176519 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.75044131 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.653927431 seconds)
  done (took 43.310587891 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.234875399 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.773443117 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.858829115 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.737462005 seconds)
  done (took 9.092288691 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.818108225 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.824223109 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.83363911 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.867961351 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.900215873 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.831741802 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.687840891 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.684375227 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.672376913 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.82493989 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.893508315 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.813508757 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.045397044 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.656721082 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.040575342 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.657300415 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.658922758 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.82326293 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.87102075 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.896088253 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.656471748 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.82296855 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.829479782 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.811628559 seconds)
  done (took 44.910769311 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.670165878 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.679901823 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.659746048 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.679460566 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.658708136 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.65773818 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.660060403 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.668516367 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.655674091 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.657098504 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.655662218 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.679822553 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.658123984 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.657228548 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.670770703 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.660978327 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.658879876 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.672754196 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.674446869 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.658104638 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.658670561 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.672902189 seconds)
  done (took 38.114997655 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.620850528 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.6212415 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.059525237 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.962298278 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.623131195 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.62320851 seconds)
  done (took 16.002431245 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.752046123 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.942100528 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.647656032 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.105609658 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.231429919 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.647881061 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.648641353 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.005597639 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.391332724 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.361251246 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.717562478 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.746158433 seconds)
  done (took 24.690114644 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789539438 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631802131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.634959586 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710038267 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.630229305 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.626932238 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.717258179 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283060157 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.664758557 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990162715 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632360093 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794461572 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.974104249 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643703086 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632684506 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.607286094 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95175392 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339928073 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635027331 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631485051 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69614921 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645779187 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636111269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932127472 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635171414 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633406874 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.981896999 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632330969 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058583707 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009812351 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012974834 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636360532 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987004632 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23098028 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809401741 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926048627 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624206193 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.635629363 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.622179818 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.631208759 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645711791 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.639146221 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006724738 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638709643 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.634639433 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632763007 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273434282 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.663780639 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.638347027 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.634792036 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015835743 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794771668 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.664251858 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.634383534 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629231971 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633299109 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.66341942 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834595796 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361741811 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635470824 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6351249 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.634712208 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637283274 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634461967 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487276978 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.66180846 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.660789896 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664905782 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634457077 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.638227739 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689102923 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63743958 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.680036756 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638479935 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631517807 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.633533636 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638048456 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406356213 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65013456 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.637582755 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953168626 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636838455 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6352965 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.633068772 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.635809973 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.641300196 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666630163 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.612986609 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700709426 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291079892 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933461091 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688441316 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699427141 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946560593 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.614863245 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637885167 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.640743491 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642773987 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684625677 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292853022 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635882957 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.661396048 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975140205 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.937277918 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654203653 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.615048324 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296135144 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645636083 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.694236886 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.653670694 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931714012 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.481293327 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027756882 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639642513 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704565364 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.639547599 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.638661593 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648533798 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.67087372 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.643047276 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049754022 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.63891344 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63985518 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791570073 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64745475 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.641687187 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642199822 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642654628 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641251168 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.932740329 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63838998 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041343107 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.643939289 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641959987 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.644517435 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645783937 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.643134438 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.948504136 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650623379 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997546336 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640845879 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639546063 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637659999 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.944565366 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.646868153 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.672507866 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077464111 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656869634 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.65696413 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022701141 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704675085 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84088249 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705097834 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.657599686 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.981341622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.672356869 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.672086024 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644250431 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644520298 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641612806 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.671623117 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640459866 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471883959 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646383944 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.641053936 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64454579 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.685426198 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797902792 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674465028 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939141353 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.639928793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634717795 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.673867816 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.653734319 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952514911 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0216589 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.651364884 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896924253 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.299106332 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472265642 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69115451 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.644038254 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.643091206 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.643700012 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644224451 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6438992 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.642279301 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939517239 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038243341 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.638407021 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499408759 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648610064 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658337419 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.677722775 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026538431 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.677057816 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647349499 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.647239499 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646073568 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664219731 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028259809 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95130512 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.690222758 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645674915 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.253294012 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674266679 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645768153 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64537774 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702708983 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658285876 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398838707 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07457771 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63612377 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033244591 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.659841241 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.696469013 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.647361861 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648357379 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667871801 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.65575371 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680878274 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.945595526 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.663235248 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651485011 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372227991 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647023619 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425446909 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663074962 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.666713833 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.64939522 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307561248 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647497213 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649481404 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026410831 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301159945 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643737517 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297827887 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.647736909 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.649700426 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033820432 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967132622 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651435563 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.646505327 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037725258 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956118512 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707967613 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656942688 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649564166 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.620784808 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355570356 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663270308 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903949937 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311284696 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652780776 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.652512515 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.640505263 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.648859608 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225542438 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.649272579 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650206147 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660143374 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.655641266 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358946902 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.64746788 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65104948 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508350049 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.664925966 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.311046677 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649577506 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947922847 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036190775 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.02023721 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.652935335 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.671703992 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.985818169 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036525665 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654176065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.661127857 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.416106685 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.602105478 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.681338388 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652401818 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.653362275 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66437003 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078247311 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.65446884 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.650663258 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65929152 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652904605 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653968078 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.650951563 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659038415 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654031075 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354787924 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.649059703 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65527865 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655207412 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654840186 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992794474 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.699171731 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486557404 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974448077 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646704863 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715678788 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.680921086 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668144183 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.629581946 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.657476415 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653191862 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663742087 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961423865 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.662700892 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.629912296 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653794383 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951559832 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.655954224 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.659662028 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989279922 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.656865514 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.670083815 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65506731 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717329766 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661893108 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658219736 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.641156043 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719142287 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807853778 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954342728 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.04067291 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039899138 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234191653 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663998753 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658264364 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.70189156 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819554568 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661899604 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.660733673 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.656350504 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495446174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664982468 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51371393 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044844599 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659921698 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663905236 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655869088 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976737614 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657487031 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019303991 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658892587 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.653516554 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707869695 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671014799 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65759298 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958365446 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008857132 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658676428 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669750393 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657886663 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.659836841 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053076512 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.960275255 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.375804563 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439815217 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661265165 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657880238 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296975125 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009539272 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658701082 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656850218 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656332206 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.676807784 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.661396118 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.687695761 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677409188 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969858597 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039473106 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265395411 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03173127 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.691956498 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.618701652 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659610067 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994762811 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.585157582 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.956808265 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502018238 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.622118148 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000061181 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813406858 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96125471 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.660517723 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983025705 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.668557783 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658575368 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660344518 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660756581 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.658480034 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.036754884 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513307803 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002440953 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.689158447 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.669396716 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722878307 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.958692513 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967687441 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6673269 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970331563 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05545342 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665931331 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.660089666 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502048549 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052846176 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662919496 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.684993392 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996022469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664425693 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725779025 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.617210192 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.663829248 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442501941 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.965356209 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712203765 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661791699 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.623251043 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519798851 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.669216735 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.374800455 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665869592 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663561616 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019086226 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.693453406 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672298342 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032360749 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.694600619 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.66946551 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965303967 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.501635718 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.666278652 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.692744308 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669037941 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.665102595 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663323528 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674368857 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661662422 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666801274 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.233735729 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.661488308 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66311114 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700581198 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.676706234 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668571052 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.663267934 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663953077 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.68982173 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.670438887 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.647640667 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.670796475 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865420387 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375302683 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666044893 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.368854936 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.089609929 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.004520477 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664746753 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.638527008 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.691673152 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666190861 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6661829 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66304968 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.664832169 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452290686 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.667485788 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.050076899 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69735481 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.966168393 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963677644 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.680629499 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968316152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670145763 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71671642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.643747993 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668183573 seconds)
  done (took 1135.414813533 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.705939002 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.718264174 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.696822061 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.785310199 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.692420594 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.793175934 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.713424661 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.777870776 seconds)
  done (took 23.404069401 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.671369244 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.691529279 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.663957686 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.692358295 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.670098342 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.324223912 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.666077089 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.692189 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.715485328 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.667001858 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.668810817 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.497930708 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.693342079 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.668919002 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.669062386 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.695055565 seconds)
  done (took 37.881834346 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.008319494 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.880503728 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.513682152 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.737216932 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.669053516 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.670461097 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.084544131 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.681445385 seconds)
  done (took 30.769458882 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.703542609 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.705468411 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.710084293 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.709252203 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.708185029 seconds)
  done (took 10.059244964 seconds)
done (took 1427.091596531 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.699913376 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.69719229 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.69744281 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.69872363 seconds)
  done (took 8.317017478 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.644115428 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.643737377 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.644346463 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.678500038 seconds)
  done (took 11.13732305 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.19777934 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.425085131 seconds)
  done (took 6.147789045 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.67426598 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.51783708 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.507547712 seconds)
  done (took 9.226254121 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.064604375 seconds)
  done (took 3.588800503 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.159440667 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.240220772 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.663551838 seconds)
  done (took 8.590880726 seconds)
done (took 48.533144125 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.66132439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.430908707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.822914143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.677202736 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.84181529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.822010606 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.936762489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.679998134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.659263863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.694408974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.670796475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.829144195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.92542697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.437819502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.924876131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.437541743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.828137153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.669121053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.660024365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.665769788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.935580635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.675404254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.665175788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.672894507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.823876626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.811646928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.674365784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.431604955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.666140436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.675008464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.811199804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.667468189 seconds)
  done (took 92.308305199 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.669545129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.659413602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.658699336 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.657199774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.661903095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.667282201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.660260987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.675309828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.667069325 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.675543587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.660104962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.670111891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.664263591 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.659968632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.658860739 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.660215031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.660702664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.667423281 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.665554118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.667530697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.661133933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.662979768 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.65872385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.658995603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.690694745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.659741787 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.659668803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.660492791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.684129874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.662602417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.668971592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.666879985 seconds)
  done (took 86.813298537 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.681963048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.667103896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.682396623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.668412513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.671337256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.667420277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.666712366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.683734084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.661169971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.665727605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.661937877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.661905959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.663114633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.673769269 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.663851458 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.674839936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.663002677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.668654932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.684860763 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.673442762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.667287439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.677383765 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.663846569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.665788017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.685792027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.665911007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.66398646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.663479902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.667606404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.66639843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.690895888 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.670780272 seconds)
  done (took 86.984773694 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.997947505 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.703246202 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.704702741 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.677515765 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.708636971 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.704904164 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.677247086 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.004631454 seconds)
  done (took 17.710158603 seconds)
done (took 285.342155389 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.676479809 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.683816567 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.737393351 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.678275499 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.729630633 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.738018711 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.998634044 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.730906214 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.994375402 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.678792394 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.721760917 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.686315347 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.675679359 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.907813347 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.675433587 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.683319226 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.681957951 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.672323974 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.680120566 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.031834076 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.742564191 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.672672691 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.676016413 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.683052572 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.658507761 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.789349051 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.789677444 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.927960741 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.88858248 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.786735381 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.686590244 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.68116609 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.679971944 seconds)
  done (took 77.256547431 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.701413217 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.708762476 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.707926756 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.709690178 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.709409695 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.712269346 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.702199071 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.710742057 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.709963327 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.710537632 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.714164001 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.711707404 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.709172235 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.708962921 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.711437258 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.690670371 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.699473935 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.713157588 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.70038662 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.687906332 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.710420927 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.714106801 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.713406851 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.710746388 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.711187575 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.71368447 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.712199016 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.713010014 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.713375842 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.709600362 seconds)
  done (took 52.787761489 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.709633118 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.697792645 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.680458807 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.717995913 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.705435237 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.707005479 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.120494163 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.714828471 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.713429829 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.709716857 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.677969734 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.715911989 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.775945251 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.687548116 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.70788052 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.714853334 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.712608077 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.703033885 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.674829879 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.73139182 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.13220089 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.714473538 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.122737884 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.730209757 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.711044749 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.709157009 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.720016142 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.684700758 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.709823854 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.682300103 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.685987583 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.112695965 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.677454584 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.699846887 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.687076199 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.7174471 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.713908801 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.690192377 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.711834026 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.707941283 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.120932417 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.706716964 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.692738092 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.676384965 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.709706311 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.714619646 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.679922007 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.69048592 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.031044171 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.723128548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.681366395 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.711675906 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.719687748 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.715492591 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.032487581 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.712717169 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.706837092 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.677402343 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.724806626 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.115007153 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.716953532 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.712724782 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.679757321 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.712886604 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.678195391 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.714912071 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.73448111 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.710980216 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.697955585 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.713777919 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.680894267 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.713135868 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.71914138 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.685727634 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.682942014 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.704096799 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.714387213 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.682569411 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.683622198 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.107758326 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.721795628 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.681886503 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.13767023 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.717032243 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.72126658 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.723559958 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.717362243 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.836373327 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.11513147 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.683519881 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.681757925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.684443113 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.128210578 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.730008474 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.712236661 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.684603049 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.720764351 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.722877889 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.696926124 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.683828649 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.714632427 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.731919052 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.684362167 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.720929107 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.129420858 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.728859375 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.68722105 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.713709404 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.838452082 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.721818955 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.732563687 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.717485653 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.14508074 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.718984935 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.721109717 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.685314941 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.705578901 seconds)
  done (took 245.029382653 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.684139233 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.67776908 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.683846948 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.683058439 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.687028218 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.714014331 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.684643837 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.684785055 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.715474782 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.682629404 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.686982122 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.717752586 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.715992655 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.684795183 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.684507227 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.68421522 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.684443671 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.690691533 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.685292173 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.684812224 seconds)
  done (took 51.360785475 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.722576524 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.507576487 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.454463658 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.724699349 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.724626853 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.720265126 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.797070005 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.72497585 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.723140073 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.152029807 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.998550025 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.727147076 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.72328192 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.724187552 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.454451016 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.722487824 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.154077974 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.508827066 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.724737413 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.505065414 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.726622569 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.725343845 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.715791792 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.508480653 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.164963156 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.121364526 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.798176919 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.513761492 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.726184594 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.72560987 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.509357161 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.727719914 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.718645367 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.497869178 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.726449223 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.7471543 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.723136231 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.801540825 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.802674418 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.160891619 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.512869828 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.130455347 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.746524401 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.984240734 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.729930462 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.704970723 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.517695861 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.726787464 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.705264895 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.725690886 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.739542857 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.465944936 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.723712771 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.46440759 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.727150499 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.728239464 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.478034742 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.464996771 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.460065907 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.950688283 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.722669063 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.126279745 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.726328466 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.495587113 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.721674802 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.728592162 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.730293846 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.960644646 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.515151962 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.126732806 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.157503408 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.159767314 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.731429465 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.81119275 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.728424264 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.159929625 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.812369715 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.220449262 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.162274058 seconds)
  done (took 158.668574898 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.113765794 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.846194198 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.294257671 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.501697876 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.430245774 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.94125461 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.870015733 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.051198899 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.703564887 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.883458504 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.634941217 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.846191894 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.640211929 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.822707133 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.853280504 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.925538436 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.312104144 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.694458003 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.559145545 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.634253071 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.700770538 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.882898656 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.601595287 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.206902498 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.697674404 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.568038576 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.710706508 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.455442414 seconds)
  done (took 65.93556583 seconds)
done (took 652.571711685 seconds)
SAVING RESULT...
DONE!
