cset: moving following pidspec: 19876
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.735747268 seconds)
loading group "shootout"... done (took 1.039552977 seconds)
loading group "string"... done (took 0.412153641 seconds)
loading group "linalg"... done (took 7.76202728 seconds)
loading group "parallel"... done (took 0.159637515 seconds)
loading group "find"... done (took 1.286979039 seconds)
loading group "tuple"... done (took 1.868696945 seconds)
loading group "union"... done (took 12.561961557 seconds)
loading group "dates"... done (took 1.315283973 seconds)
loading group "micro"... done (took 0.202460854 seconds)
loading group "simd"... done (took 4.368029194 seconds)
loading group "io"... done (took 1.019036375 seconds)
loading group "random"... done (took 8.723646292 seconds)
loading group "problem"... done (took 1.462287061 seconds)
loading group "array"... done (took 19.356951948 seconds)
loading group "misc"... done (took 1.487109669 seconds)
loading group "scalar"... done (took 39.472544664 seconds)
loading group "sort"... done (took 3.112587463 seconds)
loading group "sparse"... done (took 11.715252214 seconds)
loading group "collection"... done (took 16.930000985 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530891099 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118138376 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.122736679 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.113602028 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195919366 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1176752 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119892866 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081305407 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.833732178 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13510833 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.108899955 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.402446722 seconds)
done (took 5.19022935 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.162658284 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08461106 seconds)
    (2/2) benchmarking "String"...
    done (took 0.075955206 seconds)
  done (took 1.259691907 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060809209 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129398599 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062410303 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06294235 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062982429 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062376347 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062434384 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062065729 seconds)
  done (took 1.604626965 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068161753 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064014898 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06235167 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06359937 seconds)
  done (took 1.360094128 seconds)
done (took 5.564820916 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.231438847 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.095558313 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.275406654 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.377809186 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.443032419 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090812874 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070907336 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066149748 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125009626 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310504342 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.099494758 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.175894696 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085912628 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168325617 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.964353779 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.114946137 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082526112 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117792075 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089571549 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127982913 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.373875627 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073833642 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07005097 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066410723 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064192865 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.63678395 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661152047 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123525731 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080153791 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.096019026 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112806646 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.63623264 seconds)
  done (took 10.243013324 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088035645 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086958049 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065235225 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119665673 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.088690207 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065589214 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071131087 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064103891 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.083952457 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.119451317 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087856714 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.093799223 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062487288 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065099788 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.069996503 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191865499 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075845228 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076966859 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063634487 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076300256 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101264638 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074595009 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074204816 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07409046 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124967767 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.165442415 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092834144 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094451915 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061677253 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075360663 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111306945 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125160985 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063070675 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061468492 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115375666 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091020454 seconds)
  done (took 4.373008326 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.927186775 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089006903 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.09626092 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.596022747 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062518233 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144190294 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2322463 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069095204 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.290649753 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.14305787 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.136019275 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142829445 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.113468038 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070531355 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.151176892 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.108570069 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.443376919 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065408373 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062455291 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064312407 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063101869 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065408908 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064997057 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060887603 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065834194 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090893486 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.082411158 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078387055 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.141124529 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.89547923 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.228336875 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063965411 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.154859997 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084309521 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.350952477 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065941387 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078658523 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.404859751 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.119249055 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062023718 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158540573 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112158627 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060943835 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112388441 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074615742 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065308606 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065170805 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065014358 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067577537 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077082361 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097653277 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064017751 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061710067 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158746877 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060734315 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062869564 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063386577 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06046046 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145750649 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06086241 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.1336633 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061297995 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065217136 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097659102 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065225857 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.083137196 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.091953625 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.329449472 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.030066549 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064094317 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.181192592 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074520193 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063042277 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066767378 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06278733 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064216658 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060427838 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063545804 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068895563 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066635032 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064864621 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104754249 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062978926 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066372237 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063415918 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068542962 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.093935169 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062018188 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.467480513 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.093659069 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06278352 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072419285 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100841476 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063099568 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067616254 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063781352 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063362944 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062472503 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062615586 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065610178 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091288062 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06628835 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108826515 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.137871268 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065861339 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063661588 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068720039 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065746715 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066640948 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062779081 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065479897 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065344235 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061771682 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.103525494 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063599571 seconds)
  done (took 21.079479575 seconds)
done (took 37.722947143 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245525712 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074859419 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075861645 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077516825 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076675248 seconds)
  done (took 1.755098489 seconds)
done (took 2.946460592 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.104203641 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060464415 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.095895222 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095346202 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061531068 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061504104 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09828376 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061299447 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.095021905 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09655601 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.09837009 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097506349 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061671595 seconds)
  done (took 2.289756337 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066506772 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077534671 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079368423 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058772108 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068266549 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077805576 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059221669 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081255441 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084539426 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078627473 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078426845 seconds)
  done (took 1.998539032 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065955494 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077420918 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079106732 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058067424 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06936135 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077397117 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058570462 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077214767 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080132254 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077276764 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077176602 seconds)
  done (took 1.975825474 seconds)
done (took 7.446088584 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062620324 seconds)
  done (took 1.226449323 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.491728221 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.171063104 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064798194 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.081994263 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182076769 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.089010541 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.199290624 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069144661 seconds)
  done (took 7.691132915 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09559193 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.06727939 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067266022 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065871876 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065288487 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064996112 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066048711 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06710529 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066470878 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065592549 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065632504 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065728352 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066294317 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066820331 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066283139 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066710992 seconds)
  done (took 2.355374604 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093937251 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093030166 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069248972 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.069628029 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.067468387 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067180307 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069397004 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.068639234 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066158507 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.06755847 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069138465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068260755 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.067487781 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059406442 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.068684458 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.069775852 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065787004 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.068806413 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069678966 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070461741 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069192356 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.058923133 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067220345 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068156104 seconds)
  done (took 2.96346098 seconds)
done (took 15.415053963 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.173606297 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071280813 seconds)
  done (took 1.419771555 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065472017 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066184048 seconds)
  done (took 1.319955625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071143671 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05749138 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.075528241 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.066842558 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057816223 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058960008 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.075655565 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059229774 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059393008 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059532226 seconds)
  done (took 1.829670224 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060208966 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.065523868 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06407482 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.065490536 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064249769 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060014691 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063005326 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060665758 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067111255 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059227157 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063733316 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078931273 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06329713 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080911126 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062394934 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062430854 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06432129 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.061484543 seconds)
  done (took 2.359521959 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058586541 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058990977 seconds)
  done (took 1.316494992 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061546016 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058705755 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061593678 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061613988 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058383585 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058980809 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060098359 seconds)
  done (took 1.61162508 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392968499 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116588699 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322779705 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.064673474 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.072497994 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.241913003 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059884736 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.064674516 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065288845 seconds)
  done (took 2.635602069 seconds)
done (took 13.693927374 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077320827 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.168894138 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084509227 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.40084223 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.086908538 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062897238 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109009596 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.163755313 seconds)
done (took 2.367695075 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.229418043 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.272855044 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.870819081 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066270335 seconds)
  done (took 3.410776789 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312727953 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.074330278 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073931605 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064312964 seconds)
  done (took 1.733300792 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061936197 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067505747 seconds)
  done (took 1.333342564 seconds)
done (took 7.920160363 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060712491 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06017495 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.060986938 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060450969 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.060580425 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060310484 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08715241 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059960703 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060325949 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060136259 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060442466 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.05970532 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059757069 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060012009 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06052279 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059800814 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060123202 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060666737 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060277542 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060322092 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06007047 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060532871 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060266015 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060812822 seconds)
  done (took 2.70697483 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075995999 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062658616 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063360579 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063502356 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064217232 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063366961 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06316033 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062150557 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06339126 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061441231 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06344347 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06356958 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061914771 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06414449 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061769008 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063471824 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06313905 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062148117 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061532212 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063525248 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063173569 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061888892 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063818002 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062823122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063485075 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064101857 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062088266 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062179356 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063614763 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063814928 seconds)
  done (took 3.121739704 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061118293 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.05670398 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057882752 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066044952 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056685764 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057317598 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057232377 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056685065 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057034535 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058090789 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057590912 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056829885 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057803865 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057041778 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057021619 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057323715 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061318879 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.073947985 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0573044 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056912776 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061828069 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057357509 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056485452 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056461889 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057372076 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056734954 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056958269 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.05704939 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056546323 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057644556 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056345233 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061091631 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061100356 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.06655001 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065786526 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061127992 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.056942981 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060484045 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057912306 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.05676579 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056427401 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056297624 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056840817 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057305972 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066968359 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057988893 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058762803 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058271191 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056880126 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056076284 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056300812 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058112767 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061636129 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058274069 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.05646017 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057472288 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056263802 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057512982 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056400006 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056249398 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056277849 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060151694 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058510919 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058531303 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076184284 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059811573 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067166319 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060856914 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058564182 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061131951 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058261156 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073768532 seconds)
  done (took 5.481955719 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079769392 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083104685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061881403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06212321 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059112822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058298068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066168209 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058364963 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062580263 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077827089 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058509426 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062497117 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061492937 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060954826 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05733646 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061471113 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064476002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057156414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057084309 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06128834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057289639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064527656 seconds)
  done (took 2.629720391 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.133102342 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063020242 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098746069 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071384622 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064979368 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072892059 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063767782 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063953472 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063939118 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064331781 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064020201 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063582023 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065544079 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064017467 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063436249 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063123735 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062660636 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063054611 seconds)
  done (took 2.49732404 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073129112 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062411831 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084492573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062442353 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062712138 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063200559 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067549594 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067913974 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062757444 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06400457 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067511773 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063078547 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063127354 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0638008 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06308845 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064119665 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063535832 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063239465 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067713348 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066799719 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066102706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066618608 seconds)
  done (took 2.67769209 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071087045 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061346024 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073979471 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063101717 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057325235 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057684041 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062219829 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061469813 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063109049 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062205558 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062232625 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0577869 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062909031 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061644905 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064123861 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062571109 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062351882 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063068756 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062361466 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058125158 seconds)
  done (took 2.48066478 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081956639 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059753099 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05963711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07798789 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059135847 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0590851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077496537 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059240476 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060460334 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08079238 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060485105 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059946311 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078240192 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077438622 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059792153 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077545282 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07776474 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078034187 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059455814 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059884809 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080301092 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059868705 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077972406 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059701119 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05961576 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.059410749 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059783787 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077761714 seconds)
  done (took 3.131132793 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060632277 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059849485 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060892932 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059887877 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060166468 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059814245 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060971432 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060621058 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059787545 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06073859 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060087629 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059861892 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059982944 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06009729 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060342842 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060304891 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059849663 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060818625 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06064811 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060394233 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06023402 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060029406 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059721733 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060128712 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060637378 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060243122 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060638819 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059868071 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059908158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.059962168 seconds)
  done (took 3.043655607 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070018071 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068608321 seconds)
  done (took 1.374802443 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058904946 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072619909 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057020666 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068231381 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06728372 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062085126 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067346747 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066551793 seconds)
  done (took 1.751530252 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.063041208 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085810645 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058925858 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059517909 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.061552132 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11514717 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.070414981 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071709348 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07078757 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061157599 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059019986 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069872581 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058077377 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070568672 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060211719 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066575339 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065005095 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069792304 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07006224 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057318483 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069583865 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059213149 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057124554 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059432789 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.05811139 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064485646 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072421623 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069732303 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066202455 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056600447 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075843256 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057309822 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058270909 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066261017 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061399059 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057159576 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091730492 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057736125 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.062872834 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05749772 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069086211 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076278923 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07079944 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074120051 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.05899781 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059427386 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057373235 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059113687 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061003617 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066284953 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057280026 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063965855 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056864835 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058645249 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067163297 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057460153 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.062537863 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066848358 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06998826 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067490676 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069068709 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071735245 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065743998 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06522716 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.057864163 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075649985 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.058974623 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06972592 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071078602 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058618842 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069898887 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057118909 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056417107 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.056964289 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087812696 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058844016 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058248671 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056995257 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057613098 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.05824088 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066055217 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062124279 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063818495 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060318821 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071687879 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065574648 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056998487 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.063714597 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.073528299 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060249529 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057271458 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072210134 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060291236 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056520313 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073169703 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066280971 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058437282 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057589341 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06041375 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070265683 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058155913 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055730319 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064801955 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058678652 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059971744 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.061250814 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064915973 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056696931 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066455823 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.061672083 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.057407779 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055059895 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060739346 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058347796 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056874445 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066066066 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057591457 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071411104 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063617588 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070869572 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071186111 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067565335 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072488918 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057680516 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056464487 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.074315143 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066180034 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059117543 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074314613 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057385084 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.199220854 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058648933 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060321322 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066962517 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057843008 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060303047 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058498376 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.062788458 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059418804 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060500184 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06212736 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065480095 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069244832 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059189286 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066307915 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058354313 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072305448 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067133739 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062041282 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061818743 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.057913381 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068807053 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063423052 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067185477 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058035564 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058410476 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.05765505 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067714055 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066822151 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059383395 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066383185 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061980006 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058575589 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058177819 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.05871477 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062125794 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061863067 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058686317 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065232316 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066224974 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073736889 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065934699 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065866566 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057130999 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057608482 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.05984076 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057053754 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06218414 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066473953 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071688555 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068404117 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077068482 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057385888 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066819987 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059536434 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073370015 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069653282 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059465474 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063558491 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057954564 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060816088 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067235132 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070065413 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072193453 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072171515 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062251626 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062010577 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057992759 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071567623 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058697141 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066987221 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067804991 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063484959 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058085389 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060233137 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067245871 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062975348 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05894825 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073914073 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065193867 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057628893 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071032196 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.05789271 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067705175 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057061321 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061288293 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062769546 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059497327 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066310497 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071526691 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056510323 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058132389 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07262742 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060606559 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059452161 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065258367 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071622386 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061351963 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065198064 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067270496 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066471779 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062646233 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068091384 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059510145 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067109117 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061069622 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069287318 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057208505 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073801134 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055973479 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070980745 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058826589 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069126948 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058841853 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067085978 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059365498 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073623887 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059299985 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058222009 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06862622 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056832618 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066959655 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057496312 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06237203 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064084001 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066446428 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059664748 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066398967 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059325287 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065708885 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061969834 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065819875 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066822901 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061932234 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057551964 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.200780993 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069663171 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067186775 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060764788 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.05984177 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060608325 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068603996 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061553717 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061069693 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067125659 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063802417 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065251312 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061024796 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061487655 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061042715 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067015006 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068218467 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076787393 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067672448 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06630488 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067914174 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058974301 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074822482 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058560841 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06561956 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056509213 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.064636235 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066534825 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057609202 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076227222 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059304292 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065153174 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069621675 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065487758 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061527343 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075120787 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060830201 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065546914 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065848711 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06266484 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063686524 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060258128 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065577359 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067381954 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068078026 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058649076 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064904786 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066286893 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059912684 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.065716072 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059475776 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065683195 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059868251 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056657592 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061970129 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068931063 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062233111 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062401956 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057813594 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056588219 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059081051 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065861917 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063459258 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067307924 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073482366 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05791555 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059871376 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058812901 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06494076 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076748542 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068283706 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06613185 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063891167 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058179769 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060272897 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059955367 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058371115 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062037303 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057876288 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058692662 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068286951 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059234688 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062168546 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057833043 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058684707 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066685818 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062329515 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058027232 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063530751 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057309077 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062749501 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056719407 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059139196 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061485433 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056904963 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060762 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067308695 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.072364827 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063431655 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065603594 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058257057 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06443625 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071741817 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064445484 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057973818 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066130782 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056492357 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074819882 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065629312 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064885107 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065924979 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.05807846 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071787566 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061510109 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066268097 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071211592 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058749454 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065100931 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.05787954 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072637162 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062177229 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05792941 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065651411 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064945572 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063246109 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068380055 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.05788576 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064979705 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063306286 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06075308 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059307941 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.057938616 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064304617 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070823636 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.056663935 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.200257992 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066993374 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067534878 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063529192 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070364455 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0661101 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059928328 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06041517 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061566499 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059554241 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069306004 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058800833 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062150958 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061849819 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058022636 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063814937 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072866235 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067164572 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066753125 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057670731 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057259522 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.074899881 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061956163 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061357381 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065949196 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067012366 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06942367 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066509607 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07386875 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058892164 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063854735 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069513821 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058211326 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057720652 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061215114 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.05976753 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066735362 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067558716 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065081939 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060171034 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064548518 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070504062 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059213605 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06242536 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063371345 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.05907044 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067678535 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065452027 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066009234 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059571744 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057727874 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060773876 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065642717 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064503366 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066254697 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058287248 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064230762 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070451405 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065044076 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062317789 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058635227 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062379316 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067107223 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062940191 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058465476 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063099587 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062397175 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065869914 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067854654 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06292367 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05853925 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074579356 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066735922 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067590178 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061042603 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061252039 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059031049 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058722546 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069805724 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058708467 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060652524 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063199823 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061054892 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07487547 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06510701 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072773772 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058906212 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061848292 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057838897 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066619075 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06196593 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057768813 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067267651 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05677693 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071762664 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069626333 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067601673 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058553882 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063816239 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06600947 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070971351 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066672063 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066255444 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061497057 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.0664704 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059442388 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067678554 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057302941 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056659601 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066808454 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066140437 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07058817 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058080124 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068546418 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060419547 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066211939 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066120844 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059600168 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059497501 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059439045 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065806325 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061238948 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066302982 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061171165 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071801561 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.057792291 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06703924 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065049102 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.06633113 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069277521 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068025341 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.063489036 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.056912593 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063081343 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063671712 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.195002276 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064028541 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062724369 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079447015 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060452603 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060239064 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072110229 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065016809 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058530226 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.064822217 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062601294 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068186526 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.0588969 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068065006 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062502572 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059032716 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062283231 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062701141 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057355825 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057823798 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05798283 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067735522 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062271369 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058286804 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075667444 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059639419 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066160305 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068503435 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064593012 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059748513 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057353733 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059317259 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069904383 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072158397 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061420867 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066353611 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059679275 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066645985 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056992914 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066726216 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065410094 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083607347 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058094149 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058702563 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071926178 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072817425 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062980951 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066964335 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066117159 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061574955 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078388999 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065696464 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058510419 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068017802 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060153599 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057110468 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056822793 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059100225 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068832396 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057063309 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.06007825 seconds)
  done (took 39.879541003 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094168803 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.05890508 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058057008 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057995 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068555003 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05833446 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057740536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058366483 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058426544 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060057244 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057370248 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057818481 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067715057 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070230537 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067401491 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061585704 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057791123 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058687458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057337505 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058252282 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.066726863 seconds)
  done (took 2.657289154 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065078823 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072455308 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068884944 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073866368 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065363333 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061345116 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068603502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061844792 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068936713 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066494363 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068463908 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061485865 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066629965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06656935 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066574077 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061929331 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068602797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065318103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061527807 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068200527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061734962 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068117208 seconds)
  done (took 2.784143986 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059579727 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05860172 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065764207 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05736606 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056947862 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061037128 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057302541 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061337277 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060874954 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061819246 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067089238 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058987522 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057760027 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063911563 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058386594 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058989309 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.097656123 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059121861 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059176152 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058779683 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063992162 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067417015 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058542332 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058644905 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062701819 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061656528 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058151952 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061238147 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057912933 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061264617 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058604595 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056968743 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065387001 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064977934 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061157684 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061440556 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.058436548 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.057984189 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057197072 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057082734 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064687402 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.058552243 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057346541 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.0588076 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065723375 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05699201 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057106114 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066426551 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057707378 seconds)
  done (took 4.324873982 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.068277871 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106396732 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06434201 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089410149 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071833439 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065306382 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064612274 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090093097 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059519397 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060493052 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072688869 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072644266 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061707078 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063476643 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06503037 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059936246 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060707089 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059082859 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.062870829 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059559259 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.062855423 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06363653 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.06926018 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.069958772 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061164452 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059401779 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059561116 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.061405221 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.069616475 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.063622659 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.061666562 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06230586 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.070320203 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063330104 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060343153 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059763965 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071120437 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060485548 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.059948974 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.05837917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060215017 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.061659251 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064142835 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.071089249 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060766074 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064921661 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060412123 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057987695 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070281005 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.059848282 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.063946021 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.071618493 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061459885 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.060671309 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061695835 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.070526232 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060397309 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059401334 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060507064 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.069837847 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058357039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.060826501 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.071140164 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.05976986 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064056668 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.071048929 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064957954 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061328359 seconds)
  done (took 5.900815374 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067619128 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089340404 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068764958 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068254423 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06773179 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069187359 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06969814 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069203086 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068197497 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068901193 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068031033 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104459549 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06382693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071913477 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067411657 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067464033 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.067483094 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067223333 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067446399 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067459381 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067405263 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067945043 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067812709 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068192178 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.069876219 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063847131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067288061 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067735111 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068015535 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067315276 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07036462 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067638078 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068151157 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067880232 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070338518 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067697814 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05816336 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067333141 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067545512 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067998573 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064625987 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068181889 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067759773 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063844627 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068246355 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06800701 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068228954 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070349079 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074643759 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068596978 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.067729842 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06828256 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067979621 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068155831 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068596698 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.075078115 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068690331 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068119071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067773862 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06965817 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069597148 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075635919 seconds)
  done (took 5.653909859 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071569132 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064892527 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07657452 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061865877 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058837058 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068649508 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059054067 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058803402 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065950954 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066084581 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068385281 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068747139 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070466809 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0680962 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068141245 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070551807 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066816565 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067001866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064964954 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067241437 seconds)
  done (took 2.694541529 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070579562 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074556481 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063438072 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067427463 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063172994 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067154865 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062750783 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063316766 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063703984 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063507562 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068048145 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068181977 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063756531 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066450159 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067917371 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067618131 seconds)
  done (took 2.410762527 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063917478 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065354031 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065123416 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058662306 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063543946 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059246302 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059586336 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058652491 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058944497 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073232806 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060186069 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071505452 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059870405 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058857701 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059808523 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065587118 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059452022 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059912759 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059530595 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063917878 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.064898715 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059567991 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062896444 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059108841 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063348991 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.064954155 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.059501548 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061914068 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058447782 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.058711932 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06404679 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064652002 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058602963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059051829 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058050158 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058520074 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058450116 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059107189 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064056623 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058391478 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.05729631 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063217732 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058639133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059906731 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058201701 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.058917319 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057791343 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064593423 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.05895481 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063174216 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059058965 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060275292 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059322854 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065236615 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.060612418 seconds)
  done (took 4.717953981 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072593229 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062753191 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058104453 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057167075 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062426713 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064491704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062825804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062886694 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063704573 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057642391 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063500035 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.061592088 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062687441 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063497841 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063527794 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062431334 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057291826 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062342976 seconds)
  done (took 2.486598576 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068321942 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062487819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067442398 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062491492 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062421424 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062277624 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057915815 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057815869 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05791947 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06202823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06308426 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062204716 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059051316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063164867 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063754473 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063379184 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062924293 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058874147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063465605 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05905846 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062240001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058112458 seconds)
  done (took 2.718042398 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084967815 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080826805 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119188243 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075857335 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083695972 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068557937 seconds)
  done (took 1.871423764 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087119246 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098747782 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062247528 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062786525 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07092872 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065126681 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065089424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06575144 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072002304 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070695813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067085126 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071481731 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070985144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067193643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071097638 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073465355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065334275 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065462879 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062347934 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073078679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065393869 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070976402 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065632661 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064839241 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065599907 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066914326 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073275403 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069361857 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067449495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07069454 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073595528 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065444952 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071487053 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069559115 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06215923 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070730866 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066087408 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07351633 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071219831 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067372435 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062379915 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072458359 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073226338 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068838971 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075442463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067280556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068870952 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067405229 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067722661 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078247869 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07267613 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067634747 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071963928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074921669 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073850681 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075961056 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06930928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067135955 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07133432 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069409461 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067168286 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071106604 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067543945 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069507308 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073153669 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066978374 seconds)
  done (took 5.97396977 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09407179 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063351037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065867892 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069451769 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067613199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065983089 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065554631 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065548128 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066179708 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063891831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099972879 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066238915 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067080315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068276064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067515398 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066149346 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065800096 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066907554 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062635842 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075481106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065613607 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069503985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069281019 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069140355 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070898933 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073763046 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065037068 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065193924 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065149426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065313127 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066722678 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065769089 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067084819 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062211659 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066768088 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06561259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065261262 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066850501 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065215064 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070792428 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066646024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073084005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065110657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065413106 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06924066 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065222179 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06647636 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063862863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066706477 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062911806 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069308673 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070097019 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071081483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068490016 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06620765 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067459271 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067168198 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066905012 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066348407 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073652766 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067642683 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065520923 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075779308 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065259534 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065064867 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066651127 seconds)
  done (took 5.876299365 seconds)
done (took 122.056415 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202635971 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181709851 seconds)
  done (took 1.731811788 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07009002 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092217603 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071346031 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130716954 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067989434 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101899176 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100804134 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071435671 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06793871 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068099153 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067858119 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069840688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132536915 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068086618 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067511796 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070592559 seconds)
  done (took 2.685546269 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100993243 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174690367 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106788615 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065332481 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101790667 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072034104 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065726491 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075782716 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068941417 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068809494 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072013107 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070511754 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069022501 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07059872 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.06921549 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07168618 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069016149 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071867103 seconds)
  done (took 2.836190706 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08963036 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082080506 seconds)
  done (took 1.54507107 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.14993085 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101815012 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139409022 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.310056198 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127048291 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12321147 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126742478 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.121329416 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106351253 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.118560708 seconds)
  done (took 2.791794572 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098414503 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.167247649 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299536691 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113811885 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071891083 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095335233 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116339779 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077662426 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075529535 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07544171 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077726356 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072861842 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09323967 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072269894 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072597187 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07263428 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096582694 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071653705 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070560623 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.071757085 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096480584 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066332734 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072030405 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071433802 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073397294 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07365082 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068321967 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066315916 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071158356 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070706463 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0735837 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092148132 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073480485 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.095079721 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070442984 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.095949494 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.070552472 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069538769 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07076692 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069677356 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072756053 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072367242 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074997913 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072423568 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067724392 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070405115 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067528109 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066428683 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074597792 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067206123 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074488282 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073519374 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.094637769 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067269711 seconds)
  done (took 5.887071561 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102367972 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101259781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066869643 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107450445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09972542 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066065535 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098814358 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09429527 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103140391 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065666036 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065924959 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065299532 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072183869 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075153501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110119481 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102142095 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06791065 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066117371 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102020986 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10152185 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065067549 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095728073 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094028578 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101323075 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064294912 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065969529 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064660362 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064996058 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070291283 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.071233638 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065155675 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072618725 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.077351365 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071820011 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064597443 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064785819 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064556743 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.0723425 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072438366 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07252068 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070809516 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0641858 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064656249 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065342326 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065610396 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064074394 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071002527 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07180184 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071188137 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064744294 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064974482 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064580727 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065080399 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071619959 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07068634 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07309438 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072464093 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06501489 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065133358 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067241104 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075771404 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073325264 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072825157 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065924786 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073070226 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06457598 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073511921 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076823238 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064453107 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065133718 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065017399 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064600274 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064574868 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070569103 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070715134 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064946761 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064606712 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064680612 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072727119 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071031955 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064221745 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070161762 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063862053 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064612034 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065106487 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065465415 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070624829 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.071998285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065587806 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064088006 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064744316 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064463172 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063772286 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070348298 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071288352 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071545904 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070985156 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064754882 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07075568 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070438697 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064000315 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.069968221 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063607463 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063794306 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063867455 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069401823 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.06885671 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.071926064 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063462711 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063084973 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.069511685 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072599819 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063162661 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.069008464 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.20569678 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073536301 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065809109 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078626063 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066118342 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074541583 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066271085 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074078757 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065936085 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072274287 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065623646 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064748187 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067137643 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073536657 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066252725 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0655143 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066367606 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067027132 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074060578 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078096814 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068298763 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073044866 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.072579664 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066231437 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071743416 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065462122 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072985033 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065346934 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065387988 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06463223 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074320358 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06512943 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065330299 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06531741 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073961234 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065603952 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074538465 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071128233 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064682235 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076358998 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074172282 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071643747 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.074422381 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065893766 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065454508 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065265514 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065994253 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071286989 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072177195 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065448908 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0649546 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070624389 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07349108 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064663521 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071264983 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071326331 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071612181 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065058232 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064975038 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074572666 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073551572 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.0713244 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07092892 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071807565 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064891797 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071263641 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071606552 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065682654 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077428002 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065403179 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075539153 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071803635 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070867715 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07225845 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072661881 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073586026 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073777246 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075893671 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064531025 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064598489 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071421968 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064993569 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064695082 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071279239 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065416981 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065460339 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075897035 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065488734 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073580981 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064619077 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072167706 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064846229 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065477061 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076150395 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065277649 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065647796 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070860469 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064810227 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070665387 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073254365 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070758006 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064197923 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064712687 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071166703 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071275977 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063988466 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064037333 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064257172 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.069406345 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.06896404 seconds)
  done (took 17.376413024 seconds)
done (took 36.238738161 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.194392069 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152859231 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184768604 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108781824 seconds)
  done (took 2.117303397 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.089365396 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093249468 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.073332816 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061630026 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.077824374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062521661 seconds)
  done (took 1.877518486 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256000782 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179759485 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164729013 seconds)
  done (took 2.014119235 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2089877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188325348 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465611566 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284451174 seconds)
  done (took 2.660650855 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.124930754 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075596943 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060054303 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070090918 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.101478632 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.130743861 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.084456503 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104124924 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071538632 seconds)
  done (took 2.299112699 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.123404918 seconds)
done (took 12.531649352 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.211828826 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.257997364 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096970125 seconds)
    (4/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069889541 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.183269192 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066503207 seconds)
    (7/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.193057025 seconds)
    (8/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070769838 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.168468135 seconds)
    (10/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.243792572 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175913297 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113404945 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072289637 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128110194 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.226273515 seconds)
    (16/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080045093 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.226901691 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071031878 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089013581 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072745721 seconds)
    (21/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.172426458 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.292634619 seconds)
    (23/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.164923871 seconds)
    (24/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.191864089 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072599853 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092262305 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145203131 seconds)
    (28/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.074228539 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.209035047 seconds)
    (30/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.090653802 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.17087341 seconds)
    (32/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070627302 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069691621 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073335925 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143178936 seconds)
    (36/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063198845 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060564577 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146786186 seconds)
    (39/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163289137 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072487113 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087174756 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118937329 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078584673 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18132977 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070508659 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069126455 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074731262 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.142678417 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083550399 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062971723 seconds)
    (51/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138345088 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.063095168 seconds)
    (53/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.223793736 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156836316 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.079805576 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.179213043 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217772432 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17313114 seconds)
    (59/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071866882 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061889254 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071026564 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068391754 seconds)
    (63/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061652012 seconds)
    (64/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.177963995 seconds)
    (65/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.061930804 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060500887 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.062451332 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115034919 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12395269 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162042631 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.212378356 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17208551 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072001851 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069988911 seconds)
    (75/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.189346158 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074895026 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062052723 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068380912 seconds)
    (79/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061988962 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09042269 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.238030579 seconds)
    (82/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072187495 seconds)
    (83/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.106475522 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215070185 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063335297 seconds)
    (86/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081503916 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.146266149 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.134432936 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083508849 seconds)
    (90/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.073394177 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063091836 seconds)
    (92/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071193045 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091437236 seconds)
    (94/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070724033 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069610027 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069455955 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114458598 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183129554 seconds)
    (99/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.139036462 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123167919 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.062729421 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.184340743 seconds)
    (103/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063185118 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 0.162906968 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062214467 seconds)
    (106/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062124244 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112611637 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06879506 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061952641 seconds)
    (110/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062587146 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074006228 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064069588 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148187246 seconds)
    (114/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091430059 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07421869 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113524325 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071727437 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073369188 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062568862 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122602265 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083403031 seconds)
    (122/309) benchmarking ("sort", Float32, false)...
    done (took 0.130487706 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061877928 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066524308 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.137330433 seconds)
    (126/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062403562 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164360301 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063290564 seconds)
    (129/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.136614642 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072605536 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062002137 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062112309 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062469008 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074054089 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086245305 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082472076 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074130879 seconds)
    (138/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201299735 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063070532 seconds)
    (140/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.138309584 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075202691 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069349692 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061989875 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070031709 seconds)
    (145/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.161532255 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068894882 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.141130885 seconds)
    (148/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.147151209 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061978823 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151391443 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060815334 seconds)
    (152/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061413181 seconds)
    (153/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062862315 seconds)
    (154/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0611989 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062325889 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.063315916 seconds)
    (157/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137850106 seconds)
    (158/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06415252 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061585575 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063005336 seconds)
    (161/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064098594 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.177462382 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06330765 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081567292 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119070821 seconds)
    (166/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06519208 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.081907739 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144699396 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.085586348 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143311002 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118625742 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.085035227 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062827422 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117430301 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06594945 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.061737523 seconds)
    (177/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070186973 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.062443976 seconds)
    (179/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064937172 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.060940191 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070402569 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084937481 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062575292 seconds)
    (184/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061216653 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060773259 seconds)
    (186/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.067628735 seconds)
    (187/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.16348568 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.061590808 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060555058 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06151096 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.060787108 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060461702 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08247461 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 0.127121381 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170783431 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.307945345 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085937739 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071069982 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116959748 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085467729 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.20493107 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074797506 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062248376 seconds)
    (204/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.146216899 seconds)
    (205/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06359903 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165347295 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087733302 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064796278 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071684935 seconds)
    (210/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.061338949 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06096228 seconds)
    (212/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063455346 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071121008 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070785097 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155201741 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074510501 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07477978 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142787327 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177146973 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141347797 seconds)
    (221/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.063129523 seconds)
    (222/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062844242 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069584476 seconds)
    (224/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064722739 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061674847 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062900116 seconds)
    (227/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064721721 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07000284 seconds)
    (229/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063138337 seconds)
    (230/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063586398 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069626039 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065770401 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065464029 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150489881 seconds)
    (235/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063215591 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069078054 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.061675741 seconds)
    (238/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064661662 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167184107 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.086276619 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061650821 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062995375 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063134822 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070314747 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063672114 seconds)
    (246/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063086954 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060879714 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06179433 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063486798 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073590506 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061798109 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.081577777 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069898447 seconds)
    (254/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062975249 seconds)
    (255/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063406209 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088949381 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243781526 seconds)
    (258/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.137294753 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061831216 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063316266 seconds)
    (261/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072722221 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064272085 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064514228 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076379716 seconds)
    (265/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068867428 seconds)
    (266/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064388718 seconds)
    (267/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063016631 seconds)
    (268/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061017483 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062676415 seconds)
    (270/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061165765 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.061093107 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.143291078 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197554034 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0688353 seconds)
    (275/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066459808 seconds)
    (276/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.154393404 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062939278 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062990072 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063243855 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061925617 seconds)
    (281/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.089201066 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.061391515 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069823203 seconds)
    (284/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062973755 seconds)
    (285/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069781035 seconds)
    (286/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061144973 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062596647 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061464766 seconds)
    (289/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07132982 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069177882 seconds)
    (291/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061293104 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060980966 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062317232 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.064424656 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084142157 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073303969 seconds)
    (297/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06590336 seconds)
    (298/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062581178 seconds)
    (299/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06302161 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069382104 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083830713 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069426019 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069562166 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122244458 seconds)
    (305/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062192449 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061904635 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061935136 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062421644 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063008297 seconds)
  done (took 31.79319366 seconds)
done (took 33.225196856 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084516053 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085745821 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069828061 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.081293463 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077139613 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091880023 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070305209 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074573532 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076547762 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.074977884 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074999519 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068853888 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070999652 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071205975 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069211871 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085055283 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077412622 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072248826 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072612412 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06354745 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072311064 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064032646 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06224921 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068394623 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073814369 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068913365 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071109426 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071131956 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062883524 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06253473 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067259941 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071357008 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065217279 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074798363 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070577304 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070658584 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07196859 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076697044 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063403314 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064801345 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075124302 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064540787 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072411275 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070572855 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069493726 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071296659 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072193203 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075791917 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08577928 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067129376 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074512884 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074769097 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074612856 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068004856 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067349439 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0708185 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0680623 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084167123 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070874303 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066206881 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072242114 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071399444 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069313768 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070402022 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070845076 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073247946 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07358944 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068977123 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072317052 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069521929 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062156892 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070702992 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066921108 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062326622 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073458788 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076116998 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06172039 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067234232 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070190667 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07052559 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062017376 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066018459 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061524554 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066639339 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066251211 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.0681836 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067135419 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069134583 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060962309 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070406638 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069612012 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069866961 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060972141 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074177801 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061783457 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068235673 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062483877 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062018925 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061103779 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067414542 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061821327 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066315014 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070139747 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060910398 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066642537 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074953454 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061958168 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069042266 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060885434 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061479561 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072168443 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072742771 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062283143 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066068292 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061131431 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066999432 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060979049 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061907809 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061949118 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06210591 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066076963 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0618645 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066484295 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067410805 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074104385 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062011815 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06688442 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066077821 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062175074 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068364213 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062344339 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061790458 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060432677 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074135593 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065199168 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06197041 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066677358 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065081365 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069133466 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059940556 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069105856 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06694264 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.065396941 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067564476 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059769584 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.071644476 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064633852 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.207529744 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062572316 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063009532 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061683236 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062704163 seconds)
done (took 12.157257225 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06369461 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.088053959 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.070144231 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077883969 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074762342 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063501548 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065997671 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.078207116 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065322449 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080800511 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084563727 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083079206 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088309116 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061546473 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062539935 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06412456 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061550851 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.06946478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076729364 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084131635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091676375 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062545504 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070892419 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077580864 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.07247612 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.078163878 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064072394 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063151166 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065256166 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079064538 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087353772 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.0624377 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06366775 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075408405 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076026997 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068807415 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062931865 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066204707 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063729577 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063396836 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065182349 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.07620537 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069109626 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.066457608 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063831273 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063560177 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062838019 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065695996 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075500781 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065629672 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070259265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074459655 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064149806 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06270335 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060961642 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066593631 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06268048 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063509558 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063190993 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062753252 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063449207 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065290637 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063637882 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063311221 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066123794 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.065138533 seconds)
  done (took 6.088459855 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080905313 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091261537 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079319349 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079403059 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062823263 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063129652 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063689084 seconds)
  done (took 2.058418049 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064217669 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075379671 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07883863 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079002156 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071637409 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079988209 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063605071 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093063995 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062293644 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075287171 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106855527 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079062629 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065857805 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07440629 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063351423 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070326234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063605036 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071336725 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070915045 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078290244 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066981213 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090602147 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076706183 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063711539 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082679681 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066645539 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062318985 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063673288 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064300095 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064919682 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064175026 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102383566 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068783864 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076753524 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0675481 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064623144 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070692495 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068866428 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.068123337 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073973891 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069148958 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065558917 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062344532 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064463601 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065479466 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066898396 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061938328 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065218974 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064514651 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075220722 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062114949 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066813059 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066113266 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067531378 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069686845 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067636665 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071262525 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064458237 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074083825 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071322442 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064423538 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071338598 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103824111 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.068301214 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070559274 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067232348 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066799242 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068095495 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06390957 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064671145 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064388163 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070420238 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062845605 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064856649 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066318633 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065126038 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066433826 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079026007 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079012138 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075311656 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065048443 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064159108 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066950934 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079333935 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067538201 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064596764 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066582463 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06230322 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067670724 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064624056 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069358052 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064588272 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071377611 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065335217 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066854057 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071083407 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06339749 seconds)
  done (took 8.325596551 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065741037 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064195286 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06569486 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064355488 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064477121 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064788029 seconds)
  done (took 1.963173836 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.0857935 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063898577 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077783819 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063982612 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098741204 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070111618 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070007943 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071312003 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076653959 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075436711 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.069642837 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073467507 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072168161 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067224344 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071389569 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066677534 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072010737 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069431171 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077664662 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066713951 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075921118 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.065075371 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06524331 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.074857332 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066003705 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06430341 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063895365 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076057101 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077379724 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.071199553 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064759235 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065669719 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071044201 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070794862 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069532939 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071164339 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063649282 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068601743 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065585442 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065854442 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.07189035 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06511526 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065606868 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068417174 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070880275 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070762844 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.06877697 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066929852 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069327878 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068190447 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068236881 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064100934 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.06642304 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068686575 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071111681 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071382027 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068659155 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069438063 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064999821 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071012577 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063418128 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066076119 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071478104 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065758422 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067199391 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068525414 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071162444 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065494251 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066080043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064154753 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071055271 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065351616 seconds)
  done (took 6.553796559 seconds)
done (took 26.515790069 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.944771818 seconds)
  done (took 2.467799663 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.551536305 seconds)
  done (took 2.114373073 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.700327021 seconds)
  done (took 8.259303197 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.281682836 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.312509725 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.703175885 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127385614 seconds)
  done (took 3.017790976 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711405347 seconds)
  done (took 2.279234426 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228658686 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219599324 seconds)
  done (took 2.02777186 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.341445277 seconds)
  done (took 1.90179588 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103436585 seconds)
  done (took 2.660943652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.2141595 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154464935 seconds)
  done (took 1.933963863 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.469910206 seconds)
  done (took 2.030105072 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.123883833 seconds)
  done (took 5.688840783 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226683679 seconds)
  done (took 1.82968079 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230691982 seconds)
  done (took 1.798089986 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.738066053 seconds)
  done (took 3.300077947 seconds)
done (took 42.87776143 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079844584 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082259822 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081688414 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077688 seconds)
  done (took 1.860724561 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.07072401 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066144274 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070062978 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069778805 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068442838 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069430714 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069024121 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.0667524 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067763302 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065829303 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064776827 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066445217 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068821625 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065573002 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068385486 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069524054 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06561707 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066234055 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069124196 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065897974 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068335577 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.06593716 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065138688 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066453745 seconds)
  done (took 3.18266127 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07475193 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.06943733 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071439843 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069735134 seconds)
  done (took 1.851754728 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072188953 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081165 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082500983 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089964102 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074686785 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073819307 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080884103 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082394658 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064483023 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084233118 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066419438 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065247082 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065248581 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085450105 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080390201 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059937321 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061493485 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072734661 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072236794 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.073796826 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065322077 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062238734 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072864665 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071434377 seconds)
  done (took 3.328376289 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076045071 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062951571 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074605568 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088275972 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090585592 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062864709 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074969156 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089847617 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12174879 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062402425 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068329838 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062922758 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103057327 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062231106 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077208338 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104073403 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108326571 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067100813 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096337259 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063460423 seconds)
  done (took 3.192391254 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073476479 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066113934 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067054905 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06229442 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075367936 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070525001 seconds)
  done (took 1.994413336 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065704328 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065084933 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064637076 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064067613 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068658905 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064248083 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063188474 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065056522 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065035426 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065132078 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064989908 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065007079 seconds)
  done (took 2.353715727 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.1561215 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065715792 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067506193 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065604272 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067830186 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063277679 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077193892 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06565608 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079993932 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06376086 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063507952 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065250866 seconds)
  done (took 2.475923822 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090888611 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089323775 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124025256 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10544894 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086441274 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.086663449 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.13897224 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127746339 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105396028 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066396801 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078741929 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098131303 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095305124 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13233765 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104161048 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068878009 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09442243 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077226515 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098842142 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106331176 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103799599 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106791336 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084801225 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094838263 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099003253 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106642672 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067545586 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067462492 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128978653 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.092982692 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085501279 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08781009 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103125354 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065211003 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081924105 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094303122 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079699666 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096495147 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08327589 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091104376 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072980164 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.118659218 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095520387 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101237389 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113134135 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088995654 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099292493 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094574463 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078750548 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.109656143 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090580731 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086896794 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072180604 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.147014409 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086854056 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.099654121 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104248019 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.077456868 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083472656 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088538143 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.116124657 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.091719264 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100334635 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.247123391 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084627219 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08903365 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129197157 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082051923 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099566543 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121286484 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087802779 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074174452 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09055767 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068941602 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.097152695 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099410152 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092115895 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105320064 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078364664 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114995895 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103043995 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069956027 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.106405122 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08842887 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147411139 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09413443 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097723277 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088326902 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.142542244 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082645703 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076153778 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090521344 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124706542 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086016444 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092709463 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119804701 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085901517 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079265902 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071778381 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082877009 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092509245 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107503094 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096540241 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087782843 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08261595 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088296406 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072904191 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076941893 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092886533 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083931324 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112409942 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099383438 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108146393 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074389892 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103634168 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088862058 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124595742 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.113130207 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081414496 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104898817 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128111678 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102921129 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081016769 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095960368 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109444344 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099820488 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.084209375 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128162821 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10697175 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081066844 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.236752912 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089408306 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.10162924 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146425811 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088575999 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106031475 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136347657 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105635903 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092159645 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082543132 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089896095 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1076862 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136742208 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09154127 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069878205 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093769086 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126892942 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076021802 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094744816 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088114636 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083407472 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080517443 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066215181 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097986226 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128794819 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.109282571 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096390833 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.09126623 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066124965 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097023588 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094446102 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141047368 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112860791 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095473436 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.088028773 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09915316 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078125579 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127190379 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.124896467 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088575813 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087795934 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119343433 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085936244 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.097553421 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103419909 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101835891 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093867042 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133901052 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120488864 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.113700801 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101334988 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119595082 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077948383 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103892478 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071049285 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098885489 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073368529 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097463597 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074942413 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106170027 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075568751 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09533835 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.065403945 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.227342704 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102393149 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087367255 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083440898 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.129008555 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.118993435 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079436264 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090516105 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097023863 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094398075 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103073522 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084031749 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089331304 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075172904 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.077583874 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087851433 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091885689 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101040556 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075608999 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071755172 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135908801 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101248237 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088621318 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088545783 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.113778977 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080673637 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079322808 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10242799 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130505792 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.113630333 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077011801 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.087785043 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.066022604 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.081110892 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.072513571 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105355293 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071002311 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107381816 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065587373 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.125830938 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08399048 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097630414 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08963712 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119256214 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082067214 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119775422 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083947612 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104735918 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091354438 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086458576 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102903694 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.08828781 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094902964 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100046566 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082691769 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085825746 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11941155 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104141139 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111934323 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104115719 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131967897 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104659938 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071200997 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099292033 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08750772 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146429788 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094962297 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08066664 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082754306 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098139863 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078058244 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131049312 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080644357 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.077215666 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105942308 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.083808501 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083390054 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071242542 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.095413017 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081549976 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103341494 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.091764667 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.087454342 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099474252 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099541423 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079622985 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080509586 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113421712 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.120092559 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.094100193 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079998097 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081294816 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092312785 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087254055 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.100232938 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075297052 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.070635344 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.063193921 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.066750438 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108948212 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095612622 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088017297 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086514914 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095227766 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066026878 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082221515 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081841749 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.077338941 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083345485 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.105921506 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095065047 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11828927 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.093701688 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084735564 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124872948 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117434094 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082947972 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085062302 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088901488 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072076112 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13434015 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106007974 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.071071052 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077012209 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.072187684 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078409921 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.066520776 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097933845 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098205264 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072227777 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091600645 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086927182 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.10753401 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085479875 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072471535 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.074638362 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.068764824 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.069549117 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.09108727 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.071657128 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072266384 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114908844 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.364753105 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106443033 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083759406 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077411243 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135474569 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069402336 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132905568 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082611211 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108326512 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079451814 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078267429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090270584 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103750972 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108179909 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113092525 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071171534 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102558808 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150808108 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076920708 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075010778 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072735638 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109408292 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086489075 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142645794 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088813581 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087522631 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07533582 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121425947 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101199002 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081029045 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120813325 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077830084 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068503996 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079413999 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104966576 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069807191 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.072319633 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109478753 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.620673449 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088981902 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074365699 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081785512 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118026717 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080457639 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10564901 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.115187853 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1043916 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.182298113 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073303104 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090805952 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.105546298 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098569181 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090353284 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077099941 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084864308 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085871599 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077681176 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103771086 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.077878491 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084462994 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077007726 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.100698297 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126108415 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085555037 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.101383346 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088285607 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08636097 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098167152 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10570294 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.258796009 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.082776865 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087413467 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105332167 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080335856 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076567379 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096835136 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073998842 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07512895 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11051261 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084249442 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.09253128 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104083093 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.084614219 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109274452 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118051462 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112305887 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094639966 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075632415 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082301585 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084611961 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070407808 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076683686 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072570113 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06740045 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104120284 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085438006 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081191359 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.09978438 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104951322 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096835228 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10460126 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087250539 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092947747 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098415872 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.123341934 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148387401 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096407095 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.115479959 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128535718 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074838003 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.072784806 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.077486134 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128216856 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.07778823 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088687313 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.225827183 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074388832 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.078007032 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088187992 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105587969 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079676945 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078890963 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096292212 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108673672 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082197017 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08098559 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092684226 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103731428 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126597146 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08558755 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.072147195 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105562116 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098611005 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119800596 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.070525924 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07874355 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124811708 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08482181 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098326608 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077178597 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116596743 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12717555 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071900723 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.243343891 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068890496 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085228916 seconds)
  done (took 48.767627772 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15327168 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.146106211 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079141467 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094920232 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.1894473 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.204594007 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.115737569 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.09149075 seconds)
  done (took 2.800845176 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065187974 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079558078 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099667091 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081673762 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06478788 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065249527 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.192093009 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080571212 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063442698 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102708927 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071874345 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065405826 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.348811841 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065648599 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066223041 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073656736 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064497987 seconds)
  done (took 3.365701328 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.348748253 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609944104 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.315074092 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070858256 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.980087179 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085074586 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.190242891 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133464739 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078166613 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546869481 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36750727 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132163548 seconds)
  done (took 18.584853378 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072059278 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071244242 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.075163092 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074788685 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071428635 seconds)
  done (took 2.089021584 seconds)
done (took 97.433828753 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079200255 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164409122 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065439598 seconds)
  done (took 1.988780379 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078733137 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07754568 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079547911 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077168177 seconds)
  done (took 2.042682593 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071485915 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072730593 seconds)
  done (took 1.866688352 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234094022 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163873435 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090297598 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078834133 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07591179 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076506471 seconds)
  done (took 1.970150468 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068264951 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068396074 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.06895556 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069234796 seconds)
  done (took 1.999235218 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065099868 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063635138 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065484073 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068219643 seconds)
  done (took 1.989518594 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078992937 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079481318 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07441889 seconds)
  done (took 1.962584333 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107689044 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094723314 seconds)
  done (took 1.929678452 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076119497 seconds)
  done (took 1.806717516 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.083358135 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.090278318 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140836712 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105934989 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140552747 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.124220082 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073671549 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074891961 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070191506 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.069877871 seconds)
  done (took 2.702465064 seconds)
done (took 22.547770811 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075057243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36243054 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356396161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082449264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66772115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352984266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990855089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08613529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.095024003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064842894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080946909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646126522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980022896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327137846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968369663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326431629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646150492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065137645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064235848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065258405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973608394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064467727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064732485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065609668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64539411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369574937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065761873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325830775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065089189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066811271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351943181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065659467 seconds)
  done (took 16.137981011 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066260443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116348642 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069580526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079996934 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067510894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066359516 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068013656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065590483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104487485 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065281542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081509517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064835834 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068670395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065932847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084565244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065747598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066800122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066824107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068542389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067053372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083332467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065671505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066377392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066270864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067222867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079830334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068029926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06621925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066066921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068102123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069261244 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067505102 seconds)
  done (took 4.049301741 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118694127 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121999793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069879757 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104420591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11494527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067128308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146481863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08713398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110273358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065836351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082175571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065551463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100168498 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067084528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085500879 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066010194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067185358 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066917117 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065381967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066761593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083511354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065397732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066418119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066709503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066638734 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080408416 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066472024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065943254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069229824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068431919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070124098 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067132652 seconds)
  done (took 4.3242236 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066612252 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068541508 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076278718 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077629348 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064570726 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065771264 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066963704 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064314748 seconds)
  done (took 2.301069156 seconds)
done (took 28.560165761 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074756436 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065193117 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068064098 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084936471 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070401475 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066973415 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061812275 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071084784 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068151553 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067764704 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069681845 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063520046 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066921249 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061826433 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069310541 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063875836 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069745831 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.067967775 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068217874 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069664602 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066369294 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.06906079 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071875063 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.068695463 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067744641 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.068862404 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072421981 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069620505 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063774924 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06663384 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065975978 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073720639 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069986024 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070702292 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066534736 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065844221 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069783977 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067995664 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071984427 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074383424 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067341056 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074311393 seconds)
  done (took 4.611763252 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.081654367 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086018075 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.079596189 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078781222 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097417454 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07880119 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.083078053 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076064062 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073939417 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.082710921 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070776001 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075794909 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076325675 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068816017 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074982498 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071533932 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076809923 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070593966 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077421298 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078285467 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085717305 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069492316 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075955561 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077056274 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070751445 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.076770763 seconds)
  done (took 3.773256519 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069395659 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083655043 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088824732 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151394871 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106695331 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078817812 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078588998 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092437619 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09649377 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065334486 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.06863348 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091121448 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091699195 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071923859 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104202559 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081974136 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.076419107 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066424045 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071929442 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098179251 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087308442 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083201499 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095887475 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084025514 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0643077 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07428406 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074278273 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082036214 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074081502 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079052938 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071253589 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069712471 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066454209 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075406909 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068612007 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062634466 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085214835 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076403104 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077956922 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105725809 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073508752 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065759823 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09243526 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126034471 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065838154 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067907661 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067736924 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076337955 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065886643 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092490578 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081526652 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064261619 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.08197076 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065586173 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06589377 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079729646 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066272488 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066378388 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075675854 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069965395 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083998252 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069231695 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083736011 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064601021 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075062674 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066158357 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066235855 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063082285 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098002698 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071491402 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113524193 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06601486 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062877717 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076475719 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075324003 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070524376 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06429565 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081579921 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075431256 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068325098 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075548823 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067108788 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067560038 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09838167 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063535942 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062411479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062217185 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067327305 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067430937 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06482434 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077270343 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064098402 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068046899 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080776201 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066756675 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066981993 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069079684 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068233373 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066436469 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077763389 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07077815 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068148393 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078699531 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067348833 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070004359 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07856207 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07322443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064206862 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065617491 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066713815 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065927417 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068680554 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06777482 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066770213 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070222776 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071435872 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069944153 seconds)
  done (took 10.64599195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156721454 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148009562 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067379521 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144100441 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073211965 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.069280667 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143205473 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084474722 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066916545 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068238407 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066623615 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094633848 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088185665 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.099862168 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.069452166 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065782227 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088030476 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098467428 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149444195 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144403953 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09094906 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074283487 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069550543 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068691454 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069044934 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075923235 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085657376 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074171901 seconds)
  done (took 4.394737221 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072343272 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.090230811 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068964582 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076190487 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083082011 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065316671 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067085669 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066742193 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078571765 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.073515281 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066122857 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071160407 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069131545 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067641884 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065924552 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071487023 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071685414 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063877393 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068721557 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069237911 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074856443 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08963721 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069051514 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064754192 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068230305 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064684368 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072283205 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.074686778 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064241758 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.07794483 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062256397 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069168073 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.07842752 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066038294 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064706428 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065697903 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065289922 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064928544 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065368937 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063648596 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06326142 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069580475 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063833467 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071242284 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078330978 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071932863 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066130441 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067484125 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067240196 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062254544 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067759304 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067894702 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067258557 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072891249 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069206283 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067037979 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068188875 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08949483 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070550213 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064183762 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064132138 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063107957 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066339845 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073248074 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081519271 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065934469 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063543292 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065253101 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069575702 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078822164 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06436419 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06980823 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062221989 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065594554 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068126904 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067700366 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066311834 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063387087 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064351089 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065021483 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065065417 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065128849 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064625114 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067882593 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063161459 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063873072 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066452337 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066141777 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.071246069 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064011947 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067317295 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065849867 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063784103 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067132019 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069762496 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067416251 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078657034 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075470955 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.0675154 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064359356 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079164945 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066724565 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063913738 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070612342 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068744097 seconds)
  done (took 9.035348422 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086462193 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06632651 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083455841 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.08914565 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075267766 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070324383 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07848916 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066097401 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082166073 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065535305 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073741878 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064582117 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079799553 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074861641 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066812293 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075929119 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068691018 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084697305 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080609155 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065323467 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075913809 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078508798 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079392053 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083398224 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083526119 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084697891 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079281924 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070425126 seconds)
  done (took 3.939095219 seconds)
done (took 38.142637109 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.83882478 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.996134971 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.824633133 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.039385857 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.077952539 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.954245229 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.868220851 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.823002736 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.112739884 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.85957913 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.045481344 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.277355735 seconds)
done (took 67.538105252 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.843419813 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.98473215 seconds)
    (2/2) benchmarking "String"...
    done (took 2.053350262 seconds)
  done (took 5.79619359 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.993386778 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.458978782 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.082915195 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.819689401 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.826384313 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.249861224 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.599270858 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.257174127 seconds)
  done (took 31.053633506 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.968302184 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.04267649 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.50372851 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.534988734 seconds)
  done (took 15.848689018 seconds)
done (took 64.384922859 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.849949114 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.822176897 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.887266536 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.855454644 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.821589725 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.824450899 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.826336401 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.823674432 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.828172992 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.989297297 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.82543299 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.8258621 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.824737817 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.86415298 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.488516801 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.882446814 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.831448671 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.833136235 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.826448807 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.82436861 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.825490166 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.82739629 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.303575462 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.009064503 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.438491222 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.003308613 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.196950546 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.2214617 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.829130768 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.824645162 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.896886253 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.99401854 seconds)
  done (took 205.689561469 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.823910667 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.680896725 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.693226135 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.870199143 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.447436781 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.998849761 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.922054431 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.460277259 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.826215291 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.840216924 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.958798985 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.823514868 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.977661532 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.772586294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.860424936 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.921773818 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.013952181 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.993608861 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.863141923 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.973860991 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.838910577 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.952046668 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.907033839 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.950671879 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.830446759 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.923267496 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.842891658 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.840921721 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.012198326 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.983044721 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.827452407 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.841159426 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.992111379 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.699343808 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.848605163 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.847982484 seconds)
  done (took 171.623970092 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.017511991 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.83042265 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.824997118 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.880040146 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.94856915 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.826814219 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.475932545 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.835181712 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.236235893 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.831312514 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.824486617 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.826365406 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.82593159 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.839052396 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.903326026 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.828461662 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.83949391 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.828314368 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.823995665 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.850233981 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.828363952 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.825247763 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.824638652 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.824645526 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.825153662 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825171578 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.825403074 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.824712404 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.174483548 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.067103848 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.827205294 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.828598782 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.320982918 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.837779816 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.957883592 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.83273275 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.917313371 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.882281733 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.942524436 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.829139603 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.044615445 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.90011444 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.827432933 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.827235658 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.891322245 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.839380527 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.828369359 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.828632666 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.830715086 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.893032779 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.06452258 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.828360064 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.950097711 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.304585837 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.827190139 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.826942031 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.827100594 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.826694159 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.398261947 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.828049581 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.828387641 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.833900917 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.835621452 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.829315549 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.828122607 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.215270679 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.898029621 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.97182527 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.004785074 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.828337179 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.380563231 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.909237337 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.826741207 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.827958349 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.828487179 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.82965373 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.827802085 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.829258447 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.831086534 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.951554332 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.837278031 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.944955742 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.908403311 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.9513513 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.832956712 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.839065072 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.663265762 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.899736174 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.865594634 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.655745809 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.833079593 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.202301764 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.593716546 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.830946085 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.828829472 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.841864803 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.83016666 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.831107594 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.830001429 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.910583483 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.830881378 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.952501751 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.551602814 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.16922541 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.831279274 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.830318688 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.838573307 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.911692922 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.95430191 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.833060833 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.895437078 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.835191707 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.832572573 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.917165162 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.830996625 seconds)
  done (took 406.340363023 seconds)
done (took 787.48970664 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.398631116 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.374294218 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.473167071 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.391634754 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.363214189 seconds)
  done (took 13.768203182 seconds)
done (took 15.536677777 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.84400281 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.835432298 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.886812777 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.915661087 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.851027873 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.849036241 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.911983438 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.854072332 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.880678864 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.888508183 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.917207109 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.919302267 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.856705173 seconds)
  done (took 26.179566554 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.839932657 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.974782552 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.055143391 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.871522038 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.839695546 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.054641162 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.896220872 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.967760643 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.976623489 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.059203106 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.065541167 seconds)
  done (took 23.371515758 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.839691206 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.977714511 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.059670452 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.872836567 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.842038608 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.075107125 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.900989415 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.969766049 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.975468063 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.060188991 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.067861492 seconds)
  done (took 23.418542787 seconds)
done (took 74.737719663 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.83545494 seconds)
  done (took 3.605135771 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.850937649 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.981010953 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.836008808 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.837417068 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.835494247 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.836840227 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.837173204 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.835933957 seconds)
  done (took 16.621655206 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.836547647 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.841376317 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.836404819 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.837593038 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.837046359 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.837042024 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.836679547 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.837112108 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.837375055 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.836604319 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.836812249 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.837017053 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.837201542 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.837141234 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.836932582 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.835917043 seconds)
  done (took 31.166271306 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.840517186 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.838958851 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.836739658 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.837565209 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.83710935 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.837601781 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.837983469 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.83704313 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.8372012 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.836910128 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.836900466 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.838316168 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.838463988 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.838309734 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.838175637 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.837176199 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.837887374 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.842021897 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.842805418 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.838773048 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.838687951 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.838358064 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.838961634 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.838967969 seconds)
  done (took 45.895803843 seconds)
done (took 99.067051488 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.521328682 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.832885309 seconds)
  done (took 10.127867583 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.838370142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.838894374 seconds)
  done (took 5.453004623 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.838363203 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.839691688 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.838597878 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.838498824 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.83886456 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.839222057 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.839927617 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.839460761 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.839987938 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.839817155 seconds)
  done (took 20.168008987 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.838615183 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.839367806 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.839377305 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.840229227 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.842362691 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.839342619 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.840200182 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.840256158 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.840251753 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.84038673 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.840209645 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.840598302 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.840878141 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.839814033 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.840480143 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.839126117 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.839444163 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.839652737 seconds)
  done (took 34.895768773 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.839915674 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.841583006 seconds)
  done (took 5.456457155 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.840728612 seconds)
    (2/7) benchmarking "second"...
    done (took 1.839939994 seconds)
    (3/7) benchmarking "month"...
    done (took 1.841281499 seconds)
    (4/7) benchmarking "year"...
    done (took 1.840985666 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.84022664 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.841219079 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.841250179 seconds)
  done (took 14.6617109 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.841861456 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.989165849 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.040612371 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.633911211 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.842276401 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.844355648 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.099975614 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.844619741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.845549635 seconds)
  done (took 20.757647198 seconds)
done (took 113.294420723 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.662844835 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.845085607 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.112374306 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.910615507 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.866428771 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.186077918 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.866001265 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.492620787 seconds)
done (took 42.718905655 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.910158297 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.841056915 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.886273434 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.889304416 seconds)
  done (took 22.392663998 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.83975362 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.181842627 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.865758292 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.687662342 seconds)
  done (took 22.369746356 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.219764321 seconds)
    (2/2) benchmarking "read"...
    done (took 2.189371125 seconds)
  done (took 6.189589098 seconds)
done (took 59.639918248 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843442327 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.841781497 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.842630702 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.840684975 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.844030252 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.842738125 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.841631852 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.843072126 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.842680074 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.8431258 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.842929956 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.842325867 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842830073 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843384952 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843233281 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843452057 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.842952405 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.843365697 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844499229 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84381476 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.844596111 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844523552 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.84326958 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.843880526 seconds)
  done (took 46.013162296 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.844185912 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.843608457 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.842940914 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.844894802 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.84340572 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.844273568 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.843776428 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.84370937 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.843593276 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.844666665 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843883689 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.843501282 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.845576846 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.845203231 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844913961 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.843927249 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.845275817 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844135442 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843807214 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.844526991 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.844641979 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844826146 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.845196718 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845374935 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.845174067 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844418355 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.846415872 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.845524702 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848309959 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.84644523 seconds)
  done (took 57.120343529 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.8463061 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.845705689 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.845432311 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.845397163 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.845365534 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.845969403 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.846477542 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.845383592 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.845844017 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.845985048 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.84599139 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.846786374 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.846571362 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.846388057 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.847637654 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.846208249 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.847160522 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.847668035 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.846224286 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.847149291 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.846671138 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.846094358 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.846708955 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847262796 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.847217814 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.847190928 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.846230791 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.847736849 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.847745977 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.846026662 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.849755683 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.847320022 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.846844852 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.846930305 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.84661568 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.846879444 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.848121964 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.846876775 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.848380914 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.847313744 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.84841818 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.848424209 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.848750724 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.848098528 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.848019215 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.848012044 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.848603709 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.848648697 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.848025161 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.847560315 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.848080005 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.847015755 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.84786142 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.848798928 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.849195735 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.847489842 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.848600711 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.849697648 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.848266691 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.849098718 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.847983719 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.848590004 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.850212303 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.849623994 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.849368219 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.849154258 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.850430355 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.848832884 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.850134501 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.849746349 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.851204523 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.850047013 seconds)
  done (took 134.816636448 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.850132292 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849653426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.849039279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.849960547 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849746759 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.850297043 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.850145599 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84904611 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848685324 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.850734729 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849429221 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849977872 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849553611 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850171783 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849924508 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.849966981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.850677346 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.850489242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.849970678 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.850811717 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850018921 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.850501499 seconds)
  done (took 42.484072242 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849213306 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.850296833 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.850539064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.850242643 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.851441318 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850240759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.851389249 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.851500725 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851030152 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851433896 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850994179 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851128499 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.850838243 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85165944 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851102086 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.853497127 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851907074 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851071495 seconds)
  done (took 35.104681737 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.852327066 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.852055905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.852274218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.852586586 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.852722104 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852783399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852624762 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.851803912 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.851002768 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.851770645 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.853266842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852139854 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.853895516 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85218943 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852303111 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.852748525 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.852560317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852315663 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853287817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85226671 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.8518293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852929982 seconds)
  done (took 42.541685846 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852100091 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853261368 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.853141989 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852661024 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.853327208 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.852643677 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.854947337 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.852909842 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.853274536 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.85325144 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852052157 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.853437609 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.852533377 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.852432107 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.853057231 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852906914 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.853386438 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.856267381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852924358 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.85271651 seconds)
  done (took 38.851117074 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854974838 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854463028 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854284892 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852619023 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854580231 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.854098557 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854966568 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.854837804 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855117723 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.85587402 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.854387463 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85481421 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854433493 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854735523 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.8549438 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855301961 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855180425 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855705829 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.853462775 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854365023 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854789304 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854187487 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856190318 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855792796 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.85602173 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856214939 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854747955 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856001775 seconds)
  done (took 53.726269204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855195587 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854762424 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.855677005 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.855754401 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.856013484 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.855120011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.856383989 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.855798922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.855292909 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.855055673 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.855648163 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.854838051 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.856129819 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.855825844 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.855632987 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.856771199 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856255643 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.855957973 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856136343 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856237082 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.85691818 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856795751 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.856408264 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.856787496 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857262277 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.857301863 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856806369 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.856585992 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856705894 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.857260737 seconds)
  done (took 57.474831422 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.877481653 seconds)
    (2/2) benchmarking "in"...
    done (took 1.877498325 seconds)
  done (took 5.545939249 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.856833454 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857709878 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.858060764 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.858565798 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.85799549 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.857756019 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.85848239 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857504038 seconds)
  done (took 16.654021675 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.85730862 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.862083148 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.859300829 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.858339643 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.860003425 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866688108 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.859407032 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.85808563 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.859162453 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.8587233 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.86603519 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.861719969 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.865926287 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.861471033 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.858888251 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.859941792 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.858398802 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860083441 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.860046538 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.859214202 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.862005101 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.860095133 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.859580209 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.85892477 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.858526202 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.861778831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.873368398 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.859560342 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86011161 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.858619077 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.864562331 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.859791929 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.859036149 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860895123 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.859353124 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.861536601 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.867125746 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.860968208 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.860719607 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.861006869 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.862740774 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.862074006 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.863977669 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.8678823 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.861018193 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.859735647 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.861299394 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.859979089 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.861818412 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.863377249 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.868546658 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861940409 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.86141712 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.861798843 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.863581392 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.861111694 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.861821623 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.863387267 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.870312925 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.870707313 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.864977119 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.880889612 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.870410935 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.8623006 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.862443218 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871719914 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.884768841 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.863396512 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.862379713 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.86187584 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.870403094 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.863114941 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.863077477 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.862307547 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874625155 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.872429407 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.861997267 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.861281421 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.861511073 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.863149583 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.863676279 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.862851418 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862973136 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.863258532 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872394241 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.885702812 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.8623771 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.863236245 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.864784086 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.864335356 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.865999651 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.868977902 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.863447244 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.863093844 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.863900633 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.865844212 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.862891631 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.864199455 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.862232127 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.872927847 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.864433073 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.864778313 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.867450353 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.872693109 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.865214965 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.864989764 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.864815331 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.868171851 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.872597023 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.864248705 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.864231811 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.864607797 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.866309652 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.868961239 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.86449577 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867601889 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.873208993 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.872237442 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.865798138 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.869348158 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.868077762 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.86789468 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874370459 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.890817933 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.86480341 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.869072243 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.870083813 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.876720375 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.868991662 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.865942314 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.867674858 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.865986332 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.864664895 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.86617859 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.865715452 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.865567398 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.865559359 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.866875629 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.866069168 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.867037919 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.867291997 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.86770327 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.868472249 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.866276481 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.8703703 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.865851099 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.868378149 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.874639602 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.867000641 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.866293663 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.866134062 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.869409171 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.868016452 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.866845711 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.86747054 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.868861877 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.867200867 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.867987882 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.86836901 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.866267891 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.867006712 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.868090898 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.871574517 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.868833897 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.867278764 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.866533492 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867946642 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.867386512 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.868516586 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.86810741 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.870386239 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870755518 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.871682174 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.868730283 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.86836416 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.867469312 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.86857049 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.868904279 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.871676054 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.879422775 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.87129309 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.877234616 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.86873004 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.87644968 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.869197757 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.870206077 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.870135104 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.872117844 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.868371248 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.868279023 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.868440492 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.872345493 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.888119165 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.879500304 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.871467463 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.871490664 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.874284785 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.873805183 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.875037968 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.870424614 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869476542 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.870873872 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.86917396 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.87280768 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.869966755 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.872888182 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.869087738 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.870323359 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.873776196 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.869866622 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.870106152 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.871687697 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.86989751 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.872665219 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.871448395 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.870378429 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.870314681 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.871063928 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.87863426 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873255532 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.871359169 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.870600994 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872436923 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.871991512 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.872906974 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.872642122 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.875873747 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.870644326 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.872675445 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879374437 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.872369576 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.868741258 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.8683061 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.869131757 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.871033902 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.868949823 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.872256807 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.876820488 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.871181973 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.870553108 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.874961449 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.869274058 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.871614785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.868730733 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.870883361 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.869896912 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.871999658 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.870193926 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.870182627 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.878373166 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.869700042 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.869368785 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.870802755 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.872267233 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.871307287 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.872185833 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.870332894 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873683252 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.87872525 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.875596318 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.872132839 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.873555476 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.872830717 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.871214967 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.874683008 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.871552913 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883384016 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.881142917 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.870852259 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.87091813 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.870078148 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.873769431 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.870857073 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.869993542 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.878956509 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.870757737 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.871743557 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.875489596 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.871884378 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.870368408 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.878350978 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872250267 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.874548689 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.872736939 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.872237688 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.870974662 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.872066999 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874009902 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.872377585 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.87374783 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.875704392 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.871859946 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.873101078 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.872105819 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.881258889 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.873045338 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.872048552 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.880075496 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.873820941 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.871542018 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.872738446 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.873107541 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.872271292 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.872148483 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.872645928 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.873984415 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.872921585 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.877004323 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.883427289 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.877419569 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.884309127 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.875406408 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.883466466 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.8737828 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.8730864 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.873527342 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.878016871 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.882220446 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.874159717 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.873672099 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.881458345 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.875768518 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.874626688 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.877389506 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.874811859 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.874079401 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.873681853 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.875374687 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.8801351 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.8782335 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.875295996 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.874500218 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.875612195 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.874815342 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.877668443 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.875295949 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.875057988 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.874943505 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.874404117 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.874510562 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.874076339 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.87505931 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.875244088 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.875004382 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.87604392 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.882259264 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.875794551 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.875472023 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879266322 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.875385385 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.884248912 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.874929239 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.874420512 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.876739269 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.876202746 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.878854924 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.875762164 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.875332806 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.875750237 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.874911381 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.876061452 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.888561585 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.882507922 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.879640471 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.876808809 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.876075973 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.876648521 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885633092 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.899553719 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87545807 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.877989636 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.8807828 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.883563592 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.878511484 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.882931052 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.880584112 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.884816639 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.878449054 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.877202259 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.881961923 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.888785777 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877582678 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.878573359 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.877522707 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.882487529 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.880802653 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.877179913 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.877109394 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.880549473 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.87872672 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.88890333 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.878793501 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.879223458 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877117097 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.877234272 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.878138347 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.878744907 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.879152994 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.879027866 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.877010852 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.877506973 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.880438363 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.881869107 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.87680357 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.881474287 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.886559134 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877912571 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.878464972 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.880378093 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.878765567 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.879185523 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878254102 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.878537971 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.879932482 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.879169899 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.879175034 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.882679905 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.888155962 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.88027529 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.878048427 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.880121467 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.88302276 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.878532399 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.879718645 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.879464258 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.88911185 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.883263834 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.891128242 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.887263897 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.879106505 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.881072439 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887365929 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.887507648 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.878908071 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.879115719 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.880551427 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.882499792 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.883288439 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.881035524 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.8799737 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.880901763 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.886125962 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.880702787 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.881015815 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.880601271 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.88063823 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.881684718 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.881648916 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.886547553 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.881071699 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.881891962 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.879592627 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.88159602 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.881532793 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.883067356 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.880926912 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.881308544 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.883533825 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.882550401 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.884960755 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.881627854 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.881156646 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.882042347 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.881881594 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.881659666 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.881779311 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.880163562 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.882129025 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.885754425 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.889475812 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.881617415 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.882282221 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.882237234 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.885393601 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.881835133 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.882493282 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881508747 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.881931745 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.891087982 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.884216763 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.882596338 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.882949299 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.884454797 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.887600064 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.884517316 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.887426754 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.882801924 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.882797517 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.884287337 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.885911393 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.892535833 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.886860653 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.886152735 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.892326379 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.887175609 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.884919024 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.884258311 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.884281549 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.884024832 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.884472507 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.886529582 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.884322246 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.886769418 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.883051224 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.88580882 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.884100511 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.885677549 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.883947826 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.88276654 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.887250224 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.89277248 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.892731991 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.88455784 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.884244112 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.883458396 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.886599029 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.895343976 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.882896367 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.884043944 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.884243122 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.884930744 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.885566533 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.892132277 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.89462048 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.887862368 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.884995089 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.890230266 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.903991323 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.887531132 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893917205 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.917838857 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.887088115 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.884393876 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.886065861 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.887571384 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.886442823 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.889739845 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.886559541 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.89244659 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.887205351 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.88618469 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.893771833 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.886862512 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.886543092 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.885029418 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.88807988 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.891891546 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.885714777 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.893005532 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.886212186 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.886297038 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.886534629 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.889667341 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.886014114 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.887146021 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.886725439 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.888534714 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.886634791 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.886599203 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89489986 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.887880235 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.88803839 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.898872498 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.897929894 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.886065252 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.886872154 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.886552195 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.892441032 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.890677522 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.887934371 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.889951748 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.897100583 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.89088398 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.897085641 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.888109818 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.887762303 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.887963016 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.88806343 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887785843 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.900315215 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.899482026 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.88808567 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.889343232 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.893810677 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.88921428 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.894279574 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.895354856 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.890447417 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.890664574 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.88913699 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.888728402 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.888130378 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.890091895 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.892766756 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.898104362 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.889133888 seconds)
  done (took 1119.80976283 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.889053829 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890919105 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.890679703 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.889231926 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888098342 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889436311 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.89066379 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.889819441 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.889867827 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.889408231 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.889610801 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890693257 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.887730196 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.887667147 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887660081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.88902713 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.889558341 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.890167003 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.888319298 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.886652895 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.888454189 seconds)
  done (took 41.494491017 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.889757796 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.887629873 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.887178434 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.888172353 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.888200787 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.888832118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.88894116 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.888450858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.887292257 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888657661 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.88899269 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88872285 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88918839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.887995702 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889300269 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.889139709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.885213691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.883811164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.884849065 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.885315938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.885866478 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.885568915 seconds)
  done (took 43.348559577 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.883753054 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.883538168 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.883953773 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.884902836 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.884851206 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.884567919 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.883496305 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.884406926 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.884022303 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.884969772 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.890405261 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.891433485 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.883163921 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.887078161 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.882441695 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.880526858 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.029312839 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.880668703 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.879700517 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.882121435 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.880326522 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.885983459 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.880597884 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.879543905 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.879357699 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.88087975 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.880049748 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.879988069 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.880628066 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.881527814 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.885307378 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.879277292 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.88050802 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.882209755 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.879978094 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.881080957 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.884025823 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.880857077 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.878761532 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.880245999 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.889107068 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.904422485 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.88001321 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.880523273 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.887990918 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.880534982 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.879774778 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.881733525 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.888109641 seconds)
  done (took 94.241182792 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.880837242 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.881004069 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.881087502 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878709794 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.879357084 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.879621424 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.881374303 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.879565976 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.880276236 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.880466607 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.880128038 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.87944573 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.88153944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.880112652 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.880247772 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.880899058 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.880799331 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88149647 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.879841548 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.879831316 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.879207951 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.880161271 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.881101067 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.878952212 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.879942275 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.878694135 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879029073 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.878598599 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.879166473 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.878276333 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.878633975 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878033238 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.878392764 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.879661701 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.878058934 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.876303209 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.8775854 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.877968704 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878625061 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.877620027 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.878235726 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.877131705 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.877801066 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.877116662 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87757531 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.877966611 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.877958247 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.878054381 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.878539847 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.878347716 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.878385553 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.877292956 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.878781309 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.878853952 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.879742881 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.87773947 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.878870588 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.878836246 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.878379161 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.878276602 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.880023456 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.879015894 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.879863204 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.878511438 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.878755627 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.879103646 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.878867511 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.880120714 seconds)
  done (took 129.594338935 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.878562284 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.880470106 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.879046807 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879437362 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878468285 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.878646987 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.879030415 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.879478498 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.878390588 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.878561426 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.878251652 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.878717327 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.88073201 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.877925382 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.879094239 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.878385211 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.878474827 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.880637199 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.87905198 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.878953121 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.878427477 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.879387304 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.878209875 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.87899031 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.878415395 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.879240701 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.879511007 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.878648874 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.878841008 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.879200045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.879310495 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.879981919 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.878977812 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.880986114 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.87980694 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.879274402 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.879492707 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878472983 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.880384249 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.880955876 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.879488359 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.878516376 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.879919514 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.879647033 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.878531666 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.876291511 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.874265236 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.8762538 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.875967544 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.876473194 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.872572827 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.872297723 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87153644 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.873312777 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.873536498 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.872202094 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871564213 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871764553 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871550408 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.871744413 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.873675993 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.870706516 seconds)
  done (took 118.223353214 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870449771 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.87046426 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.872569642 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.870458389 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.871170936 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.870877347 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.87198009 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.870288646 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.870191358 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.870759111 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870409299 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869977767 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870847878 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870560211 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.868782792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869846839 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868354607 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.868664322 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870331522 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.868018477 seconds)
  done (took 39.209364237 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.869180868 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.867608352 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.869945019 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.868947778 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.868633179 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.868889781 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.868023995 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869047725 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869305276 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869000499 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.868442902 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.869323129 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867906976 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.868865464 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.868754454 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.868159773 seconds)
  done (took 31.700347521 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.870143691 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.868186542 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.868811695 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.868278222 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.869049796 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.869730294 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.869733276 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.869977053 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.868523649 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.868627615 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.868617247 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867966726 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.869325566 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.870367928 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.867358226 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.868193721 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.867561977 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.86839132 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.868348266 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.867779728 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.867676278 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.867711939 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.868253839 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.868008182 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.867032277 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.868122725 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.866237619 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.866744156 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.867414926 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.869139636 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.868425058 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.867542826 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.867254721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.86743039 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.867404133 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.869489002 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.867437694 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.866957051 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.866614923 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.86813039 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.86662029 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.866689645 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.865951168 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.867462148 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.867671915 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.86782682 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.866003216 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.86834759 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.867135655 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.867790012 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.868586216 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.867829408 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.868082345 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.868661201 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.866579035 seconds)
  done (took 104.543382356 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866873039 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.865548577 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.866807613 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.866674706 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.866213394 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.86847954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.866703429 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.867012102 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865790232 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.866687035 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.868012604 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.865948278 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.86579268 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.866397138 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.867335192 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.867114853 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.867428309 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.866458198 seconds)
  done (took 35.402300238 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.865499241 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.866964645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.867348092 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.865756 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.864977323 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.865796663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.866851818 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.868082972 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865757421 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.866652103 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866871831 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.8661096 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865929733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.867763171 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.866688999 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865522862 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.865654611 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867816371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.867567129 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866547804 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.866079073 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.866327005 seconds)
  done (took 42.862740557 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.867101104 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.864638187 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.878055141 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.884767307 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.883912381 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.896410755 seconds)
  done (took 13.073265387 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866246898 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866430236 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867399495 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866348389 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867878736 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867235412 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865507812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866087313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867091058 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866839984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866089525 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865692308 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866354569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866888056 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866275269 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867177428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865928321 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866207024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865858068 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865303993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8655958 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866348147 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865937881 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865871071 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866656209 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865584665 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866083134 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866354931 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866085594 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865421843 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865733104 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866818809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864330207 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865781581 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865619851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864987868 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868146409 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865959029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865906046 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865311815 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86556884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866261911 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866275144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864949779 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865086912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865951868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865383162 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866865037 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866070993 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866784856 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866160505 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866885533 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868290949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8659799 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865651949 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866545842 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866790313 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866158254 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866133759 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865349458 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865447779 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863984403 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865501504 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8653869 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864743012 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86437049 seconds)
  done (took 124.962738096 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864084746 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865264636 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865062088 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866047325 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864401251 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864743803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864331537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865313289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864192466 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863878356 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865446042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86541728 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866011572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865407729 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864282205 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86518029 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864837636 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866178057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865832215 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864640887 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865888126 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864575798 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864062676 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866293738 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866282549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864831974 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865211071 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86587985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866181736 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866052925 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86707252 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865504582 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865473287 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866128728 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866951371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865754906 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865723037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865416383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866094098 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866593728 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866098138 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866676266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865457799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866303526 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867706309 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86652682 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866147666 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867491749 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866557573 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866044301 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870721605 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867277529 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866793497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866202988 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866072139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867804904 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866985475 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867015096 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868162766 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866717013 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868484475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866693898 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867481491 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868019118 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867692016 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86838859 seconds)
  done (took 124.962967177 seconds)
done (took 2595.547049701 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.880589833 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.967207852 seconds)
  done (took 15.652469032 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.032706832 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.985182455 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.869649805 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.929705044 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.87558438 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.894103392 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.894105408 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.871077559 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.872107672 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.871089605 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.870773345 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.05671986 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.871193539 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.871003237 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.870847729 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.962567092 seconds)
  done (took 52.404437294 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.876039192 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.876600586 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.887453936 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.876128471 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.875835179 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.887887282 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.905283157 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.879736447 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.911708785 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.890776645 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.947825173 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.888161889 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.87811746 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.929474987 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.89219208 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.892550135 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.970091334 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.951658048 seconds)
  done (took 36.021171217 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.952725528 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.885579877 seconds)
  done (took 10.646372946 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.899949386 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.901276039 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.900148703 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.888922958 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.899117448 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.901065172 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.897237022 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.901445344 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.906264137 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.89482852 seconds)
  done (took 70.795700261 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.881103734 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.876841474 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.876731022 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.872347508 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.871286192 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.875418492 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.877032173 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.877077326 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.572513931 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.9130951 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.885352137 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.883432186 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.874917379 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.87753651 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.872528503 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.900389088 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.993265433 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.871661051 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.873970735 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.880367551 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.875619599 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.933048495 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.887650001 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.875082269 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.911062741 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.563903756 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.8863678 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.879568595 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.007874069 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.87502218 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.875353113 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.086435415 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.879317043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.338803158 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.157325004 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.879762081 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.887398951 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.882560889 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.871777836 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.999007026 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.874257192 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.88355117 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.817147254 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.122342957 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.968726628 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.921676609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.222051928 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.877825341 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.877322611 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.907691862 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.87809815 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.875808237 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.892275592 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.391842125 seconds)
  done (took 133.276441053 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.872802321 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.223633308 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038782938 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.872259835 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156463181 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07727635 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.874012999 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918586492 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873325988 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.103468312 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.127944099 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.976927248 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875636536 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.872921976 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871065509 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.871603301 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015943655 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.942416761 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876052413 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.871708477 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899609179 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.112243759 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.992876502 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.877886169 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.899152576 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078754485 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.992725698 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.975981876 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.656739645 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.872250733 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.934808591 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875748577 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.873842629 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873581603 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.026637876 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.967705072 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955262133 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.875757651 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874652428 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872820357 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.530516557 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071076063 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.97087994 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.997346785 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.124170633 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076934068 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.651126458 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.875852541 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.603688691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.037401471 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.098757758 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.105301941 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.991388803 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.876226039 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.396000105 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.874848383 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.875430983 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119408361 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093139682 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970927085 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879212496 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.875760855 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.87397992 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.109337757 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.874937347 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.970753368 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877605459 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.875921906 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968343344 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971784051 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.106211265 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084003475 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903454932 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.200906549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.376966513 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11901576 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.938758187 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125084089 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.877827551 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.874947255 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953086849 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.705890402 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128042086 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.113382231 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11788362 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908996706 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.617668715 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.87544956 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.098898037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.097891232 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.122213421 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.117638762 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.107480667 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.207397982 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.874696484 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.874501681 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.138172819 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994236374 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.879032575 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.215402016 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103623875 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.422204676 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.90036347 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180410586 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00463832 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.878415424 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.500654601 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.877726091 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.096484678 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.914264943 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.877986608 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879536639 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.093950068 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.846013227 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876972693 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.526578158 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.936344098 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.881311922 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106784451 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.880083615 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137026464 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879353918 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104356572 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.347854871 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.906182871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.103159009 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.120398704 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.879742862 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120208572 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11286865 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.990819002 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096468846 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.57771174 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.877962344 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.163568386 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.879292622 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.878670753 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.046870555 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.879725657 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018523433 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.882941343 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.157601797 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898076457 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105331936 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879993032 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.131932247 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908265633 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926055517 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.881380433 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00353136 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881100262 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.706766857 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.035019487 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881626909 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.879427213 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.680241928 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.880545173 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026301123 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.101662176 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900162162 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947230078 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.544721613 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877662545 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958991144 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.899837687 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.271192922 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.879756591 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.129253279 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.882501871 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.879206001 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.880575793 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.109389756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.061816645 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.882703789 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.880047089 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.77656589 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.879963902 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880061851 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.05884178 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.258139969 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.878954664 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079119715 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882362415 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006972177 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.881745857 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.946183045 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.217086103 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880275825 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.879768376 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.881011327 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.878304217 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.880653498 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.138955297 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.903861883 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.397082975 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.015620381 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.144901519 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.188666823 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.11845143 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.921273591 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.881735899 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134396797 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.884180036 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.941902613 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.886557535 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900349669 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108060937 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884963533 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087071114 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.147508624 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.72531683 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927009978 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.883822277 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879803402 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.880851314 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.018131077 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961888314 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.884184373 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.880312108 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99524609 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000476037 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.090773828 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.884010965 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.000283885 seconds)
  done (took 904.57834745 seconds)
done (took 1225.176871361 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.883503853 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.88111919 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.882025167 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.884945941 seconds)
  done (took 29.346521519 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.885939056 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.884810506 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.883684276 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.886478152 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.884556666 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.88449399 seconds)
  done (took 13.125947304 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.997785231 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.88464247 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.883707188 seconds)
  done (took 21.581711174 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.960799206 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.299450116 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.024986397 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.312035793 seconds)
  done (took 10.412948999 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.885051564 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.883845405 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.884450232 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.885228398 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.885607677 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.886518892 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.883848755 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.884893581 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.887656449 seconds)
  done (took 18.783567769 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.600590158 seconds)
done (took 99.667367172 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.964036344 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.124870441 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.952228342 seconds)
    (4/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.962369028 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.884642906 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.980598438 seconds)
    (7/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.096386093 seconds)
    (8/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.964443134 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.014129018 seconds)
    (10/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.655009285 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.888010486 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.620523609 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.911672064 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.0168917 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.190293388 seconds)
    (16/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.890307357 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.887130522 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.506175545 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.171354581 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.953817982 seconds)
    (21/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.010948835 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.91031144 seconds)
    (23/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.97741178 seconds)
    (24/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.264648445 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.971123676 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.887895271 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.899493514 seconds)
    (28/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.048420936 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.88537295 seconds)
    (30/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 3.736654526 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.886448055 seconds)
    (32/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.985368129 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.030760434 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.887885087 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.985139339 seconds)
    (36/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.200548917 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.97990643 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.913664069 seconds)
    (39/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.961595915 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.480921174 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.325671053 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.729042839 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.987696405 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.261101753 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.016949624 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.188666419 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.313175655 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.10447549 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.207416116 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.652890263 seconds)
    (51/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.217724599 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.537729215 seconds)
    (53/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.287441249 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.137836854 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.213375356 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.26445401 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.266080483 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.890920109 seconds)
    (59/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.896684735 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.046440894 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.910049144 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.113376888 seconds)
    (63/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.02387866 seconds)
    (64/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.9765052 seconds)
    (65/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.583197709 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.969208958 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.276083456 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.145814319 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.113179443 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.041130624 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.89408141 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.064818714 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.913056972 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.908477149 seconds)
    (75/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.216115265 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.216837059 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.86108762 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.06199793 seconds)
    (79/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.177819462 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.856653969 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.491118252 seconds)
    (82/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.977247644 seconds)
    (83/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.757153887 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.253722438 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.000898002 seconds)
    (86/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.359269762 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.117551619 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.022634758 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.642566338 seconds)
    (90/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.03145746 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.890718295 seconds)
    (92/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.993715907 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.890473922 seconds)
    (94/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 3.541367094 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.13430567 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.91073321 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.013415104 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.056888677 seconds)
    (99/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.363010369 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.895647203 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.20293253 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.893836052 seconds)
    (103/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.026691322 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 4.852942931 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.200025356 seconds)
    (106/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.646441736 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.018250841 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.978380637 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.993337155 seconds)
    (110/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.634392323 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.547159038 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.89814857 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.333249918 seconds)
    (114/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.92026118 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.200229909 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.022519498 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.914612808 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.893396179 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.28736003 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.023935522 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.731626056 seconds)
    (122/309) benchmarking ("sort", Float32, false)...
    done (took 5.548518692 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.150701415 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.910376757 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.311192487 seconds)
    (126/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.893004973 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.269114389 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.649380685 seconds)
    (129/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.895001244 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.763289853 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.169716154 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.282038736 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.239641973 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.137993892 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.541877722 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.834577323 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.199378254 seconds)
    (138/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.893952842 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1909644 seconds)
    (140/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.973080474 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.43922594 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.988836529 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.212097929 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.921698809 seconds)
    (145/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.403904057 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.074505324 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.149460018 seconds)
    (148/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.092956989 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.188887713 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080456427 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.919835885 seconds)
    (152/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.09199983 seconds)
    (153/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.995140247 seconds)
    (154/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.00616981 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.063268645 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.69214094 seconds)
    (157/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.168586466 seconds)
    (158/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.747652768 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.084447718 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.898132258 seconds)
    (161/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.899543331 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.09156252 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.220738519 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.742667539 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.902488203 seconds)
    (166/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.018030359 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.03027196 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.897333944 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.661327881 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.901629748 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.033729097 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.210652112 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.103805757 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.596110404 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.153790398 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.102116041 seconds)
    (177/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.922482098 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.232069621 seconds)
    (179/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.177950971 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.285099807 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.910341872 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.909528279 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.303610221 seconds)
    (184/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.055733584 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.080303753 seconds)
    (186/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.294093671 seconds)
    (187/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.043705097 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.901582407 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.163259438 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.159130544 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.036057781 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.209385117 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.776934485 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 5.606800357 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.901633535 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.152530102 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.942308253 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.97256687 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.900867463 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.976958795 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.188367736 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.543100274 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.214377694 seconds)
    (204/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.006263114 seconds)
    (205/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.113840224 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.904438782 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.289588876 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.236923086 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.127011545 seconds)
    (210/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.903993892 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.031496901 seconds)
    (212/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.896988702 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.618847784 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.666956696 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.129093575 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.6335936 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.202667997 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.934581211 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.898799331 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.900386302 seconds)
    (221/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.903679684 seconds)
    (222/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.375734368 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.902219012 seconds)
    (224/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.976945938 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.079087912 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.301977579 seconds)
    (227/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.145908128 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.034568975 seconds)
    (229/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.312418231 seconds)
    (230/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.157402484 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.92069375 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.960343054 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.959057828 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.046030572 seconds)
    (235/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.36918884 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.914517194 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.004658524 seconds)
    (238/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.99689331 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.899419249 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.495096354 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.208712006 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.298583982 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.251700462 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.928604794 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.898943183 seconds)
    (246/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.731724717 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.040776177 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.162768507 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.959682984 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.380955335 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.159489146 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.829596963 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.993459119 seconds)
    (254/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.068614292 seconds)
    (255/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.306771864 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.902474317 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 6.975549733 seconds)
    (258/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.063103106 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.110748707 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.91864821 seconds)
    (261/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.814818764 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.044565885 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.979568796 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.6654729 seconds)
    (265/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.923542667 seconds)
    (266/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.02637349 seconds)
    (267/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.100106997 seconds)
    (268/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.984759909 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.900261944 seconds)
    (270/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.016339516 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.041945689 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.011841731 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.192544673 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.030832653 seconds)
    (275/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.052676343 seconds)
    (276/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.352178218 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.980205252 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.18897349 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.986343645 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.222937332 seconds)
    (281/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.942436771 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.163185383 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.927947611 seconds)
    (284/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.377386909 seconds)
    (285/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.930374111 seconds)
    (286/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.203871942 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.165221211 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.090279841 seconds)
    (289/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.908645126 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.90566994 seconds)
    (291/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.34720653 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.004222007 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.919648488 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.761480657 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.187471203 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.861363344 seconds)
    (297/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.030853528 seconds)
    (298/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.117808689 seconds)
    (299/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.928667489 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.039018873 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.797911537 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.938779661 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.932959825 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.027163844 seconds)
    (305/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.596886363 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.111301317 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.303145807 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.165331409 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.906019351 seconds)
  done (took 1017.961237947 seconds)
done (took 1019.852576007 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.125530713 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.930615331 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.909423905 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.931436642 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.021531963 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.951945565 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.924590144 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.915012108 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.960777384 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.959861072 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.907705278 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.951391753 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.9104032 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.910579346 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.91229466 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929393139 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.211570184 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.936638599 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.928582142 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.92277431 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.926900563 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.909970003 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.960065209 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.950130898 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.91510222 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.914889602 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.914689882 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.929589112 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.023118873 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.91374508 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.917023055 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.923545099 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.212165214 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.935892668 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.910727594 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.930872162 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.922890163 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.924677087 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.917136678 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.942919244 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.34853991 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.915887175 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.91385145 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.912106661 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.912847531 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.921127162 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.911649602 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.921090873 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.929704841 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9310565 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.347713031 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.931663033 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.916312449 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.912686276 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.925965919 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.912622621 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.917401806 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.933881697 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.931671504 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.93207549 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.207608525 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.945204987 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.918637542 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.931201608 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.921850721 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.38176939 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.917858276 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.921524273 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351186522 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.926913038 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.383388784 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.927659009 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.916257043 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.927563051 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.945828033 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.213769629 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.937773092 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.912841234 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.922136455 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.911680436 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.92685411 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.932519854 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.920741363 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.917050544 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.932947635 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.956367373 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.927804228 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.914124803 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.926274555 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.934299146 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.922696618 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.927053351 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.919271028 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.913415755 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.926753785 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.918850099 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.917337715 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.918803965 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.920840748 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.928344901 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.349667665 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940570386 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.912169065 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.91316262 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.915577848 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.92980387 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.352345822 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.92107005 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.939382785 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.965168367 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.918352707 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.206353574 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.944658798 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.937020672 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.927854567 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.919685792 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.914868956 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.206640544 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.37566677 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.936030031 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.917779951 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.914691212 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935603628 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.917986658 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.914373175 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.216822954 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.944994225 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935943595 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.039229419 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.929871204 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.948670832 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.914138153 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.920737184 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.962167922 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.936972756 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.948593068 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.921993952 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.936427473 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.935935326 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.914858845 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.928968188 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.93105468 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.917972117 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.926695087 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.916076251 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.962560828 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935790556 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935002128 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.939542698 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.039002755 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.915741177 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.20907149 seconds)
done (took 302.700320026 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.989483808 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.912663959 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.029769769 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.91371722 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.00093938 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.984100714 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.914072165 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.913803548 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.914322432 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.413392096 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.914883144 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.918644191 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.912927383 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.9140396 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.983089385 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.914630363 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.914934338 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.197636406 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.915864203 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.992915666 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.915197491 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.914959993 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.913787094 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.420109883 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.915290152 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.913969805 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.993889925 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.91384772 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.205042644 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.914111474 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.912616161 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.214693963 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.993356404 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.928358999 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.92259019 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.922154862 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.002563951 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.923688979 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.982472277 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.982596769 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.032125694 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.948186612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.914268515 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.914334226 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.919568672 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.916620758 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.916120953 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.948707405 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.915990435 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.921003334 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.203918707 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.923174655 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.921273227 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.916986539 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.916136214 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.931392167 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.917071634 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.916694492 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.994311458 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.915923434 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.982816212 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.419124146 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.416291304 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.917784281 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.916477558 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.916493267 seconds)
  done (took 187.69079669 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.982007555 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.988424819 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.980722402 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.922293772 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.965049434 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.982865295 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.922279435 seconds)
  done (took 15.590859464 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.924498952 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.918454809 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.968364049 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.965606557 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.917881697 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.102856042 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.929527912 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.921552767 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.944905248 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.917604603 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.567914489 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.967313068 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.924655772 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.918407772 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.928812606 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.972039554 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.91902947 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.917929312 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.028211482 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.066454565 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.923719364 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.926023373 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.944486836 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.929324746 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.918708889 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.91831791 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.918578189 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.924271248 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.918871537 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.919325386 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.919246036 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.968830803 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918177334 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.916757207 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.919948179 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.919845825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.917920323 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91994063 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.919515743 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.916862972 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.922595984 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.920149479 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.920607642 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.919672847 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.918752196 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.942266204 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.9196627 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.920409394 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.919430161 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.920399081 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.946800657 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.92045855 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.921165725 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.925020727 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.963067265 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.926903266 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.922949389 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.920521552 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.920620298 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.919526369 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.920247429 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.069088193 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.970511827 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.921235497 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.969641088 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.073380296 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.921570627 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.919630235 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.920003822 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.008116632 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.919988463 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.971966376 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.921216822 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.032959084 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.920744594 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.106692227 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.945246106 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.922859344 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.92473831 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.921786139 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.927864595 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.922075441 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.923200102 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.92790115 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.929031924 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.921846 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.921366841 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.922652064 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.929314464 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.923202548 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.971665784 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.922737026 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.922055444 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.056381797 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.922252561 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.030664385 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.948945354 seconds)
  done (took 210.868829736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.92822488 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.932185963 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.924513767 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.93616336 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.923701899 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.922529004 seconds)
  done (took 13.418774098 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.92470333 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.925449007 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.922494995 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.923129309 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.922755332 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.923520426 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.923104477 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.924773162 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.925808009 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.923244297 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.92532118 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.923492691 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.923057789 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.923681269 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.924002886 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.923183799 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.924686131 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.924060694 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.923846292 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.924451392 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.058666303 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.92477241 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.924760728 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.927340208 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.927229898 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.927438864 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.935664726 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.924458968 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.92472831 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.932041606 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.929047879 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.92584824 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.929448711 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.930043931 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.927870185 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.928398304 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.928001156 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.926192571 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.925371524 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.925332994 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.927914069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.924742266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.924931118 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.927977678 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.927750236 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.931742102 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.928263879 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.936158863 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.926514407 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.927497452 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.927818607 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.925997322 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.926311738 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.92677008 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.930792172 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.931389198 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.932776582 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.927385868 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.927050148 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.930322175 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.929927351 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.926062592 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.927535752 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.930336353 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.934056528 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.927491902 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.929446074 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.930110661 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.926802217 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.928567939 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.927429012 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.927474703 seconds)
  done (took 141.732987378 seconds)
done (took 571.161167679 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.631653881 seconds)
  done (took 9.486980383 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.990963033 seconds)
  done (took 8.851687351 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.593741967 seconds)
  done (took 10.452070792 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.950688582 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.947132514 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.931620969 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.928689989 seconds)
  done (took 29.624698569 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.24991281 seconds)
  done (took 9.106678735 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.935873767 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.925559432 seconds)
  done (took 15.790510834 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.929249686 seconds)
  done (took 8.78618768 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.310314677 seconds)
  done (took 9.179218136 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.933547157 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.951993227 seconds)
  done (took 15.763976656 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.930143147 seconds)
  done (took 8.788065053 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.70395787 seconds)
  done (took 9.656873219 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.933933495 seconds)
  done (took 8.808991701 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.002916822 seconds)
  done (took 8.860172069 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.207635549 seconds)
  done (took 10.06568204 seconds)
done (took 165.080042015 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.931847314 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.928665624 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.928975935 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.929924157 seconds)
  done (took 29.576401513 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.964497448 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.964476754 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.971704142 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.963101095 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.953805597 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.953694566 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.965505127 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.965874819 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.954503568 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.9624187 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.96384795 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.960867817 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.965935108 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.973834502 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.972496196 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.961810614 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.963909845 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.964839907 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.953990034 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.972023961 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.961886891 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.964279051 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.931434135 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.929724573 seconds)
  done (took 48.919253203 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.116346679 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.996181512 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.085064931 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.97609491 seconds)
  done (took 10.031705348 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.929630662 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.995233531 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.983203357 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.977021228 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.024599645 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.034242685 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.983132886 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.141032234 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.045694295 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.057060902 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.938663411 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.951211811 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.958613503 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.986961143 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.032851663 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.930184164 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.930276632 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.110670754 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.993386486 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.140373824 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.930271832 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.986165916 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.02123319 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.983197077 seconds)
  done (took 49.924696843 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.931475488 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.939697103 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.942685551 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.932308577 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.931667195 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.932062788 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.938489355 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.93766916 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.954411397 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.934398334 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.932130869 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.932600893 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.944936259 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.932971943 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.933257295 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.946022454 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.946333669 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.933381277 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.940801017 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.940358901 seconds)
  done (took 40.618830686 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.930176333 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.776990826 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.276328729 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.186344857 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.93177909 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.933968411 seconds)
  done (took 31.896809368 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.943198945 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.943260076 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.930740411 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.986754122 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.065634659 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.938718853 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.933321175 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.942238421 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.975517925 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.995937747 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.950068684 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.960859144 seconds)
  done (took 25.427726455 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.931653269 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.936374155 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.93418161 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.944443147 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.940667279 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.941667162 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.940418817 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.931215411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.945045076 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.952418682 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.941184798 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.943639223 seconds)
  done (took 45.147170824 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.149004448 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.159814389 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.151540795 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.329569119 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.918689002 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.831680218 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.644621978 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.730208413 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.240498493 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.914422346 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.898332444 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.011372136 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.175222127 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.933294912 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.19490186 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.866223423 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.934660157 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204667344 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.935993608 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.93403033 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.230533954 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.992996888 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.150430673 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983257321 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.14788805 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.228012048 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.175110993 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.19422619 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.278512212 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.995394862 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.042157783 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.976382526 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.946248538 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.948054715 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.938727486 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.94974284 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20919286 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.938205931 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.085683371 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.925242777 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.862435073 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.334595654 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.060038123 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.353650129 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.068856499 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.180177048 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.941864968 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.922052901 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990102514 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.260332261 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.050371367 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.150981585 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.863448261 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.359924607 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.069751275 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.939557307 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.941952016 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.637631588 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.178736159 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.019966303 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.341744486 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.057299818 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.941486876 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.025597341 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.939183297 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.051209177 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.1272281 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.945226312 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.936973114 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.946823694 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.035849401 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.152162582 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.943495742 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939449916 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.95542991 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.941132922 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.292032081 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.298994496 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.922806346 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.501827409 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.226049118 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.900420677 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.234150572 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.976448618 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.217360654 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.320049115 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.019441274 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.18290824 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.827090779 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.947792215 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.746764805 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.019937847 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.008560183 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.939716203 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.923321122 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.292198645 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.067572216 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.946833676 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.866383039 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.951887523 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.142735141 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.227535743 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.988182976 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.939912624 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.94123581 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.944031384 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.940438699 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.957741083 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.952444827 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.859315598 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.229660448 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059699894 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.20004697 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.936242608 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.624069891 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.214353515 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070993387 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.537278917 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.071970913 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.830108613 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078387687 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.952663618 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.946380145 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.133881056 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.356434274 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.924036978 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.179224734 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.043698294 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.978400596 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.949619885 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.024603221 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.170221398 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.944113623 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.200540268 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.188085924 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.591179642 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.041486891 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.016375301 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.95372051 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.1583 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.03018941 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.478342932 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.168755762 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.32435488 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.920545728 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.543603066 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.275109778 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.33249021 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.962952512 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.9270824 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.972664946 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.646989978 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.871860501 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950707745 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.275578036 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.97808993 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.036452835 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.947324747 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.946560608 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.956170243 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.02586675 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.021275474 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.019386545 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.872935429 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.94912547 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948655911 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.947058748 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.47961499 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.719301421 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.236563739 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.946589467 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.019713212 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.948075606 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.539074903 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.953393275 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.982193022 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.089967058 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.748224189 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.974954434 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.268543303 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.356489441 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.068387606 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.947985933 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.949055405 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.647057448 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.956092884 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.648154893 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.238080493 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.94955345 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.402924147 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.017118184 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.026198119 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.961317225 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.948871688 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.950249408 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950169437 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.151383355 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.459267388 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.349631938 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.304000562 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.030337019 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.22404399 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.144483946 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.243963839 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.638279967 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.474112455 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.174880135 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.954256194 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951967894 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.527097796 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959208025 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.164290869 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.150736297 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.227001828 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.252308322 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.36417371 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.954529921 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.96563784 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.191120323 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.949052908 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.381650574 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.042495961 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.377448601 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.764087448 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.221172616 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.016968892 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.961142628 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.606439054 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092287275 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.904833008 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07843782 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.876754767 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.734512552 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242670146 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.229850729 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.936617878 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.293575035 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.247931889 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.276482888 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.586136507 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.865393199 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.99989626 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.032360776 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.963556654 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.292467964 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985630607 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.008011296 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.95569043 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.950156358 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.953069084 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.627915324 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.031455554 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.083731296 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.727317444 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.43635843 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.856025087 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.225875481 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.011434051 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.403951017 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.995840579 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.164633439 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.956976536 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.310004399 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.994414175 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.225363065 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.912168205 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.164919082 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157598845 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.971557617 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.957032173 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.878521376 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.825989393 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.961161766 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.922268238 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.828630526 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.959143253 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.252793832 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.350664327 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98394628 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955185487 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.340446479 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.443823873 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.136795579 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.959401571 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.165577015 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.082215354 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.871194532 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.438999671 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.535122567 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.652720637 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.964004348 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.155996038 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.350007184 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.03377829 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984631694 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.030690059 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.226368128 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.933979914 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.953080781 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.473795165 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.051165874 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.194537814 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.263601831 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.269729939 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.400181806 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.200808246 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.963648586 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.169231055 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.316615578 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.199125404 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.88579442 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.044909941 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.168675981 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.232788257 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.83257971 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.66406352 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.195150903 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.960090189 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.884444834 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.164039009 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.455234474 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.320394301 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.496833765 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.92679099 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.979765218 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.440871427 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.971449239 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.898598508 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.957166096 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.90660634 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.170364543 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.925429593 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.988014868 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.512436985 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.285948349 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.360098376 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.977455324 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.990128468 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.88112389 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.729320039 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.905039195 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.05540573 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.995952796 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.027309772 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.960934623 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.158696018 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.394796224 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.012482763 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.494459875 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161050968 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258049138 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.231843527 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.262644294 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913850755 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229073532 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.907732359 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.274930008 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.036958053 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.035205748 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.958108352 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.959426991 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228603683 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.367127092 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.481223014 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.988324259 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.359916158 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.062949207 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.958933159 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.961706483 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.243107892 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.187848372 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.170273302 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.034693529 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.160645003 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.030601759 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.471301143 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.962334968 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.960766999 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.097737644 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.844041011 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.706695299 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.258627596 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.703368592 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.161422485 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.479127251 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.850592399 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.932746061 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.999674889 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.95916675 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.104779136 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.962359371 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.198793756 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.230096776 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.72308861 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.964633727 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.959936585 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.845895669 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.649748976 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.196659073 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.963686172 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.022350183 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.962593844 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.076686839 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.968536194 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.228530225 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.015447241 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.961068155 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.967423401 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.173596261 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.473940273 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.97595291 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.659462206 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.163100303 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.967183242 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.445450958 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.421449714 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.997995591 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.997071494 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.930293815 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.203123258 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.483983035 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.932529606 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.957822579 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.186814346 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.961324532 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232343638 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240111803 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.96193536 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.176481954 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.24934205 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242968887 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.971362667 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.823645514 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.966199424 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.234596236 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.016986876 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.961900824 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.97196105 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.959996963 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.710077979 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.43283499 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.116532461 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.322937961 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.755604566 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.719687354 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.96356163 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.964945775 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.656365889 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.675146802 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.176572559 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.246771706 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.908463185 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.165139588 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.665933184 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.863721146 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.228564724 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.890246209 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.966289228 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.272075373 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.228911748 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.898530283 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.968009555 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.539980729 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.962582885 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.048709272 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.963563845 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.08993397 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.229345556 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.36836775 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.079532469 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.602016748 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.65882088 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.903892742 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.018134904 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.771639963 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.52683691 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.718407477 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987742136 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979847171 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.889859606 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.966414445 seconds)
  done (took 1673.928118196 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.012954392 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.014690803 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.99822359 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.005671644 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.105097583 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.081995255 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.005352862 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.004479513 seconds)
  done (took 58.121465702 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.96359245 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.979195218 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.96882688 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.965377439 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.976100082 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.964808191 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.121094517 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.971610321 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.968010379 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.968200672 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.964872535 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.964232344 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.240033998 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.980270413 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.965091839 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.965329625 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.969090167 seconds)
  done (took 75.792196744 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.968696495 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.177542113 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.016222585 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.966280383 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.910920156 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.981167937 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.910762455 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.013523706 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.971438147 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.192054949 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.261774239 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.968714116 seconds)
  done (took 91.23405493 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.969567197 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.966731372 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.966254448 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.966844738 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.966304813 seconds)
  done (took 11.732193083 seconds)
done (took 2194.242615769 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.209523619 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.023085885 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.060776412 seconds)
  done (took 5.978236096 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.113129909 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.158994646 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.270718994 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.032438115 seconds)
  done (took 10.47522869 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.227635048 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.341167751 seconds)
  done (took 6.463406039 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.322902085 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.987015752 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.334128696 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.968584723 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.969536335 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.970536257 seconds)
  done (took 22.810087702 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.967455867 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.968852663 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.968000874 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.967965669 seconds)
  done (took 9.766514425 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.965294967 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.687187288 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.968104138 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.980004587 seconds)
  done (took 21.495739168 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.151274517 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.079588087 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.106719553 seconds)
  done (took 8.232050391 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.117981236 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.809921437 seconds)
  done (took 6.823591585 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.110259389 seconds)
  done (took 4.005367592 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.996589996 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.238767322 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.477006419 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.979859987 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.632463531 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.060958594 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.354149108 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.240872343 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.397956928 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.445126534 seconds)
  done (took 26.720395792 seconds)
done (took 138.520240451 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.529965017 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.016765131 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.184853382 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.411209789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.215188329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.185264825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.20391209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.397134945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.052766282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.052617935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.41388803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.215973735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.154750893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.011813441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.160390941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.010917711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.211637855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.379522053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.04222556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.277301468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.216041677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.018097291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.21805174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.020221387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.212643417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.135859307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.569704448 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.009705663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.195694532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.562012167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.139287759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.429347001 seconds)
  done (took 172.769004781 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.988594398 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.988841692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.984575022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.987597485 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.276545127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.987407382 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.986438437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.988081336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.234801421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.243052321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.986589238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.276059434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.986226207 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.987463773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.990409273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.987250474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.386513535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.987331503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.988082202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.986999642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986137093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.131023801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.986899014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.121772956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.392593395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.988423589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.988162618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.989120505 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.990860239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.987499669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.990074166 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.988334931 seconds)
  done (took 211.686935189 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.990149197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.989426199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.988468678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.988024694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.990448635 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.989664213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.990424268 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.98824262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.747847483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.733240769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.987811958 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.98899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.99097337 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.989622077 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.989787983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.988636946 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.988536557 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.989756103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.990437896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.989532444 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.98994508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.711770512 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.988085983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.724845584 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.988817931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.988850034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.989716171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.990290353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.990089106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.990649776 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.992420006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.990392618 seconds)
  done (took 224.544541504 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.229788278 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.990436199 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.991444119 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.042818482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.99131241 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.991895943 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.996082917 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.241616627 seconds)
  done (took 20.392867582 seconds)
done (took 631.32002552 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.345799286 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.723183772 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.133923922 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.015503282 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.242403046 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.057653259 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.009387935 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.074629509 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.850632733 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.088422506 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.400084961 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.019269479 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.769563638 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.040868155 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.132920211 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.068636646 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.357218747 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.664772229 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.156753382 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.676284283 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.173914012 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.965043783 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.093769439 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.885183159 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.423703291 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.988645592 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.059774762 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.362529608 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.015900069 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.171513953 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.652405705 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.294080832 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.031326795 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.014897317 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.062798524 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.042163097 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.239703528 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.026964022 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.130956989 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.760864825 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.683414922 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.735100308 seconds)
  done (took 105.561204803 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.004118003 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.998361928 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.998326848 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.997135191 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.008410045 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.998391084 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.998883594 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.998719038 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.998536873 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.998470346 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.998739173 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.007607434 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.998544269 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.007572541 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.998960132 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.998792687 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.999318704 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.008246879 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.999590095 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.000694951 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.000487267 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.999817389 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.99617801 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.000819842 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.998167325 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.998989742 seconds)
  done (took 53.948210012 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.996855207 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.193473964 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.241550128 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015996105 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.996620013 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.998715758 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.025449987 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.004495984 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.998120872 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.997581803 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.113438506 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.000527662 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.009215198 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.239948264 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.013669118 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.996207478 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.996593528 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.99678398 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.19989989 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012656583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.026201425 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.006031149 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.026225801 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.013320145 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.999059442 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.997755012 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.000085681 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.429308044 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.010115586 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.114690792 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.068921822 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.030502854 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.324188882 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.251230886 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.0543512 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.004538051 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.999105046 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.122617005 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.00380393 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.998065959 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.025390489 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.007236274 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.241373811 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.527830748 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.014130244 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.99777677 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.422663962 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.13319758 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.040256085 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.011078948 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.24967989 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.017295891 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.998907962 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.999341396 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.035317039 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.014228633 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.999388881 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.254954203 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.017606587 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.028311307 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.00538721 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.0013918 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.208968434 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.009603337 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.197409952 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.010218451 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.006988405 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.001719139 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.244430341 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.019240745 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.537142945 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.014509681 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.998717449 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.118213896 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.201417897 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.453387208 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.013126814 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.210653792 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.34187428 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.03766626 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.012469539 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.411932228 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.041049238 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.010763427 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.999699369 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.000794002 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.001091484 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.045907519 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.027383361 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.447696953 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.535002919 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.271766283 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.041961459 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.015325587 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.002435434 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.257239978 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.01196159 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.000314031 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.235604182 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.54889615 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.017854461 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.008141355 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.514542629 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.017142474 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.029787659 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.012330027 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.256167798 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.019424848 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.046170318 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.001369617 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.008726488 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.005434786 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.031501596 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.015267807 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.001771045 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.507802304 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.141112132 seconds)
  done (took 247.678464694 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.001437408 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.004350853 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.999617967 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.001718988 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.000105444 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.001258154 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.999628932 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.999487092 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.0017363 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.000090529 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.999614348 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.004390078 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.003569629 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.009398066 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.040235034 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.00350939 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.492838925 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.003522652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.00100417 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.001475671 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.562059255 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.006327174 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.002400892 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.002847631 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.001868054 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.001815927 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.006414751 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.038619528 seconds)
  done (took 171.122749417 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.003334374 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.056663248 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.017916969 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.050611645 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.017749826 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.004328765 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.09986133 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.023008177 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.011222299 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.003596414 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.003925383 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.035026562 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.011841627 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.100548792 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.037305467 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.110123022 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.109844437 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.014346165 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.003805987 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.003706093 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.050260861 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.020774741 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.035861862 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.067475793 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.018671662 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.059774072 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.019420882 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.006297366 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.005451284 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.117691154 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.024699079 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.037460275 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.040513851 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.026979582 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.124397009 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.121082763 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.113593343 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.114916371 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.013579261 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.007153038 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.006101781 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.006064457 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.060950437 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.02108433 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.00626772 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.121378437 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.025058348 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.005874701 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.006756341 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.005474503 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.01890002 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.02404371 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.044379745 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.131896507 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.055361497 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.033108149 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.101946329 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.128478098 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.006936934 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.102127676 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.01558891 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.119770829 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.026737632 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.007331214 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.008107822 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.010320718 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.056505905 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.119645267 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.110867619 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.015921923 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.103227215 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.064195247 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.023666662 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.007725103 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.008064846 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.062286078 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.117878541 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.063657513 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.069738207 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.045406133 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.01585794 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.008713396 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.008867713 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.034457865 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.017355058 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.12135671 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.123124317 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.016584924 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.009542433 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.009605326 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.008879908 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.032156152 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.071059419 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.050923033 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.115375696 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.047720746 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.049996634 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.016770779 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.022596031 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.013569565 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.042424378 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.017850355 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.020454922 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.300108292 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.040899593 seconds)
  done (took 216.865138335 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.379455456 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.05498103 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.082219191 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.290735099 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.372191493 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.874832216 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.047961779 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.060965547 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.078738353 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.184866628 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.130305371 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.100411215 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.046972059 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.031665334 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.051480315 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.081147551 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.082387968 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358001668 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.252547975 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.531957746 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.047464609 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.357119975 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.37837435 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.422425361 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.109722736 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.457540326 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.668829574 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.151450391 seconds)
  done (took 66.627260864 seconds)
done (took 863.722063102 seconds)
SAVING RESULT...
DONE!
