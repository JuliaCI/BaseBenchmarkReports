cset: moving following pidspec: 16538
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.307933594 seconds)
loading group "string"... done (took 0.596412157 seconds)
loading group "linalg"... done (took 7.852643625 seconds)
loading group "parallel"... done (took 0.16968289 seconds)
loading group "find"... done (took 1.191111865 seconds)
loading group "tuple"... done (took 1.831623851 seconds)
loading group "dates"... done (took 1.301563515 seconds)
loading group "micro"... done (took 0.22631117 seconds)
loading group "io"... done (took 1.06264465 seconds)
loading group "scalar"... done (took 39.9203373 seconds)
loading group "sparse"... done (took 12.386015468 seconds)
loading group "broadcast"... done (took 0.997758843 seconds)
loading group "union"... done (took 12.552193226 seconds)
loading group "simd"... done (took 4.66198494 seconds)
loading group "random"... done (took 9.609410097 seconds)
loading group "problem"... done (took 1.880202011 seconds)
loading group "array"... done (took 21.788716193 seconds)
loading group "misc"... done (took 1.7242633 seconds)
loading group "sort"... done (took 3.476179624 seconds)
loading group "collection"... done (took 18.016254809 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528960709 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130621061 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132987343 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124947186 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153201721 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120396096 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133230321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091378224 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.887667441 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154679937 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12418682 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.445682927 seconds)
done (took 5.429237037 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179013897 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087166987 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088403147 seconds)
  done (took 1.388899423 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069023704 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129967834 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070923055 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071853256 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070660085 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070584686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070341767 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070103749 seconds)
  done (took 1.768974166 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077801657 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073121399 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071099588 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072420594 seconds)
  done (took 1.513703699 seconds)
done (took 6.14372179 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.819535967 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217958163 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193777796 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.43624052 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133899214 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164858251 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648026933 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346424091 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196262521 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084425849 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114180685 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35685729 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114038571 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644790083 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078427979 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095535504 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143735748 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415224054 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071536279 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086709547 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093356988 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132879679 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09271735 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079187646 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150285849 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071750768 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141366806 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084386345 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070099458 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226565387 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177128612 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662817887 seconds)
  done (took 10.604238125 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.106055013 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10526025 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073242785 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130772197 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.108432403 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073982548 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079248539 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071884533 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095124856 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.136119954 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.097361618 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107922525 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070432107 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073424154 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089975039 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211822162 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087385306 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086165316 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07486911 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084101768 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112814016 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082076474 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085954544 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085221689 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132892428 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184926215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102753695 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101896064 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07372535 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089185314 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118832521 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.137002482 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072215449 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070039433 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133159268 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098614803 seconds)
  done (took 4.897797981 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.066150996 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150568992 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094402651 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140718729 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068748312 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114059773 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069884382 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085512058 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2178332 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.343161075 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.659572792 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119121775 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111742047 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072191943 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072665138 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071652605 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.597555182 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102389094 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114201489 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086999355 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074728968 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073504085 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364441273 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072190579 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068721615 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073307411 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061325411 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131627052 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072914094 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.005704692 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170180451 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072189744 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105699468 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165391499 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097452392 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.279705963 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074338587 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068746522 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163042413 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076105485 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070287442 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090446502 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108282988 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124549451 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069859406 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071827078 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173819967 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068617352 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084573733 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.121850543 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092160019 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154983388 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082983299 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069071308 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.26526951 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09391198 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074469097 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069474361 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.202851272 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136352967 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072280424 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071215309 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072252759 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074076558 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374949244 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073325663 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.046174656 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074440463 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080205507 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073186499 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073609391 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077757601 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076982077 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092890888 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070238341 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079314825 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069722361 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07036373 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070857369 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086796468 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405405554 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070853949 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07286814 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068841276 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094039278 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100823964 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071251082 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069870807 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.207050538 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072521657 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071460883 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112795446 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071874816 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096907733 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086831793 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073809207 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117704403 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071542285 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068817843 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.109636113 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074855225 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101367147 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073696464 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102683535 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08542665 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072120493 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.449658823 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069741472 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06906978 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069862408 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072836577 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070621332 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072402542 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071456167 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083280822 seconds)
  done (took 22.626133454 seconds)
done (took 40.413897766 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270191132 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077786996 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078059839 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078128988 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077593553 seconds)
  done (took 1.890153848 seconds)
done (took 3.179157425 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129560058 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104935731 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068844776 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102622688 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0685537 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108133998 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106907721 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082130117 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105922232 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068689711 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102740028 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068138985 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068368883 seconds)
  done (took 2.493637845 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088670938 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089973584 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074493639 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089070911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06752811 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088430648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086634577 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093863152 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087105186 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077025112 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067562555 seconds)
  done (took 2.191244548 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08734209 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088974494 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074371174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087102708 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067556633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087469082 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087048092 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091292422 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086901857 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078424784 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067831679 seconds)
  done (took 2.181143211 seconds)
done (took 8.141804128 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082348164 seconds)
  done (took 1.351824377 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.610540179 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.114327824 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085892527 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116132517 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199169921 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123330553 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276763342 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091304095 seconds)
  done (took 9.07573657 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.109071831 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074494802 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074417961 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075812338 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072693706 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076923528 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072834145 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075597009 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07212952 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072818791 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073832578 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076996669 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073681395 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072502307 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074684288 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07562863 seconds)
  done (took 2.56433213 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096677056 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096832801 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078369479 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079228464 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076422926 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075601066 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077538216 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077860297 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074250572 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076370472 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078391101 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077446493 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07510683 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068220567 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077894217 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07903472 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074435044 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07838473 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078343008 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079061665 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078734413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068718623 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075262554 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078426959 seconds)
  done (took 3.256956966 seconds)
done (took 17.526985181 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110931019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071425479 seconds)
  done (took 1.460978614 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084925124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088064528 seconds)
  done (took 1.458121172 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08634245 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069850268 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094036227 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082532921 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06973794 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069617549 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091640061 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069750601 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069481959 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069810078 seconds)
  done (took 2.058853418 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072521661 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08199178 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074621934 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085281831 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077531994 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067919449 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075547904 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071237309 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081202509 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066863543 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075524302 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087079929 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075434804 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088704829 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075545831 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073061763 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075610788 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071517037 seconds)
  done (took 2.664955108 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068908431 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071765418 seconds)
  done (took 1.431032952 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07084604 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067736897 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071349182 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070227642 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066786079 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066871106 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067417452 seconds)
  done (took 1.768291205 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392588585 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121099598 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.3266988 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076145739 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086464109 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.27013915 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070316213 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075410613 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074828584 seconds)
  done (took 2.826571896 seconds)
done (took 14.962260127 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084991185 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091295811 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101510071 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.397395213 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096083495 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070400572 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118376617 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19956489 seconds)
done (took 2.459776511 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218996572 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.7239842 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.449081452 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219881734 seconds)
  done (took 2.687790968 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359038917 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093391062 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062716497 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070958046 seconds)
  done (took 1.890362102 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07066234 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073391436 seconds)
  done (took 1.444508956 seconds)
done (took 7.542158868 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071585169 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08872868 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069588819 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067926625 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070327036 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067280017 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067174925 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070070651 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069771591 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070157974 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.070137803 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069807024 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067245618 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067124425 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067763258 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070469677 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07048248 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068036098 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067440184 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069957501 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067784297 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069592345 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066955375 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067045465 seconds)
  done (took 3.009475382 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088534702 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070154432 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076056133 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074863562 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073630934 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075772189 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074770021 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069313179 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075519676 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072206038 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072802753 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073114817 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072585761 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072975138 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072724953 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07376264 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074756207 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069100857 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071810922 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073183215 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.189100227 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069927718 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073234759 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075380293 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07292851 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073190827 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071931976 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069907749 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074766128 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072428588 seconds)
  done (took 3.631571502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073201263 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068319555 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06839911 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075408053 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066733015 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069392117 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067077846 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067660228 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068792734 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06684223 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068635438 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067519788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06705964 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067984275 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067826426 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07071342 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083710549 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067490855 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06742111 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067621418 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071343106 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067610549 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067393254 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0669826 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067120033 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067372018 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067572105 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067531362 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068111145 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067614027 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070511254 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070737725 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067146387 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074968173 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072210883 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067504209 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072046538 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066710738 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067974317 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066985745 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066745458 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067325447 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067392428 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074916428 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067605051 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068822626 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067739463 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068308412 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067987774 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069608963 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066516109 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067576657 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069562003 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068246424 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072092657 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067389288 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0684156 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067010123 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067988442 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067554783 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066544467 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067279224 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070057344 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067780234 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083684546 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074293486 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067652287 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070616241 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068486656 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070003441 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069221996 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082287696 seconds)
  done (took 6.303284792 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09444348 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091657755 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069876535 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06918405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065763808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068233918 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073642502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067313717 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069470102 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086296493 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067797218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068782671 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068588314 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072065376 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067695511 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069176646 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076185669 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066163001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067446741 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071704382 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068724809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073747438 seconds)
  done (took 2.915781733 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162153828 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074464493 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111221494 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079632074 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073922433 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078880546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073353654 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073985739 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074359981 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071591377 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071426828 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07418453 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073824098 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071509787 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071205976 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071664334 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073310066 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07109692 seconds)
  done (took 2.768164755 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080288093 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070069074 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091198635 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069221822 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07034326 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07217558 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074880625 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078356929 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072628749 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069883573 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077691251 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072060625 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072249983 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069818123 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072732138 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070132544 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073387152 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069372123 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077786863 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07422225 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073876871 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078081122 seconds)
  done (took 2.947534572 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084661128 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072235192 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08657786 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071879768 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065650837 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068118209 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074689486 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069978268 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074437637 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071989519 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069522127 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068120994 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072611218 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069661667 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07227567 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06924037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0721908 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069880456 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071550668 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065473867 seconds)
  done (took 2.760169875 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091568021 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072170332 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0730055 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079469157 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071959889 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071600988 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078941516 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072016392 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071666084 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093151008 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071686191 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072083706 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079581769 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076911159 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072080889 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079501557 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078969794 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07859293 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071540832 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071999817 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09324917 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071699284 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07915199 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071294127 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071923754 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072203935 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071548023 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076248522 seconds)
  done (took 3.457347458 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070765433 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07026937 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067954911 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067565946 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067309952 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067597555 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067440773 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067728987 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070416076 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067627031 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069602498 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069818641 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070339816 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069896085 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070019103 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069882673 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070121137 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067724203 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067902615 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067216511 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069738118 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069440826 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069656094 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067287932 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067107004 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06983644 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067370556 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067274887 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069406709 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066974543 seconds)
  done (took 3.385568514 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079919556 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076994481 seconds)
  done (took 1.481496111 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067352959 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084391796 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06724379 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074659156 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074254458 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07068045 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077003557 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073316169 seconds)
  done (took 1.910485379 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086265872 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081227268 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070749181 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083439102 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081493347 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088077305 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141396382 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07154821 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076201881 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068442523 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087041553 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069531876 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077145442 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070439317 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076608457 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077429945 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067907022 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076236481 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072332771 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068415164 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07210632 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079582884 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072835985 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065572569 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071733005 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093666958 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081783402 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.07225596 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073282489 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078063576 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076459655 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064614977 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070926114 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070785377 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067989789 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08055894 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085717696 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073681018 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079693314 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071208792 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07971021 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06474309 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075110425 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077720771 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080989012 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070514913 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0706327 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06555801 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0680127 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072995972 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065734709 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070820687 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065213289 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077345586 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074469991 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081115046 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069404752 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072540443 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073331697 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073787512 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077520871 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072361232 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07380044 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070433759 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080994548 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075583805 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079307251 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065194935 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063946895 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069298331 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080181066 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094169737 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076751851 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070930096 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071773077 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068616956 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073453408 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071515104 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076597709 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077272167 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070702965 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076638336 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078288972 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070240943 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073063413 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078156473 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069256355 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073122114 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068142375 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087341173 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069919849 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068789451 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068690838 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081757311 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074574084 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070227081 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0684541 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077633553 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064266937 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070059144 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071220068 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070563603 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080417092 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074629379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075462352 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079050239 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077343721 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070535883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073875711 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066538524 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071245981 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069524483 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077419204 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064576883 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073453122 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.196718955 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072089641 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08079293 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069693519 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071448068 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078805958 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076784982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069559678 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067118602 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073786324 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070702707 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073603178 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079902927 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069620207 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065420173 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06516233 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07437648 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071799692 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075062731 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075389147 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074036854 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064173615 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06805601 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076090134 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079510118 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071034043 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072096966 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076917771 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0721495 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070388479 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078160218 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073423577 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071043438 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077240466 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070799344 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065001609 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074252769 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073463065 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069936537 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074852653 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07498466 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073420438 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071661483 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069149194 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.078080155 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071350465 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069224234 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070646202 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06981012 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080713293 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073272827 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065910515 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067461683 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079278539 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068350167 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070076133 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070328204 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073418311 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071633483 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068516139 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070282959 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073009597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080195167 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073912911 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071769504 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076351243 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082472227 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070850243 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073024244 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070294843 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071574762 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07085434 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079121806 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075956763 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075277576 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073466036 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066870802 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076249528 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078136401 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070433739 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06804971 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0696345 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073908768 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077023283 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073866535 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070645128 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068947039 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07155838 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073336687 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073023809 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070426957 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069701081 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07689944 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06899496 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076813522 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070671796 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081391544 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074203075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06559996 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073062876 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069380863 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076502313 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065225871 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068287923 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070086807 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070694249 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069057679 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073038967 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064038762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077326714 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078590112 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070582363 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070458513 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069968827 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077206201 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072328718 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073791055 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073441516 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.205759721 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081538143 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070728092 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075274808 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082158891 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071075701 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064856814 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076699355 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068948914 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069989681 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069028695 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068915706 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074485675 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079005012 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077904096 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063873343 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073634804 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069541982 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070209371 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065547259 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076107047 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073842827 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072017124 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07823975 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071253368 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070426614 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0745822 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070428342 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071063615 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07178372 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07377138 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071408688 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07209828 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07030726 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073680953 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070599468 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068721792 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072978044 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070485216 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071323663 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076637471 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070524904 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071602838 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073798073 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071476559 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071221815 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071205372 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069668442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074128973 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071507631 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071232981 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073614385 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065307175 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077672883 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069271609 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078185157 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070686499 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067471991 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078284337 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07271151 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076342781 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071746118 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071695372 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071788094 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070165825 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074064759 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077436165 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069335151 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082393064 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078479616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071453092 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073507847 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071331377 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.0716602 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069831547 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071363733 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071010694 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071800794 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070005462 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074983959 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073405146 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070594894 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072100417 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071459589 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071149928 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070946546 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065203961 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06930665 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069519058 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073018564 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0803205 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070948532 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070096703 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069804177 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071495926 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069953677 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066787569 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077843303 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078421505 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070772111 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077609202 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070474292 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071660026 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081200624 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064266814 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068158553 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068114785 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068165 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077589414 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071211408 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079848894 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070570606 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070663423 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067415095 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07035574 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068582506 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064644716 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067523331 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074193978 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069424352 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069850224 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070021717 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.204820393 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072505772 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080406639 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070372577 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072482961 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070987568 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068180275 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0706605 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070013135 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07432059 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072550823 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069340946 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068650676 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07047406 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071597762 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073062987 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070741101 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071750632 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077389864 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07111568 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07454274 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073477252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064923755 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074700628 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071507248 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070234831 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070785383 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074194757 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074165682 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071512463 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080419654 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070815256 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071622884 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070819986 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068481852 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069933968 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070161391 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070444599 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070553815 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071935397 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078831223 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068423892 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074181943 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071570497 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072168352 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077870236 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071601108 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073732828 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077092902 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070774623 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072810209 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079332919 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074213679 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073873901 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071665099 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072674707 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076412206 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069783119 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078145428 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07159979 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072109936 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072558762 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068858611 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070700145 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071069329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069594746 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076386265 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071422069 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070761505 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069978775 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067937443 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071541799 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073366367 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077903254 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072894663 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073612741 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065300049 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067554515 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070484493 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068309832 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071631141 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072760743 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076510972 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073529728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070415657 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070189355 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080438136 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076135278 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074420872 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068890081 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075277225 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071354643 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072726801 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07206253 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070882471 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07206484 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074710626 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072131729 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070206591 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07779793 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073991135 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070963071 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07252023 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071375192 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071027622 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065392374 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.0700257 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072129597 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075138116 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072518973 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07053522 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081387842 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068542614 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070662254 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073700725 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069533255 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074926476 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065028546 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071855176 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071091687 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070627017 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065368439 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.200302788 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069949234 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073563651 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070180186 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066168461 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081961821 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079964105 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073676176 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069279928 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068857637 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065084201 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065784237 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069716047 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071469041 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073512127 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080814139 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069971578 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070758425 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065960333 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071515975 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073706035 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073583209 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067862595 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066019754 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070470441 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073545157 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076861535 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069889298 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070641834 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074579775 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073403985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069106805 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073719301 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06726806 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075137915 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083585761 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071035613 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07160971 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077217333 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078946629 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071762849 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065658907 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07099904 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074030398 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071309376 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071537347 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072261782 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085849067 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074885568 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06911217 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069943989 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073553973 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070501136 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078788049 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072106205 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070997793 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075594613 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072297335 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079065126 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073771202 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078226889 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073397976 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074274676 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069699349 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070248733 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068480805 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069785417 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071680158 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071669084 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074560601 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077579357 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069916904 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081173084 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079403717 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072295511 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066576262 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069878553 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06957733 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065089512 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071063285 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068921521 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068641259 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068817409 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070061921 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071815954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076336044 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071611964 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070583529 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070747915 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064213964 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072583723 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073547502 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071386619 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06749124 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070741559 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070817576 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074146372 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073729353 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068460835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072983126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072579927 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07160603 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065397229 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077343986 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069589522 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072675266 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069423 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070507533 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070616701 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07353001 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074975657 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071356988 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07256823 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07363428 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072438564 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067663899 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067152903 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075775069 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067911036 seconds)
  done (took 45.18410833 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105530095 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067043814 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065922995 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065452794 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076593898 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066522091 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065041235 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066508825 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066112272 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067989544 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06585004 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065275315 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073563762 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081239057 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076641796 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069502058 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065423866 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066124051 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065245324 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066647865 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073585221 seconds)
  done (took 2.895731011 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076846587 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081159925 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078881126 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085549298 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074632867 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07418096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078794174 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07410195 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0821051 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076078242 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082555214 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074744818 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075589539 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075542654 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075825158 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074238685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084595853 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074402915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074380576 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07923278 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073847997 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078727489 seconds)
  done (took 3.093331945 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071143467 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069491869 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072227382 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064957277 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.07039153 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065248127 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07278171 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067822721 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072482389 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069373238 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0695984 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068822177 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072141206 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06464339 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069942749 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067112657 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112494062 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073510998 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070507078 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070286604 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065229083 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072376887 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065153835 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065571157 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069049654 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073039969 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070767276 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067997637 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070095508 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068868961 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06955824 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067892509 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071475028 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070337884 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06895529 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068827974 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069167264 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069448695 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064858912 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068067271 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070590327 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065937823 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069867284 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070973174 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067623553 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067184456 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071226708 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069380587 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064413468 seconds)
  done (took 4.818953389 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083957998 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114071257 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070687558 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093155216 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082758204 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076661138 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073511918 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094388904 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06614172 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067213553 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084838867 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082615188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069110153 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073921872 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076135343 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068978571 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070623055 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068684003 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072718208 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068736132 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072609106 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076284104 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08278432 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08126638 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072603989 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067949198 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068303922 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073047378 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081185462 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073540274 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073977208 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074572407 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083932621 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074637968 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068257372 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07144253 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084772675 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069638971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072008634 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067099785 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071868116 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073729097 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076549223 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085237901 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068934913 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07431375 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068892374 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066417114 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081504968 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07188143 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076498822 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082446148 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072554942 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069124502 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073728242 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084206446 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068662172 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067829572 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071842538 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081385637 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06654035 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072766582 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082102289 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071143399 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075749055 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082173612 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074072285 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073058966 seconds)
  done (took 6.667003776 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079121898 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100017592 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08782202 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087018412 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079514233 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079127166 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079003664 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078816267 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079245463 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083779806 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080005386 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120502904 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074248933 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081458878 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079296839 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07947281 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079080862 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079888284 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079306779 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079524669 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079469633 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086789232 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079340509 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086550788 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091436849 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075022541 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079304062 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079072435 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086367843 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079462148 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083385078 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079829777 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079328256 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086190757 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083151138 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078642135 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069052659 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078672857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079576784 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079522573 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075103174 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08716969 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078759133 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074709852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079078403 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0786486 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086576907 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083256413 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08159094 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083879787 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079058559 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086472053 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079155255 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07913181 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086300331 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08983728 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086637432 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086792313 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079398004 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085933522 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086155962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089067054 seconds)
  done (took 6.51877474 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087169508 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07873903 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085945012 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064984798 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068326072 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07524612 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068014151 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067469875 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078083494 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077345476 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07997315 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075191953 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078647383 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079674176 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075411384 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078102278 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075114894 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075478967 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077528849 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075706744 seconds)
  done (took 2.932774698 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078945605 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086596247 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070795973 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0765683 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072642425 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074975207 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071954785 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07321923 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07065483 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07288302 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079196361 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079266891 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070662982 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075153776 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079011209 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074714779 seconds)
  done (took 2.610681429 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088654267 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076760167 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08392807 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071066855 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070195581 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066146256 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069321661 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064652387 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066308303 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081958491 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069049236 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080261423 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069524949 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06889562 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065931256 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075033589 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065838037 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06678706 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069261361 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081835464 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073175094 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067763104 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07356047 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069638655 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072408974 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074308782 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068095068 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069582908 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0664518 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069604629 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072149216 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072721146 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066235093 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067439568 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068146075 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066437874 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069071058 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070221085 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074753786 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069332491 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067727464 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071373097 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070091446 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070767987 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066320685 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069749115 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065738297 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071634554 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066768611 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071868779 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069559877 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072145875 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070179508 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.0759113 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072037348 seconds)
  done (took 5.309244007 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083229926 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073008828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065641609 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067765499 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072670425 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070950397 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072858865 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070852679 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071019864 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067544938 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070769548 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072788167 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070513866 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072940137 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070540491 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073482613 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065139413 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070626708 seconds)
  done (took 2.69853171 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075926199 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069801563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077260444 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06989598 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069301389 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071799392 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065317639 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067981198 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068553963 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070050355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069431965 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072455847 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070271818 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071648382 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069481169 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069670483 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07222987 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06843227 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069962104 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065551562 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07218612 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068795567 seconds)
  done (took 2.95596098 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098958016 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08711798 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.147310679 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082714969 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088827362 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075905296 seconds)
  done (took 1.992418089 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095437835 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105042629 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070379681 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073183571 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080292213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074097462 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073875093 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073772516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081782714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079249927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073967726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082468436 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081621534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081006799 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079722242 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079225159 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073558903 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07386858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069963227 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087405643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073884531 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081818956 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07385449 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073116308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07404885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081307727 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081361535 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079261686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073600235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082332479 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079577407 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073791822 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082429712 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079223319 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073119221 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082077371 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074344795 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086904248 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080081933 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081403492 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073146121 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079787097 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082036769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077790131 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082489101 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074284816 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078168922 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073519991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073829794 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089265165 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07923097 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080896077 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079590707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082157673 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08250103 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088780884 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079679958 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081088466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079654737 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078989843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081264814 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079699429 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080859664 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079376865 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079483241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081205846 seconds)
  done (took 6.652791627 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109511969 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070958301 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074785798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079373019 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081137764 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074528673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074124342 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074716584 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073667974 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070271972 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113234372 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074310443 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081231279 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081495751 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074267373 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073810529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073977882 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080727606 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070555662 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088896791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073535438 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081108961 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081344526 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08118379 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079551363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079260264 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074189316 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073630617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073304246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073481042 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078035653 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073740992 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080887657 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070703949 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081332883 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074355698 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073416681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078123645 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073584027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079391757 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081278323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08675013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073909226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074067544 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080015617 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074354734 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074170048 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070913311 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074625539 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070305515 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079626227 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079030798 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079316613 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081146676 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073823772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073695291 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074018371 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074304901 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073915583 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07967256 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081053154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074019397 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089303848 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074351204 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074210815 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08177188 seconds)
  done (took 6.564106805 seconds)
done (took 136.763500778 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192783635 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172526045 seconds)
  done (took 1.775695196 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072667272 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102807162 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081226106 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132617949 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070336861 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104032917 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103690265 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08240656 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069556296 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069812023 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070552719 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072199467 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134613274 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07014809 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069803158 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072812772 seconds)
  done (took 2.801633007 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104544594 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168562964 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107667617 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069580143 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103806511 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077110552 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068845624 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079397845 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075273068 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069539971 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076361623 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075110757 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069007303 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074056394 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074994804 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076935572 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069181129 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075857685 seconds)
  done (took 2.941694294 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102740302 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095792748 seconds)
  done (took 1.62531226 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15936308 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13736106 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207320682 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360501076 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164944034 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15232439 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147021919 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147026259 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117491403 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142374109 seconds)
  done (took 3.158062116 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10539683 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15999508 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280059361 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123273738 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07764791 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097256699 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124961325 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082279898 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084884451 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083934491 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084470149 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080638601 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104973703 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077404546 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078043399 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079890239 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108465122 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076747341 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079461975 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079810138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105628722 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069840978 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077355455 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076929048 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080856881 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081027674 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07049895 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06971729 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07975395 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078687314 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080462254 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096066657 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081394323 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110500765 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075447523 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111606564 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080804446 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077337275 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079012356 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077503302 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081775649 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08227225 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077332028 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080385692 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070198056 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081387978 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069457655 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069731338 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081444012 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071125496 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081561551 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080156734 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110756143 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070679204 seconds)
  done (took 6.288529722 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110543633 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113618693 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075692266 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120095976 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108963484 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076365998 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109931841 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102763549 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110190986 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074225503 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072520009 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074493223 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0858748 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087426297 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121839193 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113215107 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07770931 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075236877 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112659293 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111269271 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072285429 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104107045 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097040466 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109496376 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071439542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074552627 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072060601 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073727835 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080386228 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082429541 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073872446 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084240367 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.089102607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082146171 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071317262 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072237988 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072301152 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083253464 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082978547 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082877446 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081131607 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071768881 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072301131 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073267557 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074192383 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071567612 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082924352 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08429049 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082902865 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073603931 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074338778 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074417254 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073469833 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084465705 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081195926 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085142033 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084704883 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072638538 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072643611 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076946448 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084168124 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083142978 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083336826 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073531169 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083050749 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072341198 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083579817 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088664257 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072410229 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074002691 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071942573 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073812915 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073975235 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081553031 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081982076 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073340083 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074074999 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072595605 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083723402 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082694945 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072901245 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08078192 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071266177 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072278238 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073297569 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07392793 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081493361 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084325696 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073524559 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0718134 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073247975 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072589561 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070779166 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080503346 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084087786 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082873357 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08243135 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073928641 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082499822 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082379126 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074344105 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082355372 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07240924 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.204112126 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074659349 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083857102 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082992716 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08385279 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073989636 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07361939 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08249864 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085479282 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073514808 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082878931 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085205013 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084065298 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072722224 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086037341 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073163109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084246592 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073713796 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084485059 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073374045 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083851672 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07324299 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072112107 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073453084 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083901484 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074926776 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072720366 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073963689 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074690001 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08257813 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087303023 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075370254 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082623037 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082932824 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075072646 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082925314 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073392168 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082912845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074508978 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075039325 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071796925 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085490009 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075029511 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0728225 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072752648 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084683191 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071964847 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083479759 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081849338 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071620384 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084996646 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084547135 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081624836 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084049414 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074387717 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07310266 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07221381 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07389661 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082505723 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083280375 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073968344 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072846101 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082413155 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084331068 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071485457 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082043813 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081582512 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082850672 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072063381 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07404405 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0848886 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083867667 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082304687 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081853112 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082540341 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07313633 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081008123 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082417217 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072482183 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088228504 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07264227 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086212855 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083325807 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080900062 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083128404 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084379822 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083937636 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085168264 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087563595 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072645658 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072292346 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082719476 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071957622 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072626111 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.08168135 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073495179 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07408105 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086502023 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072442344 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083305907 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072503811 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082638542 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071515907 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073807958 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.218584458 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074420961 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074150894 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083999749 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075129326 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082398978 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085074856 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08301461 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072608176 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075034926 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08364949 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083564213 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072762719 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072492837 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074707531 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083196924 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081184755 seconds)
  done (took 19.703053712 seconds)
done (took 39.727891329 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217568406 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161517842 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180072057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123198968 seconds)
  done (took 2.209371167 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12154711 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105706258 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097345412 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068558601 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103303712 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069698739 seconds)
  done (took 2.026525643 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319431635 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216851495 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192996458 seconds)
  done (took 2.186167105 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214857879 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199693154 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456900456 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280944049 seconds)
  done (took 2.722788732 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.155304212 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093968312 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071133386 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088535815 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138769348 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164534873 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104560201 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130061153 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082942896 seconds)
  done (took 2.542732036 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153514432 seconds)
done (took 13.301641172 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.215017139 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13213813 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.18183093 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101864992 seconds)
    (5/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085183494 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.2120298 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081010594 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.204401854 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.142933326 seconds)
    (10/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.118673841 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117753568 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087209223 seconds)
    (13/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.083505187 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084537907 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083309239 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.21799693 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087345572 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078545355 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095549361 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108755434 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101292989 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.220300758 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.181106957 seconds)
    (24/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.169921434 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.16149186 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13790546 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096419682 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133409077 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095563772 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088849778 seconds)
    (31/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076668046 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175740477 seconds)
    (33/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166299344 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.132103324 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079513972 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145904796 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.223862962 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09447815 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078186105 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.215647365 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077156462 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083556337 seconds)
    (43/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078964 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073547498 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076489175 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069622023 seconds)
    (47/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.206587922 seconds)
    (48/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093354184 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077586041 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096491779 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138523969 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161524424 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054287509 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.162860261 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069250851 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.234964203 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18482585 seconds)
    (58/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.148774068 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076844984 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.159022441 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089268309 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09931326 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077339945 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.117097172 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.318047894 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077914379 seconds)
    (67/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.222348384 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067928368 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166185385 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139444798 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071400942 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086146743 seconds)
    (73/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.149360268 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071599683 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053904265 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08087978 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.172150686 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213918478 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07695057 seconds)
    (80/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.106597159 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103530359 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202649174 seconds)
    (83/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.251186195 seconds)
    (84/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119600847 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096626998 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130093368 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077751027 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069253994 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072665401 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094538207 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070635652 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.070822331 seconds)
    (93/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.165005624 seconds)
    (94/309) benchmarking ("sort", Float32, false)...
    done (took 0.138779755 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074097922 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079677243 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096079802 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150150897 seconds)
    (99/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078460108 seconds)
    (100/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054334428 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080752897 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092464147 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067466289 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.112205997 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.201448608 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100370281 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067032093 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.151329859 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054298858 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055848716 seconds)
    (111/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075471593 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.170290789 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081614888 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.172540474 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093471486 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092591348 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.148808081 seconds)
    (118/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076717329 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06774713 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10127833 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 0.150952103 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085476562 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081437906 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077897939 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054007494 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111733067 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.212421357 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074940354 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14440899 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069056969 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158489892 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151080891 seconds)
    (133/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086750179 seconds)
    (134/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066959581 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102771225 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159992512 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06951669 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094500015 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.143990059 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077973639 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092371798 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077884099 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054565831 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055905261 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075861165 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076325216 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074892031 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101973969 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06964767 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083320888 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079267863 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077424963 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077593176 seconds)
    (154/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055872572 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069056997 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05533519 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07608549 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071433582 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072853515 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068943575 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077692057 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161846914 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069271071 seconds)
    (164/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077335358 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201645743 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078039809 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081175356 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076402201 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055852987 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069905671 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188217077 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076885133 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055720321 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067990791 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05596048 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072338592 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054131374 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069426887 seconds)
    (179/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067485886 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053966471 seconds)
    (181/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069792876 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069005311 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079527738 seconds)
    (184/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05516255 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054523959 seconds)
    (186/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054137268 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056147463 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054514882 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054466563 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076277208 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121769088 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055600807 seconds)
    (193/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065329065 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.161781401 seconds)
    (195/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071128323 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.341926823 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163720288 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071090265 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.080304116 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194130605 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057355577 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071750986 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094898743 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079612604 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079748681 seconds)
    (206/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078917283 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.181389736 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056001262 seconds)
    (209/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066513434 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055874218 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153528285 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094585401 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067819319 seconds)
    (214/309) benchmarking ("sort", BigInt, false)...
    done (took 0.202687742 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116007839 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168632006 seconds)
    (217/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069711247 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068389569 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.192380423 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076861292 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054663446 seconds)
    (222/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054149693 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109392345 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144735705 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080402562 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078375369 seconds)
    (227/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078869417 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070107555 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107875327 seconds)
    (230/309) benchmarking ("sort", Float64, false)...
    done (took 0.137163557 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070039894 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074802896 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083791972 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054763517 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055262451 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06975246 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069130037 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092858938 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094742312 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092199444 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147971325 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.172778094 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054243885 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054454233 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069484913 seconds)
    (246/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093908569 seconds)
    (247/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056411699 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054734431 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201868131 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071033057 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068416312 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0696872 seconds)
    (253/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066904157 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053916058 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070449168 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05677906 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054143275 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125305017 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054542192 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05544953 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075117631 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069452664 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069466215 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070489831 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055173435 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076871872 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053773508 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054007878 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095657084 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076812619 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054572086 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072082196 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055285547 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076350009 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093812869 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079868141 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094040379 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078355464 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078184292 seconds)
    (280/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.120795564 seconds)
    (281/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055651973 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071489134 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070609493 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070645012 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098601272 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054361878 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054387412 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078224325 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074296864 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070957458 seconds)
    (291/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055406363 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069632716 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068240653 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092447437 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075998187 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067964018 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077817625 seconds)
    (298/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056186366 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069384519 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067748918 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075790934 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056747732 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082489214 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054777147 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069062433 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069397679 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147052407 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074901747 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075896937 seconds)
  done (took 32.571008811 seconds)
done (took 34.043167665 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090145235 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097970767 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080215828 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097974937 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085352318 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080412837 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077394474 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083449509 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084149661 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085493545 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082260733 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057976381 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07859717 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078893847 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079273345 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095402519 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083238561 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07719921 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077754452 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068661726 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077883254 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07000567 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071052243 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057926511 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083765106 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076143166 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076774245 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078480372 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06941354 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070062666 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072963315 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077898197 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069578316 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082722895 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076634715 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077838227 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079370806 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081129033 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07154774 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069412079 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078455662 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069503259 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077121278 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078033994 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076511213 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075245639 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077231934 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081579183 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094565162 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071056083 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078771138 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080266601 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079519943 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077228034 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074368568 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077222428 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07428569 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095589257 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077286125 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071974945 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078349251 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078379545 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074816349 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07661522 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077115378 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079540712 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079904759 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075389957 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078868563 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075402689 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069112483 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07664537 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073051692 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069201379 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080586384 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082025253 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068225717 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075963646 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076575524 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075097566 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068696727 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0712165 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073908987 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076206357 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071234829 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057668476 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074235681 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076802867 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068549609 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077582149 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076143644 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077189 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070853287 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079782313 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068216306 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074033921 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069257414 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069643551 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070881976 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073613749 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068856475 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071602096 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079551044 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070665348 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075605226 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083031928 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06943578 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076579546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068699204 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068265593 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08336558 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07827178 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06965668 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07107029 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067991556 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076105107 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068227468 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06896203 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06875715 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068897667 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07553082 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069350792 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070918439 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075862304 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082703006 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068835289 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072703698 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070788738 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068476148 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075312583 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203995691 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070932291 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072887083 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06675754 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071945775 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06982444 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07727454 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071406118 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077636377 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071565459 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077659796 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075172936 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075314134 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075275846 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068636661 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063605039 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071687904 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072620935 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071468074 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069872855 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070468497 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07019287 seconds)
done (took 13.161095424 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069605363 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145224311 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101900862 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10013275 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089610109 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070512889 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080039677 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104459885 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07159082 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105677479 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092031333 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090486819 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119327568 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068388251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069467943 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073514237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071124106 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08551272 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103603163 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090818778 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119723656 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069291911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09695732 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093223412 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092113984 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098977177 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070701679 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073789713 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073845822 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106612674 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093272446 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074022792 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070538866 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103237902 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098015321 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088190045 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069866381 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087484704 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070671582 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069214394 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071045827 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103502234 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084037732 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084642968 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07444353 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080582855 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070578125 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087801114 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093924219 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083018381 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090494993 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106061883 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072679672 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088099837 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068136044 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090215211 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080751482 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072891042 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069646534 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078191308 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069947004 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073817582 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085384051 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085028219 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074360718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088853819 seconds)
  done (took 7.177304421 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088997556 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096516288 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088652543 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088155573 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069508293 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070330774 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070279213 seconds)
  done (took 2.129647392 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071091963 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0935268 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094677866 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094906566 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085877961 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092107788 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080558402 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070967449 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093039505 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072349748 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092197054 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105342326 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074380778 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077573761 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0960918 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.07100392 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095492643 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070392325 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073686401 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094656755 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072949685 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100187749 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074119691 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070657927 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085473902 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070283292 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119287706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075040764 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072721078 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073395864 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068527429 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112327692 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085031102 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078314597 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070383599 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085728472 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085505474 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068710723 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087176587 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0791233 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08454857 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071138043 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071426003 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068176369 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074853512 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080931488 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071323894 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071282951 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073876493 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091129397 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071231803 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08410244 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073431238 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076345064 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072071429 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076881388 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081207918 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07147304 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090825681 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072066082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087820375 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08672764 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085192434 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086834567 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072522235 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084507301 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085316449 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073235061 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072224461 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074104812 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08755245 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068712031 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071943025 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081737049 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073251398 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093824535 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094459106 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072489077 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084141269 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070853116 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071130697 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070195909 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094556171 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07595186 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070977845 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074967911 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074014138 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069085636 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069278603 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074722563 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069108187 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072715839 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073382197 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074070627 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073094497 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087458135 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072937616 seconds)
  done (took 9.285585928 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072281793 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071587179 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072735954 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071811021 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07196936 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07246863 seconds)
  done (took 2.012898383 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097243815 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072362955 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084761642 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075501289 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110078699 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091238339 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091372763 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081615583 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088162347 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082901762 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091336918 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092412126 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096395734 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07644543 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090784138 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075314566 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091486054 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079150195 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082564256 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076340535 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09003478 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075657946 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076523729 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085925941 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079768997 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075194853 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082411368 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082523444 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083116716 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082026434 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075463274 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080197846 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074722397 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081917367 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09123258 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074197426 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075514966 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080651434 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075798616 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079970615 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091821538 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075905384 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078528862 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081206148 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081539246 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074536215 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080496525 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083289296 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090783972 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080401871 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081053632 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075075536 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079657361 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081515727 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074343702 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082110747 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081190349 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091585674 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075806368 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074299545 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07282282 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080113633 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081346696 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080176355 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084416143 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081595586 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075016017 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076543315 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076783459 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075748388 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080794906 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072809565 seconds)
  done (took 7.442968897 seconds)
done (took 29.59591651 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535537375 seconds)
  done (took 2.085344505 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.635083094 seconds)
  done (took 2.206862187 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.543922963 seconds)
  done (took 8.114667445 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405547887 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.512891338 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755612267 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139195981 seconds)
  done (took 3.424928102 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.727817206 seconds)
  done (took 2.304934484 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234925489 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221769379 seconds)
  done (took 2.045786205 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386914022 seconds)
  done (took 1.959991606 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.154863174 seconds)
  done (took 2.730301461 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266594632 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184271714 seconds)
  done (took 2.028835324 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.493757158 seconds)
  done (took 2.067860749 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.851224331 seconds)
  done (took 6.427546855 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223093602 seconds)
  done (took 1.843906515 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244451914 seconds)
  done (took 1.819692704 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.773466525 seconds)
  done (took 3.34902813 seconds)
done (took 43.988411448 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088743462 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090701558 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090300314 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086079414 seconds)
  done (took 1.922950173 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08146585 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077689883 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081267304 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077987947 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081581782 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077814626 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079141863 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080322359 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077392771 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077460017 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077485923 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077073092 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079751447 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078824556 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07554572 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079597216 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080528367 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07718728 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080262838 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07687687 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075251927 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079629604 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079979203 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076455157 seconds)
  done (took 3.468745198 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083806875 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078844698 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080655695 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076262413 seconds)
  done (took 1.908317852 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082701889 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096841041 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09489397 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083351616 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097692391 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091614773 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074130069 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073678782 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075155755 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082913788 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072472594 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101576542 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093795901 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082845765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085313723 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070494717 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073178882 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.093292664 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082911586 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08374998 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075229653 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082536361 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072515488 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093601922 seconds)
  done (took 3.597215783 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091730089 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110813391 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085864554 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09411786 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097174117 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069974731 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093696417 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096084061 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.133150516 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069756511 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.0753067 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070239132 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077660625 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070258365 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085902692 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113725488 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117446702 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074038392 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102205328 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070340483 seconds)
  done (took 3.390052737 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076990104 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07446494 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072637928 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070461812 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081931027 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077497764 seconds)
  done (took 2.049785854 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.0729538 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072086568 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071821841 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072050416 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077591254 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071716683 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070282813 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071896317 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072222895 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07239761 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071888701 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070895717 seconds)
  done (took 2.457166332 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209833398 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073631651 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074081056 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070087434 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075475036 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070719038 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085779745 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072419862 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096956855 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071163054 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071067579 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073408215 seconds)
  done (took 2.635630293 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214821854 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081162194 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247176712 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157925293 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116525161 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121291719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118327548 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119246238 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148365412 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105565864 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173203225 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173399422 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112915394 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143065185 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09459342 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104467052 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161714359 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170711719 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111368046 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172128365 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157168248 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131848974 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153214195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108236431 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110651426 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127745818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076679798 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085150928 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17662067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139514802 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150060495 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11700634 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097783266 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18303243 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178279532 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147302146 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153290493 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089807641 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106885284 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138798207 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205049679 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093365572 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17106099 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25962798 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085931767 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139364526 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124526773 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126317303 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111089059 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095816056 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151770678 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189927302 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143093503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093271752 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132003766 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119446484 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120427264 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119802515 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189882862 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168415483 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133867039 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077132208 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115069552 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158147813 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138831608 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115271137 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130652286 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096578379 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140755832 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160677332 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128554508 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149874361 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12268422 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094600273 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124354051 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145735362 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133179716 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166790583 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129757397 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077799371 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128561144 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107297438 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085892449 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155439097 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08014151 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180783995 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10462338 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110852653 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131159489 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114337257 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113883818 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16476893 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150019969 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108501013 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.213689847 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112105252 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127567171 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153737964 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093001417 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115162295 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123185683 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081351405 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143524026 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080780771 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127466369 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080003768 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129498658 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135109174 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082383277 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127456882 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108566487 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10524043 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139170129 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165379561 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093748073 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088118058 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175927561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127189861 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108731263 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149573698 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162847179 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103935197 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105472952 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155804522 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18602865 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09502424 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167463376 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111723129 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088318926 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092727816 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128263504 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117052124 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129589148 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086682901 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122859351 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173476586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079578038 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100486959 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139219817 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08344028 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085243533 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110385351 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110021107 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100222368 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104721546 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106911209 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14205876 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128059277 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110164271 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12908721 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251722684 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178736029 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094587096 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108061054 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110440334 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074434469 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141330679 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161979434 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085277902 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170218721 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128927936 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122759151 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124717487 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088080396 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1466222 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083904428 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075572487 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151779526 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115124964 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115343625 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15743775 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123134231 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131874677 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127420056 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138739161 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136673772 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135271908 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111300965 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092632146 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116482283 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132619961 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078390975 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095808496 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084880313 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10966842 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100635332 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088028355 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146428754 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129474597 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115247621 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116350272 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101634512 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152476907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081029886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13357778 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124342808 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100988371 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157109059 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157052374 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136444261 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103655775 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14229088 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074404965 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078471407 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092599241 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.273088825 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088499468 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089471655 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12161126 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15351824 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135528386 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143349157 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130830302 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126949783 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160749108 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075750641 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124788782 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151357506 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126125666 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.110115708 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096295124 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104798642 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148092544 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113132993 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190420343 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11870046 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127921659 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158571725 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106632451 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085023525 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107984087 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140360162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109933801 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148469012 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104607172 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093643632 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11369984 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079641377 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103113621 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132000256 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123298041 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139353161 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120426392 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138002205 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082294707 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12074055 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126633998 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126981403 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068597345 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12461442 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165220874 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099694026 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121871548 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156992716 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083291448 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139850155 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179877 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298639982 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091488006 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115846299 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124979617 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133758227 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125559671 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14647427 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113235487 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143333703 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11475506 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091561212 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093468685 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103077381 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110289721 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101040497 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110712402 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120299832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101789997 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137880144 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109705437 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116532147 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123124552 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.105291539 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095531698 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101997619 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18254825 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123894612 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177260261 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105688444 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14948698 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169823326 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079549362 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083602504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082951913 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145396806 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089365939 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135297385 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112485796 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123217564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128915416 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148101206 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100589747 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073190853 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11566083 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138630452 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130566123 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103324885 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108670932 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167956627 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10415534 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083185696 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11823662 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120955148 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107642286 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175265418 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06604539 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110441762 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225969365 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087322745 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134023226 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160392848 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086955061 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109404148 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124535197 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120296502 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132546323 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105993875 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113794874 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133818222 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15761561 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134453164 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095791821 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117494569 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133990449 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160803273 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110782633 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102142303 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179841198 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156495068 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16487648 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092888801 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118673982 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119124866 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11320829 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141947452 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088148211 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168767974 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08661613 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141900034 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108514436 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093570164 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134251315 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114500279 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092990388 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152367124 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122656255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087500245 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082896608 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123303829 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124730843 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111315585 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080522878 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143707882 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077944981 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136289988 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16495706 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085076768 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109506774 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100072584 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083372585 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259876772 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109690684 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092872357 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104856813 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17805757 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092719605 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155358634 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140354872 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118421686 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140876212 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108091876 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646383914 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.0827938 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157446071 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121704916 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180330351 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105335433 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122570336 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115202619 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128063453 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15215685 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108871559 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191242943 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137463232 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120480712 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084272236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107770517 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108954803 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092076382 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112972408 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1175853 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120213903 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097657086 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120545831 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128433694 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087213683 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101374001 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160581156 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121921449 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149575011 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146464404 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091051866 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121925468 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142181658 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084679065 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125227154 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160672406 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111690563 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105174427 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08516865 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104927401 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313223248 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079862843 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168328349 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125680352 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116488674 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118919398 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11743863 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136273311 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113602888 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127788776 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097757061 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113522016 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119721776 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086704957 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08208075 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112930057 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116904086 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102542869 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103062373 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10483054 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157235626 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077505289 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104833649 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122063048 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150758219 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181538882 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0938239 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087711097 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124584839 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119146098 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118489135 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126475544 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084431801 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086304569 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084981758 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082525157 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113740071 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117532639 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119811502 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115095621 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168361686 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088483261 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24476373 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100477627 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109850495 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074436336 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082713959 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10080715 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103510338 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11236363 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115821191 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16584723 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100832928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094442109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095153301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077924409 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086983088 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131670306 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113320354 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271688221 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107681013 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067919911 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114341984 seconds)
  done (took 61.762067591 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112599572 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087322958 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101289559 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150655159 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128697042 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207050479 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157985096 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194830932 seconds)
  done (took 2.840424158 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073289772 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101231517 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108521405 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08802013 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071266808 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074675386 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238468459 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086320701 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071111703 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101766189 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083558429 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073928598 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.445464564 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070640999 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072374861 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066608784 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072190964 seconds)
  done (took 3.591737263 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.413197661 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622888941 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.3666349 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081043041 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.970887034 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094691851 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.177108369 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139051942 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08354408 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531084337 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414461611 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136467746 seconds)
  done (took 18.73169829 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086653189 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080687713 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09566564 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095524603 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083288095 seconds)
  done (took 2.1403672 seconds)
done (took 112.133784046 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087278552 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.620286752 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057233821 seconds)
  done (took 2.407615252 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089512305 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091341735 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090437807 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088587891 seconds)
  done (took 2.066808274 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079229036 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080778958 seconds)
  done (took 1.860615408 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243568334 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174970212 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102697324 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088347285 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08515698 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084794974 seconds)
  done (took 1.965806792 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077338974 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079266051 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077947462 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081236964 seconds)
  done (took 2.019206044 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081196765 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055920992 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058542744 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061605378 seconds)
  done (took 1.961440513 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092964513 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085037689 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084061097 seconds)
  done (took 1.967228288 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10850735 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091724618 seconds)
  done (took 1.905417762 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086930561 seconds)
  done (took 1.793550705 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100661449 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106327665 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13843572 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117071865 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145789003 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115390994 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089704526 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090239354 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081461148 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092205322 seconds)
  done (took 2.782493609 seconds)
done (took 23.037311636 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084386753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376762956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365128318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09490646 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674994408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360984032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.010170068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098134036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121501476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072242573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089511791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653178044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.001088359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329996089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988531043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329854143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65511484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072704183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071979843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07242156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994286847 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072730403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072129848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073349648 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653607331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376964133 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072769077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328955485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073067022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074633518 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359750206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073624544 seconds)
  done (took 16.447478356 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075294307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127360206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078289518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089935183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075650439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075016651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076076677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073486005 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144553012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072288516 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072201111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076295485 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073581977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093365761 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072673603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073674832 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073396331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072331311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073228722 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092613059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072063623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072863735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073176216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072718898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086354111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074161944 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072857498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07322146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075470284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075371008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074593304 seconds)
  done (took 4.29236106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121388079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131518915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07890027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110329609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117815926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074949389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150887703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099185848 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134035667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072486911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090580914 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073439662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108941529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073639834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09394575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073200169 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07396724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073424656 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073419355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073781467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092531815 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072336549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073404636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073808883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073302346 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08763308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073656206 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073483125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074002459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075348138 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077268819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073610689 seconds)
  done (took 4.53786267 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077193577 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080759713 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088984301 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089851818 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074781919 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077054642 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077805943 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075041283 seconds)
  done (took 2.361868018 seconds)
done (took 29.35172299 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084132993 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074358609 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077318433 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087093019 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078247247 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083436856 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071159153 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080661249 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077940249 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078697536 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08012674 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071678247 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076261886 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071770733 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078916413 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07277556 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084556758 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076581233 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084215423 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084442628 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075209145 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078578193 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080255418 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084331112 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084885032 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084066326 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082596682 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078261486 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073411711 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075449625 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082013634 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089492536 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073401746 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084618453 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071863587 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072223479 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076235808 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072254239 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083798872 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081650908 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07376111 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080755327 seconds)
  done (took 5.014093134 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093340894 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098960559 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090137484 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066142146 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071943018 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070721262 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094649944 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063974793 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063474605 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093737143 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059718971 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06387763 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06795212 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058213932 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064791131 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061037739 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066488181 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059918288 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06497057 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064164748 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094467782 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057431474 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082837794 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068012321 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059957892 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066073152 seconds)
  done (took 3.598629328 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089901055 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091557599 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095558059 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137918 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110703556 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084617256 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084892959 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101668776 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095189429 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071361236 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07564327 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098436694 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095833237 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079026136 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072311508 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091343789 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088789805 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074547229 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078302075 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100048134 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092120734 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090863728 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101037282 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08830631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071417643 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074924399 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077220797 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086227366 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075773981 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08177862 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076038951 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07570015 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074234714 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084378459 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074795185 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073750261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100914385 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083482436 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084075515 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072998831 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080899809 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073273599 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09800975 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133755902 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071773061 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079318594 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076383281 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082360736 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071444359 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093146815 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084219792 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071885521 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076018935 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071624651 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071573093 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075284604 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074312553 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074220818 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08074119 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077962179 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097871129 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076858755 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088538434 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071516071 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080262956 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071409039 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073244337 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071446917 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10218205 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074304611 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116923706 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07266043 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073503552 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081691734 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080885189 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078501925 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071908194 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088388026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082970886 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075467304 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080742116 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075500426 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076835896 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096184612 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074733251 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073906123 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07311742 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078269938 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07515287 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0735822 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086119436 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071771338 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075111031 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08945179 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071656168 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073337654 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078367007 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077154156 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072423313 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083439378 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076538509 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073256412 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082415184 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072113903 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075132389 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08540074 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078843914 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071180534 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076700135 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077723733 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073114537 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073709632 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075378394 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073870302 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081415252 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079325146 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076641214 seconds)
  done (took 11.300566157 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173334794 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.16604396 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075566918 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.156651395 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081288242 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084654427 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.160986346 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100170183 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072411085 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073969782 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073756927 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116260969 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111716897 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122589891 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083671053 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072755159 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089993452 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121365573 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160482465 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154244553 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090853822 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082152004 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075245831 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074250671 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075549099 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084464991 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.0905564 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084988861 seconds)
  done (took 4.667296962 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085413266 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.112300789 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080188998 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097215566 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096634082 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072979361 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075262441 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074571565 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087403433 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083381155 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073101272 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078637062 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079440057 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07564467 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073134662 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080214211 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079929904 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074912677 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076447207 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078659438 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083906886 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097659446 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076339082 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072265575 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078128206 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072550878 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068229273 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089539382 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073251409 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101311217 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070413531 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077710947 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087567579 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07385337 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072939851 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072860852 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072887881 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072423802 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07446435 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070828064 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072178577 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061462343 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071933077 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084169079 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0802328 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060752865 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078405768 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078682648 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077937903 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069895285 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075458102 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075088759 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075517391 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080586767 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076932798 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077705149 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073744766 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079534041 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.08222474 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072782185 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06961333 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071043126 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076931065 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069481778 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081479229 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077333918 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070635168 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073147685 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074509919 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079313118 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071898885 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076996599 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070146745 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075016738 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077922633 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074947762 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073930697 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071034277 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072020923 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072596288 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059109721 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072419237 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05716222 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075770072 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070708677 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071383843 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071924021 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078308483 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084816043 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073650136 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078515497 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07330929 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07113244 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075228242 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064298719 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075759949 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084391426 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087125607 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072214084 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070000868 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086370333 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07707309 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071267339 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059745451 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077107403 seconds)
  done (took 9.770434085 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096422996 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075503578 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.090418663 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.0963508 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.0938774 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080452784 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083037344 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074569348 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089350616 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079998731 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082842799 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072695661 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083636973 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08310066 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075110136 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083793821 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077384962 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.091050693 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088535176 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072830332 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081662846 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08629156 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09682708 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087354737 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086186446 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087226746 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096769159 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082734707 seconds)
  done (took 4.139514704 seconds)
done (took 40.205828649 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.811692849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.964977585 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.795803388 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10991685 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.043455368 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.816927612 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.956623131 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.790126808 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.961362187 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.830714961 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.134390175 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.001447562 seconds)
done (took 65.953539062 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.847542197 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.935254379 seconds)
    (2/2) benchmarking "String"...
    done (took 2.022051722 seconds)
  done (took 5.684473949 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.115658486 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.361582528 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.041205001 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.791825455 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.799297699 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.112954627 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.602169073 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.303389665 seconds)
  done (took 30.742467904 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.982932567 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.016364947 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.525760756 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.557970234 seconds)
  done (took 15.869155199 seconds)
done (took 64.077031204 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.789790139 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.831767198 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.837093706 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.777729922 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.854457627 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.803005846 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.938967401 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.01138467 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.794196715 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.778925508 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.796725858 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.27760885 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.79444862 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.971196091 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.795947846 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.79678829 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.871824825 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.311820953 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.952241428 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.805780404 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.817730629 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.827553582 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.798514317 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.80639748 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.812797216 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.79522391 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197867472 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.798033201 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.423338079 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.798060873 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.832131025 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.107293748 seconds)
  done (took 205.536510797 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.794487241 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.86430862 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.90499954 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.812439593 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.169075012 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.976525686 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.900057151 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.354422284 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.798199181 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.810336161 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.089219797 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.795524475 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.135605257 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.74453594 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.826374017 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.905039775 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.052418545 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.13036803 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.829504789 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.952774674 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.821585636 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.986529309 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.938406945 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.045471002 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.837199722 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.807803906 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.957391599 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.801860006 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.99517227 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.986808713 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.811545863 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.824788333 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.017932523 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.671988613 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.798307016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.811563335 seconds)
  done (took 171.692217917 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.965671773 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.796784134 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.796115009 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.79566257 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.808601882 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.796409327 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.924177939 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.923573322 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.412008919 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.149640967 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.849629404 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59342592 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.796135405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.863923675 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.809686537 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.797671158 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.811793025 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.825295793 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.79635809 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.797558323 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.925044322 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.808677824 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.81396651 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.803195697 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.796856495 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802831482 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.169961725 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.797655011 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802656646 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.054892491 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.797742565 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.797141777 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.644516548 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.429609796 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.88207295 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.79865299 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802874922 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.798150895 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.014533 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.798586528 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.797846085 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.800719589 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927436647 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.800794484 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.927939911 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.800778808 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.281318268 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.800014644 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.799951074 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.894815403 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.800168489 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40137073 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.800212284 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.798324853 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.801145732 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.799136641 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.798019304 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.804347638 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.788862046 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.871380074 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.800746419 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.802899201 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805420598 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.798738003 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.010034557 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.799362352 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.478060935 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.857552006 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.920083065 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.923182312 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.802520865 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.865692805 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.89240627 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.800471421 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.799595288 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.799951325 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.801086727 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.880010688 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.799997171 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.930142227 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.807792486 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.800242701 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.851251012 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.868070511 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.801020094 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.64966225 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.802882343 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.800145894 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.067284142 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.866390107 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.80089353 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.799356747 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.800299108 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.800188227 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.929557081 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.924204517 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.519958565 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.801972958 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.800458999 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.759539267 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.802484928 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.945186997 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.802670372 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.946339224 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.803265972 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.881277122 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.807480375 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.801473674 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.801403089 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.801061618 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.834214543 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.802646563 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.858657377 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.805513523 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.176729119 seconds)
  done (took 404.814614088 seconds)
done (took 785.796392754 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.472906934 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.430183437 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.543366016 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.447307329 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.425964212 seconds)
  done (took 14.056799462 seconds)
done (took 15.794867003 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.890662503 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.898251097 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.826375236 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.894770915 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.824042499 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.893464225 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.876860348 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.82770511 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.864198841 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.828195169 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.86678221 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.826909664 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.814843234 seconds)
  done (took 25.870731633 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.030961952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.044156102 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.875988422 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.030489174 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.852700626 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.032270769 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.981139476 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.953186633 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.955093372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.822592774 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.818729584 seconds)
  done (took 23.137164704 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.038397685 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.037660972 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.883037314 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.029294971 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.856144664 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.038719012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.967253909 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.961182225 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.959265175 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.821352093 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.81858994 seconds)
  done (took 23.149677355 seconds)
done (took 73.895885857 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.814262733 seconds)
  done (took 3.554456039 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.842850591 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.011233717 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.821519801 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.816035496 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.814720726 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.814202386 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.817518472 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.814166869 seconds)
  done (took 16.492884815 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.814510493 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.813878342 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.810834683 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.813704024 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.811309038 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.814525286 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.812261243 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.815011055 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.81206673 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.812423838 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.811980757 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.814497204 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.812309728 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.812043333 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.814373615 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.81564163 seconds)
  done (took 30.751650573 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.813237442 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.812126628 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.811382151 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.813167074 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.811569744 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.813878236 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.813067373 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.813309523 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.813615207 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.811871166 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.812280007 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.812497467 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.812280225 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.812266321 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.81336717 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.813608901 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.813562533 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.812671326 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.817681933 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.812433877 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.813305292 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.813025206 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.813728874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.814708467 seconds)
  done (took 45.25861623 seconds)
done (took 97.797685341 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.537007686 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.446340084 seconds)
  done (took 9.72547918 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.818190207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.816190275 seconds)
  done (took 5.433275225 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.816519356 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.816096578 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.81685199 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.817539081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.816956414 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.816904306 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.816921294 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.817998406 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.816800239 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.816350226 seconds)
  done (took 19.911254343 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.816838525 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.816918027 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.81443433 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.815916235 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.817066609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.813805966 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.817605313 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.817793704 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.817733486 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.814764221 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.818161305 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.815276753 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.819189991 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.815620406 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.817085766 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.815016751 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.81468319 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.816077425 seconds)
  done (took 34.437283888 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.816652157 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.817920346 seconds)
  done (took 5.377186924 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.815654555 seconds)
    (2/7) benchmarking "second"...
    done (took 1.814406639 seconds)
    (3/7) benchmarking "month"...
    done (took 1.814681219 seconds)
    (4/7) benchmarking "year"...
    done (took 1.815914097 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.816144108 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.814965778 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.816297853 seconds)
  done (took 14.452093805 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.818558851 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.978441217 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.042431921 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.466654132 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.820994087 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.821884483 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.749304154 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.822185331 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.822724675 seconds)
  done (took 20.087347304 seconds)
done (took 111.165734495 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.629563724 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.81425366 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.056098578 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.864427848 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.865674427 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.156524911 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.852359278 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.114386937 seconds)
done (took 43.099183282 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.897756991 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.166656167 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.209506513 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.839687672 seconds)
  done (took 16.960539011 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.79786046 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.348140558 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.857200901 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.479159699 seconds)
  done (took 20.431963614 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.186602553 seconds)
    (2/2) benchmarking "read"...
    done (took 2.172286764 seconds)
  done (took 6.109074013 seconds)
done (took 52.145827345 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82429128 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.821421932 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.824915131 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.821667009 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.824019145 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.820782342 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.822280081 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.824829846 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.824894982 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.824757792 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.824634466 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825211141 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.821895796 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821871577 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820767748 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.82419508 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824350835 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.821804903 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824472327 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.824691874 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821776444 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825550373 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.821850847 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.822110474 seconds)
  done (took 45.509871237 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.825107636 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.823263151 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.825202837 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.825538534 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.822333576 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.825188666 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.825674149 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.823155228 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.826930056 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.82520726 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82338758 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.823267801 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.825976305 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.822672014 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826431774 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.823499452 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.8262708 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823956551 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825882841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.822988332 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.826167414 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823246835 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.823378944 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825520452 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.822799418 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.823820897 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.826997834 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.823712553 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826587774 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.824393698 seconds)
  done (took 56.490231342 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.831334194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.835345447 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.827578829 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.82698493 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.826702253 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.828105025 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.82750047 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.828312744 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.828301428 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.827570241 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.828323921 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.828008123 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.827476464 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.82749679 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.827668527 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.827073834 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.827016666 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.827601698 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.827527354 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.82772037 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.827483612 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.827398712 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.827530534 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.827687293 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.828173668 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.828165439 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.828348923 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.82759777 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.830319785 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.827755978 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.8284887 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.827848644 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.828931763 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.828373675 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.827691887 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.82874715 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.833291516 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.836540134 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.828648293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.827811685 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.829923798 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.829232241 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.829641339 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.829338979 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.831637919 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.828442451 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.828989596 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.829309339 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.830228864 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.828854233 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.829594781 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.829892276 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.830083827 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.829918854 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.828948785 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.829922849 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.828792969 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.829102819 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.829942151 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.830490233 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.830088634 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.83025733 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.830016014 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.829815106 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.829773977 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.83018954 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.830108313 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.831095287 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.829922408 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.830678172 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.830549167 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.83117275 seconds)
  done (took 133.451739427 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.829387955 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828236402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.82767049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.827713152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830091656 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.831135113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.827353224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830682158 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827323221 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.830722697 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830511929 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.828988817 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828766766 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830463142 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831152156 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.827798615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.831744999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829607314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.830946105 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831575966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831667098 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.829286282 seconds)
  done (took 42.008851054 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831543437 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.830660782 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.827930044 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.831369137 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829052022 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832459744 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832401312 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834380435 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832981116 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829951037 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828803615 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833783573 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.830451426 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830717908 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829877631 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830061627 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832462433 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829318829 seconds)
  done (took 34.715415082 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.829963873 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.830533635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.832830472 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.83007486 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.830897774 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.832965116 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830207475 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.833318105 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.833086725 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.830332299 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.833574953 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83334047 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.832776292 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829909945 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833574691 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.830809659 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.833017493 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830215377 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833534735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830603839 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.830876433 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83320769 seconds)
  done (took 42.058489966 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834456205 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833705646 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830729453 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831476915 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831146907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.835839663 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.834056489 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.830702632 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.833405423 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.834429984 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831035419 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.83301221 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.831699378 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831251201 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.833229311 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83136353 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833929628 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833429709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833846927 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832376496 seconds)
  done (took 38.414475416 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83653095 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835666222 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.835927217 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835224178 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835050236 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.836250117 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835398257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.835414683 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835182519 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83702089 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.836094677 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835973507 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83667133 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836978376 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.836232923 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836765955 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.835085015 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836573188 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836040748 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835759507 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836199771 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.835848661 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.836293296 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.837300384 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835992556 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.835981902 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836284056 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.836214766 seconds)
  done (took 53.171121544 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83668076 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.836085794 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.832742783 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.833633051 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.833826783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.834080308 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.833643943 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.83287188 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83684789 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.833713844 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.836862091 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.836325421 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83807591 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.837280745 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.836424871 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.836624285 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837012462 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.834334422 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83425081 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83431266 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.837284713 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837942593 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.837387066 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.83473818 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834783764 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.836878558 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835260635 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835076187 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837495533 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.834816591 seconds)
  done (took 56.829129829 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.85554783 seconds)
    (2/2) benchmarking "in"...
    done (took 1.855929989 seconds)
  done (took 5.474275835 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.835370797 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838728801 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.838683357 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.83570039 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835331703 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.838089102 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.839321519 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835018749 seconds)
  done (took 16.459011299 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.835856597 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.838782588 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.839065125 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.839102697 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.838860934 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.836182992 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.842223031 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.838543433 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.837496101 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.838870702 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.844751258 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.845904721 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.838989392 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837468801 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.836994649 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83884161 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.839375171 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.83892621 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.840334692 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.840469994 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.840283063 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.839228353 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839207394 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.836416691 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.839449013 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.849023759 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.840190139 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.841693534 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838161418 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.841133216 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.837774455 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.836529595 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.840078746 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.840296339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.841764112 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.840471372 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.846538919 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83816693 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.844560766 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84062888 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.842600725 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.839395454 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.840092815 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.839862717 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.840199087 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.840562983 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.841280934 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.837904879 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.839022824 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.843267208 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.845756584 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.838183359 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.838602705 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.84211638 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.840465243 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.845489478 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.842298087 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.842547316 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.849261571 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.849277686 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.854359169 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.846765917 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841448668 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.841816897 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.849072638 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.862310368 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846004831 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.838751346 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.839577547 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.841725145 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.846404575 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.85282129 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.849274641 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.842638969 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.842078471 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.842067543 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841790051 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.843437758 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.846777736 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.843185221 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.84203148 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.842599374 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.850672762 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.863265951 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.839874111 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.843589477 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.843199761 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.842958737 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.841542395 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851329613 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.844526713 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.844179571 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.842621203 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.841545504 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.843415824 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.843838075 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.839838107 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.841738325 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.84232827 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.843772056 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843875878 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.844465212 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.850489544 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.843860089 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843519895 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.849299624 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.844961234 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841392953 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.849109552 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.843745422 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.845052312 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.84357412 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.847775054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.841771364 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844793059 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.850473468 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.8442076 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.843129345 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.845137544 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.845292596 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852013552 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.868777051 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.845540947 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.844538487 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.84794644 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.857898825 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.845211231 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.84629489 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.845464784 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.841821907 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.842751755 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.843840981 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.846087175 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.844255077 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.845099348 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843624559 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.842972828 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.845572311 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.845761909 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.845265727 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.844364752 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.843861085 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.845322691 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.846022949 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.846841917 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.844845248 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.850139966 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.844041787 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.844280579 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.845093807 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.843415316 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.846451686 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.845122441 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.847690375 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.844642152 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.847075907 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.845269905 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.847668332 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.848433718 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.848326281 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.847650954 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.846094178 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.849048141 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.848149032 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.848380925 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.843945957 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.844637524 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.84648413 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.84721852 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.845770655 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.847724237 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.84447495 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.848869487 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.854956316 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.848339387 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.847765874 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.848277354 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848039038 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.847877208 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848745844 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.849635888 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.853529527 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.847875809 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.852612554 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.847660456 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.848149021 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.84879194 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.846584536 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.846417309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848876282 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.849619686 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.856079533 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.858457458 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.855241639 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.847941118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.853511588 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.848440086 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.852448084 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.849683621 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.848579482 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.849716347 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.849455882 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.845891855 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.849167805 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.848320958 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.849734125 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.847499334 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.850386756 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.849485365 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.850001323 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.850617543 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.848443505 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.849182308 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.846577503 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.849472425 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850124799 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.846258904 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.84654408 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.846850143 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.847100421 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.850485815 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.85063388 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.853782554 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.848795485 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.848189121 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.848037016 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.848142113 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.847008264 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.851419335 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.849804696 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.847983457 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.855167036 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.848682202 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.849198454 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855879771 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.848938999 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.847487465 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.851317523 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.851420916 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.848819336 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.851505288 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.859189276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.851695661 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.850902901 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.850960703 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.8478513 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.851514083 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.856170593 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.848451227 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.84940774 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.852155904 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.850348857 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.849577173 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.850721833 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.849798434 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.851998056 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.852157917 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.851908192 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.852300506 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.850373049 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.852409093 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.852678226 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.852491137 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.85300744 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.860236102 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.856253039 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.850310835 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.852382867 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.851372742 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.856629003 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.851128616 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.853729924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.850573085 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863504717 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.861258303 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856631583 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.851587135 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.852841829 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855768885 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.852029079 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.855866831 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849931835 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85155966 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.851388413 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.851343461 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.851376198 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.851837176 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.854070929 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854973281 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.85303924 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.857451819 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.853541876 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.850015061 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.854952923 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.853878498 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.853638231 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.851302194 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.853480186 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.85445511 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.852827386 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.851481235 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.850509938 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.858589481 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.851548433 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.853787043 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.851643868 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.851290275 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.851321797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.854368774 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.854783232 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.856358945 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.863758146 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.855366935 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.862006791 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.854863881 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.862374568 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.856100751 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.856580788 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.863239652 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.85251451 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.852989636 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.852989722 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.855686526 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.85913815 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.856298021 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.855041317 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.860861987 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.855787461 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.856368988 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.855259457 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.855228395 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.856125627 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.855533027 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862878304 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.855472815 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.858405327 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.858179399 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.858814474 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.856792345 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.856700337 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.852838546 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.85778266 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.855492557 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.854308094 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.85383033 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.854839493 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.857488265 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.855669433 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.857483832 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.853909735 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.857162028 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860748534 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.854763288 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.864412684 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.857197525 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.862987125 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.856189732 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.860376761 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.857895916 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.854457395 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.85748294 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.85699342 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.856584226 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.854606674 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.8560894 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.857342005 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.8565531 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.862121702 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.857797016 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.858990584 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.855725006 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.857223318 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.85491419 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.864902791 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882481379 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.8577143 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.862415939 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.855611267 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.85726001 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.862321587 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.858117385 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.855839579 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.859151044 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866961802 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.867274148 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.858191428 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.858787683 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.856874097 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857931694 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.858803852 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.859448739 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.859239889 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.859806372 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.856689419 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.858460978 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.859895163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.859004583 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.857813778 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.858416818 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.858721718 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.867359528 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.859893834 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.858725102 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.858928339 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.860092172 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.857164158 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.85728746 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.860357942 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.857243317 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.860398604 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.858918662 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.865335675 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.864680532 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.860540314 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.857315055 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.86013018 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.857438428 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.858787362 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.86135178 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.860266234 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.860758783 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.859374091 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.860385589 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.858716575 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.857610644 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.86192661 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.85890011 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.860839063 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862477274 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.866226052 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.860150712 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.858539402 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.861404686 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.861379403 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.858588671 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.860065307 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.867334306 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.862126758 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.869219475 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.868002464 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.865460874 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.859134099 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.863391361 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.867604512 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.859104389 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.860056949 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.862076189 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.861300773 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.861209327 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.863248548 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862479084 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.865852829 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.859143952 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.858992693 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.867655627 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.860379709 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.862223931 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.860949704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.863731243 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.859984165 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.859472792 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.863449143 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.859589538 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.866144071 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.861960339 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.862319112 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.862372296 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.859491128 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.861411361 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.866192987 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.863358957 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.862904041 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.860254847 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.860923359 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.863094258 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.863857351 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.861265623 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.86149125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.861980561 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.864859901 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.868373386 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.861334963 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.863983312 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.86144645 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.862762126 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.864297506 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.864329743 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.860687767 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.861373314 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.861610322 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.863294233 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.861494538 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.864467173 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.861274756 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.862070844 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.865753831 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.864227728 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.865549008 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.873842351 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.872581901 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.86183785 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.862526508 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.863231013 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.864790955 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.86418988 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.865695093 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86209091 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.863542655 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.864808475 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.865424339 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.865468551 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.866512224 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.878597476 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.866145881 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863592624 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.863887633 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.866321289 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.86600374 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.862052503 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.865905079 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.865297182 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.866059233 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.874444027 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.865608076 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.870884727 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863596456 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.865416215 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.870603616 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.866784898 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.872242269 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.866375901 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.866347389 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.8666811 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.868743502 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.883618671 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.866254089 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87504566 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.894234044 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.865062148 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.866375794 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.867274546 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864385402 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.867255578 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.866756293 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.866364636 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.867195853 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.867202628 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.868268883 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.865623432 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.869653307 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.867315131 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.868249809 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.866953683 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.865292925 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.867632585 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.863802636 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.867475006 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.867319701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.867343602 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.868335124 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.868460294 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.867200493 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.881448759 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.876994593 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.869078444 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.869319642 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.866908159 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.869439628 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.870128798 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.877780731 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.876662318 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.868505942 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.869738237 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.868400056 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.869436811 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.866782871 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.867061534 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.868962757 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866185226 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.865978326 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.881127327 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.878600646 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.872239637 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.867962481 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870405726 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.869379352 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.868639011 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.870209132 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.870287793 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.872431453 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.867414528 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.873074228 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.868259449 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.868613323 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.87025662 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.880168648 seconds)
  done (took 1107.266351678 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.866198571 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864671072 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865527439 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.866568876 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864864377 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.865170183 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865463886 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.865111165 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.865320254 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.865128487 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.865177918 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86517726 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.866261682 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.866362278 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86621063 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865697115 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865934471 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.865755351 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865089046 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.866908151 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.862146508 seconds)
  done (took 40.968141031 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.865624086 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.862710138 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.861660259 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.866129041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.862270026 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.865287536 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.862847258 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866306788 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.865252945 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858255839 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.860597999 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860327124 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.857542453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.860333394 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855141837 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856786571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.85782818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855380753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.857699556 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.855464864 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857735075 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.854559613 seconds)
  done (took 42.716196995 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.85635943 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.85739049 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.854565176 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.854276757 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.856752996 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.854180789 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.85631798 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.856513963 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.856672532 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.855366178 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.853866555 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.856143817 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.862349772 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.863139117 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.856405226 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.857840314 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.001025134 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.856924172 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.858641381 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.857428317 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.854854834 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.860409302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.855015326 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.855188874 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.853077769 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.858147115 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.857555366 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.858299823 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.858897882 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.857436355 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.863736599 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.857801709 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.855944311 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.858019363 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.856369503 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.856786866 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.861944239 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.858712123 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.855104691 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.858567198 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.865952274 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.879233328 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.859577978 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.862597102 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.859641511 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.859184586 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.859574846 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.866278689 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.8567247 seconds)
  done (took 92.985079919 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.859197353 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.858574174 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.855447845 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858241717 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.858528496 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.859595403 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.859088297 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.858582155 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.854825599 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.854512194 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.859137359 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.853639482 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853319119 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.855513899 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.856795646 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.852502338 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.85448246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.853469745 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.852935586 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.85363296 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.85365596 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.856175001 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.856399731 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.854310966 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.856837208 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.853760695 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.854797502 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.855529811 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.853884323 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.852672872 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.855664567 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.856212116 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.858852929 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.853270468 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.850731439 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.853535847 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.854204877 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.851650952 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847514709 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.845162239 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.8490907 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.848781763 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.848530264 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.849948046 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.845639929 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.846345585 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844670856 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.845173274 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.845424601 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.849424218 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.847899984 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.846335772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848305194 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.848039497 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848397227 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.847894429 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.846244243 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.845184455 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.84837441 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.846261938 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.846164772 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.849107855 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.846149458 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.84799516 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.848180833 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.845683352 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.845215121 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.848366408 seconds)
  done (took 127.70617776 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848864821 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.848459744 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849229671 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848408757 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.848217506 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.848670649 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.849915461 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.850450529 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.848881656 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849669189 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848957098 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.848817997 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.84901401 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.850030048 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.849357023 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.848831581 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.849437166 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.849157962 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84955462 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84998895 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.849057897 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.848546577 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.850498648 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.849662478 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.849733707 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.849914242 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.850170806 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.849961428 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.850525728 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.849983915 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.849505647 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.848726619 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.850024654 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.849965361 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.848450309 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.847701329 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84742662 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849577016 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.847633881 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.847241662 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846448535 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846078263 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.84729631 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.846320766 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849568748 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.846969959 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.846566337 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.847152384 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.846685333 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847985847 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.845903342 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84570986 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847617449 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845786035 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.845412899 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.846569862 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845461538 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843978639 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844301504 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.844811731 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846858747 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.844305046 seconds)
  done (took 116.361106612 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.8442538 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.843773532 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.840589987 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.841305563 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.843067353 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839965205 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.843178846 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.843022717 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844054522 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.842803067 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843825238 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840630961 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840950675 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843280438 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.840670746 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842196631 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840432154 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.841081016 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842785773 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.840809357 seconds)
  done (took 38.612391762 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.840215308 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.843311447 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.839947059 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841009414 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.842422251 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841262993 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.84396039 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843611466 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840310929 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843728857 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.843930399 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842328181 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840346747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840420017 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.844587384 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839615241 seconds)
  done (took 31.239036948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.840856209 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.843627401 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.84317786 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.843879371 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.840225533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.840515349 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.842860453 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.841539969 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.842171192 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.843088296 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.844191732 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.84344207 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.843016558 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.843667187 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.840370468 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.842567905 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.839495896 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.84016504 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.842328142 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.842920065 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.840058331 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.83975838 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.842719603 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.843238328 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.840510282 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.840107452 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.840306046 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.840422985 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.839732796 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.842965538 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.84061273 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.840401535 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.839395592 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.840200069 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.84239973 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.840091965 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.841690023 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.841870444 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.843005979 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.843315096 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.842446432 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.840725777 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.843199851 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.842671645 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.838952013 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.841797574 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.839354174 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.839593536 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.838956522 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.838948549 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.842206478 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.842552517 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.84272915 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.842511024 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.842070829 seconds)
  done (took 103.055637246 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842254905 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842710855 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.837722209 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.842372244 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.841154678 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.838235924 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.841026059 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.839693039 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837638591 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.840906358 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.839257247 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841027407 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840492072 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841610328 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839254414 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840822261 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.83878114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839922557 seconds)
  done (took 34.892094699 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.8397377 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838124656 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.842069565 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.838578477 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.838900562 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.842292123 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839003272 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.840694444 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841512294 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.840327955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838815479 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.841801925 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84156868 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.842186462 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.839021492 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840241183 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.842398668 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841843241 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.838730273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837777572 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.844956543 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840764928 seconds)
  done (took 42.257995589 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.838466322 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.838183568 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.854135606 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.858054946 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.859174813 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.870915848 seconds)
  done (took 12.886199749 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839265932 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842490793 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839241031 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842867921 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841557911 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838674906 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839640501 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839728023 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84245956 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839020318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84009412 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842856334 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841490178 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83876239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841215318 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842397038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839837759 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840207498 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838603681 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842585344 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838898134 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841487521 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839645423 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839814483 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838683528 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838775257 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84106322 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838917349 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839969543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841679436 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842738683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839176542 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840830088 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840042904 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842897082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841891036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839987355 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841513924 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841899415 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839843714 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84138551 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842559531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841392868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839556272 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842130565 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839581606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840625122 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840059526 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839326423 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842737279 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84390812 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838650327 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843084277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841332386 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842679303 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844193766 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839326114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840173583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842913721 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840721907 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840077752 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843580977 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840822801 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839868105 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841985752 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839977125 seconds)
  done (took 123.264054069 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840824958 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840788555 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839591755 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841326507 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839393462 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84162397 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840277561 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840550756 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839839223 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840645257 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843401465 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840508696 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840510564 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84033058 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840994171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840184181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84175886 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840664043 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841899265 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844211406 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841252466 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841416772 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840995228 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840686463 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841180937 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844412096 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841264305 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842269436 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841936097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841900829 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841971244 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842650367 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843244473 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84146023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842640194 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841532587 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841633726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84136724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841738774 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844475519 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842160342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844430626 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842319091 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84316181 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842629999 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842473728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842270575 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842621773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843905646 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843146692 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842774209 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843918769 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843023744 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842536957 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843604742 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842938128 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843136521 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842879471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84307683 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845852327 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843208827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843138347 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845853871 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843090712 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842988335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843950594 seconds)
  done (took 123.356271003 seconds)
done (took 2563.898945717 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.843708848 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.941593377 seconds)
  done (took 15.556947271 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.004885492 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.957517117 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.842615471 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.847083256 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.84263224 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.865202015 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.840302811 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.843482312 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.842913754 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843034107 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.84302932 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.02982485 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.897092514 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.843165605 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.843057066 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.937510569 seconds)
  done (took 51.898681501 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.846352279 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.847172162 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.858428727 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.850679602 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.847779785 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.858076564 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.880246081 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.849182932 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.88741629 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.860730852 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.920144301 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.857721269 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.845168878 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.89701082 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.861575755 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.861286528 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.939278157 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.922829251 seconds)
  done (took 35.463872915 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.924241263 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.846704822 seconds)
  done (took 10.550765465 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.865399848 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.896769084 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.921729015 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.865904522 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.842742911 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.844733152 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.842444699 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.84732967 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.842822407 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.87949898 seconds)
  done (took 70.425173393 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.853468453 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.847931869 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.847885902 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.845553611 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.839319479 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.843278347 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.846915672 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.843621434 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.516019888 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.883585933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.853491149 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.85393079 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.84804923 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.851820426 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.849371256 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.872918586 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.94264566 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.850724883 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.848559524 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.854128341 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.848913824 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.906104573 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.8618706 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.852329234 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.880049954 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.518358685 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.857704106 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.855317497 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.946709383 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.851709785 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.848987566 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.850450414 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.851832993 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237682123 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.156521639 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.848696231 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.86497938 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.856643878 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.849963464 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.946213491 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.850660848 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.854847274 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.439364525 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.137787497 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.953131657 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.892017388 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.148732538 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.865828171 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.852113193 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.878309054 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.851739184 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.851322141 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.86203685 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.327903141 seconds)
  done (took 131.029267557 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.844993216 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.205344484 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016243033 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844806428 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136987281 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058797507 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845794164 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896200607 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.847402337 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.080034955 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.104160158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.956583857 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847361724 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.844884429 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.846674237 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843436175 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006024925 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.921055165 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845762631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.842756494 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878706757 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091929491 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.972860923 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849326172 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.877585927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060671311 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.972551402 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.957072509 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.632325137 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.8447307 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.913918148 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.847189208 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.846617828 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.8452242 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.005519193 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944425939 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93631361 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.849072322 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845662805 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.845696481 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.520757813 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048748715 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.945434762 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992024777 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.046677046 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.057940936 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.632033801 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.844644013 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.589808579 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01440074 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.0805112 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.080392417 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.971659557 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.849326016 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.176411315 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.844948211 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845615705 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099880022 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991429999 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950523048 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848742529 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.847610838 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846477512 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096380588 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.848783567 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947374365 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849330458 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847919514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.947586141 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952456765 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.989885388 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063593406 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.881097142 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.736529203 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.386635377 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.099568723 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.916730672 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101087346 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.848523341 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846683952 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930756103 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.700635278 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104588022 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099904325 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.105818265 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887599343 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.57440031 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.847488556 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.07741037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.072783926 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.102421087 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.054352992 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.0905301 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.183316791 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.848105822 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.847856006 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.076545917 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988127069 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.850839588 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196440142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087974193 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.4151037 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.872171646 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.161705508 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982686954 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.851690165 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.494175582 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.84963075 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.075714807 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.892765928 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.850593217 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850603373 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.072505809 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.827070866 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849581343 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.502604907 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.915939863 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.850895245 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08767554 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.851900117 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114401883 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852013632 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090644906 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.441529582 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885297972 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.02882648 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055061492 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.852034347 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098750509 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.09862703 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.968530326 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074027935 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.479605121 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.850766162 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.143158144 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851873023 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.851243822 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.026519154 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.852173121 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.000602421 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852747337 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137554388 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876343764 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094236074 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853454742 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.108790016 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.888247066 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903750019 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852610608 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980492885 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852437779 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.784946288 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012422373 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851637222 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85273589 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.408375746 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.854005715 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01373771 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.086471604 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875757563 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926278316 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.524616104 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851280879 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943528408 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879578555 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.249083265 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.85261533 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.10842637 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.853536321 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.85351533 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.852394508 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.096306583 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.039499412 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854246248 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852185402 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.752688895 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.852410357 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852311646 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.038348767 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.172909672 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851699412 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060564787 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.856187675 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984042128 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855800813 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.937617701 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.193411128 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852987271 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.852053369 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.85255522 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.851798624 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854255432 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065781356 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88319443 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.389807841 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.994033677 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123455941 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.169029677 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.104544579 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.900738185 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.856480183 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117908117 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.856089403 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.920970098 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.854752734 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87745331 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091512192 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.856472045 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121843262 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.135650686 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.894613885 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905344123 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.856051312 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.852726185 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.853582832 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003167718 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944009971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856136414 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.854979297 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97225515 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979490971 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.068181853 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.855208965 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.896399638 seconds)
  done (took 898.388322092 seconds)
done (took 1215.083698321 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.8554943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.855298987 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.842355723 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.853276572 seconds)
  done (took 29.195513758 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.864279857 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.857643069 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.860889332 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.857166205 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.860935656 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.857167858 seconds)
  done (took 12.943162807 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.879744305 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854179006 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85293323 seconds)
  done (took 21.372856674 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.927241382 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.2431184 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.962744592 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.279513821 seconds)
  done (took 10.199046181 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.868418443 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.862226433 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.863502021 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.861712004 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.865032102 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.865866751 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.860884809 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.861709297 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.865967617 seconds)
  done (took 18.56255123 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.536828999 seconds)
done (took 98.598455911 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.862923709 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.230007128 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.777615533 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.990931113 seconds)
    (5/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.018071428 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.942878094 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.890935501 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.255926907 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.931853992 seconds)
    (10/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.733406939 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.639992768 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.985933604 seconds)
    (13/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.859588729 seconds)
    (14/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.062313799 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.89874279 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.757456498 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.081989979 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.884396359 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.811460416 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.857342466 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.97640184 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.028959782 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.958608508 seconds)
    (24/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.924245238 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.957468122 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.950529126 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.638705243 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.933841528 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.172734695 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.188635028 seconds)
    (31/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.980248025 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.905133907 seconds)
    (33/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.173163366 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.843107165 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.987434364 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.881805459 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.839490852 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.180616682 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.885760678 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.152488318 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.964469622 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.856742489 seconds)
    (43/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.949463703 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.922432756 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.950999427 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.234773722 seconds)
    (47/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.05360684 seconds)
    (48/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.868704904 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.104299425 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.199615626 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.879117266 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.035153627 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.161541695 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.95581833 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.15179251 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.844435882 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.955152666 seconds)
    (58/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.952355991 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.887837211 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.036764193 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.689606515 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.859724135 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.106214545 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.303141271 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.548829965 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.113009019 seconds)
    (67/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.842711026 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.192796306 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.96607917 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.983446713 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.917354653 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.68800928 seconds)
    (73/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.941804758 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.928338429 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039240273 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.877054201 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.336107939 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.162974965 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.888899269 seconds)
    (80/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.967325116 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.911598868 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.200304488 seconds)
    (83/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.954465946 seconds)
    (84/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.035578988 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.195655643 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.846083636 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.219709939 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.148482671 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.950222557 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.998379338 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.953006024 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.542754948 seconds)
    (93/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.275040252 seconds)
    (94/309) benchmarking ("sort", Float32, false)...
    done (took 5.566016477 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.930027682 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.824028929 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.544115875 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.868310146 seconds)
    (99/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.874936636 seconds)
    (100/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.001464252 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.96525338 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.959655658 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.393781875 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.845444562 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.556492679 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.993835395 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.099166571 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.217973174 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.156956298 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.834606817 seconds)
    (111/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.283178877 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.374507592 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.886365252 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.273704623 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.159934519 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.898653889 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.96839023 seconds)
    (118/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.945932992 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.887997092 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.859483636 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 4.827038737 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.37168856 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.041877949 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.063695317 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.114232159 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.884027391 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.845664872 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.437322978 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.862498406 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129832581 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00036206 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.864387187 seconds)
    (133/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.37842068 seconds)
    (134/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.022640842 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.850099044 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.815445076 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.195079276 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.509263499 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 2.089081612 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.884934117 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.783011057 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.120469771 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.022961679 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.322262092 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08452151 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.117107947 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.9579919 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.848935279 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.322452421 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.791659545 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.982789492 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.973872948 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.871665594 seconds)
    (154/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.433024424 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.308473299 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.325791448 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.030145385 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.962981664 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.855839509 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.202838399 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.349410378 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.120585207 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.512349203 seconds)
    (164/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.958631106 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.300371978 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.897804124 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.872776341 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.35780532 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.325570016 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.87611934 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.93585107 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.901974223 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.162664061 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.985630978 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.335313225 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.944610311 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.217925666 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.262159318 seconds)
    (179/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.130880847 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.980150223 seconds)
    (181/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.877095726 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.307453197 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.035338814 seconds)
    (184/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.946516788 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.116441347 seconds)
    (186/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.975082287 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.175692362 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.235842191 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.064381357 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.905953717 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.960642532 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.157022736 seconds)
    (193/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.322174313 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.866262983 seconds)
    (195/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.350086801 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.002951182 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.979320647 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.574941757 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.914909642 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.876752606 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.864482725 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.01803782 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.896472395 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.876739431 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.094077944 seconds)
    (206/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.967713072 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 8.065934386 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.866705958 seconds)
    (209/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.100011343 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.973534525 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.959305768 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.88255582 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.039331108 seconds)
    (214/309) benchmarking ("sort", BigInt, false)...
    done (took 6.878019934 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.011768401 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.018995819 seconds)
    (217/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.884159781 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.177413569 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.077184214 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.914072352 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178999436 seconds)
    (222/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.959586897 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.964358001 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.879457559 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.573759985 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.10541647 seconds)
    (227/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.889713233 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.038612694 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.992596702 seconds)
    (230/309) benchmarking ("sort", Float64, false)...
    done (took 5.624278513 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.881479265 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.274087728 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.475591878 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.329076099 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.215709635 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.183775796 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.929480944 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.883899759 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.852822408 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.859813174 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.753573239 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.332600208 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.240700983 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.921356965 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.271428681 seconds)
    (246/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.967498806 seconds)
    (247/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.864664977 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.743356945 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.984192901 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.906286678 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.877512292 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.132767084 seconds)
    (253/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.122253915 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.12771059 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.975757713 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.994797554 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.11062633 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.885304096 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.865878696 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.988976109 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.990437902 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.974188632 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.264828673 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.88435441 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.025885369 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.503499227 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.077241681 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.184921535 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.535566604 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.912892955 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.059921975 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.023726667 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.951165603 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.914993458 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.880957923 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.225341827 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.938752111 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.23827326 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902366207 seconds)
    (280/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.866499201 seconds)
    (281/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.446607479 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.004856123 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.882515208 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.052253485 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.066354791 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.231677931 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.47095136 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.002315454 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.988075436 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.882473796 seconds)
    (291/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.03790888 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.884836239 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.370215528 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.880212223 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.978616158 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.054248909 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.572464269 seconds)
    (298/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.170338394 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.887336478 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.22161208 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.927049533 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.989068274 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.744111568 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.807519201 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.214645826 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.108366837 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.886406943 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.911868096 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.980582596 seconds)
  done (took 1007.887295801 seconds)
done (took 1009.739955638 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.916407407 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912189453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.894714021 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.916364097 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.007683125 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.923638944 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.904902569 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.89684285 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.942466047 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.943854014 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.895235655 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.922217734 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.897029424 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.897411267 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.894617609 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909940091 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.215813061 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.931908655 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.913239307 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.904728943 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.913940059 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.896476194 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.947537487 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.922868635 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.899312577 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.899067986 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.900832738 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.917820726 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.008611072 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.900679425 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.898362121 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.908463069 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.215943066 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.926695548 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.89069446 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.916850617 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.908209707 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.905722511 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.899595099 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.930030146 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.309539959 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.940247276 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.89939398 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.898498024 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.898878572 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.90035749 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.899023878 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.903505657 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912314786 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912080594 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.304902548 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.956253079 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.901752136 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.898524098 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.907219401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.899036659 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.900874666 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914992282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.919862092 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915521577 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.206997437 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.932929572 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.899895618 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.916725052 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.906230243 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.342251185 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.934340743 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.902054438 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.312275377 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.944765177 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.34175597 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.951897805 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.900836593 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.91625286 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.932077908 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.217743146 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.925856171 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.897991036 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.909263835 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.899447494 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.909001807 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912963144 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.904184707 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.900958893 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917466298 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.9273085 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.908875811 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.901097267 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.90936243 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.920061999 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.908067991 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.911687833 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.902116328 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.89472728 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.908811728 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.902802544 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.903432766 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.904598594 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.904670725 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.910196004 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.307961857 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.959056383 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.896444313 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.897610874 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.900638002 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.915032651 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.309207068 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.944656074 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.921924331 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.949331812 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.903464015 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.208228084 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.936893835 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918429391 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.910225759 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.903197599 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.89501469 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.208895632 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.338630343 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.960257822 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.902236354 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.90165676 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917643266 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.904719452 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.900883909 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.221422054 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.934960095 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916966636 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.023676278 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.912519857 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.935305553 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.901851701 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.904628855 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.930867056 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919159812 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.934871041 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.905356275 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.917971295 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.919156461 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.898025221 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.913160289 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.912921523 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.903875726 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.908323951 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.896723294 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.932007226 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915507259 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916103213 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.923524944 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.025236041 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.901864812 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.209483928 seconds)
done (took 298.66578418 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.97121199 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.898793481 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.994572723 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.901839963 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.981313075 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.983638597 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.898337576 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.899588647 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.898610419 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.27481444 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.89843146 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.901332765 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.898273447 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.900871822 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.980053414 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.901602107 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.900810319 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.237983065 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.903500696 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.969930068 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.896728571 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.900922985 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.902208898 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.270195097 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.897856394 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.899768898 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.970206 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.902601655 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.234990624 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.900616942 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.900730517 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.236746804 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.990306791 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.921046124 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.912715274 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.909336736 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.982750629 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.906880471 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.980765437 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.981334871 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.99850216 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.945282974 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.900741125 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.895404402 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.906790431 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.904804384 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.900905351 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.931193811 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.89369845 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.902687493 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.241303044 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.914390376 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.902945208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.902698355 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.901731165 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.936416849 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.90207839 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.906111179 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.992211066 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.905239202 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.96405395 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.272742801 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.276847998 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.904339795 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.903831082 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.902339059 seconds)
  done (took 186.428871502 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.968177489 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.973990303 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.968568478 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.90643857 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.95069212 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.969898601 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.906171034 seconds)
  done (took 15.470580042 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.908983301 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.905721158 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.954673276 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.956164583 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.904761956 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.053630115 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.905001984 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.913523742 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.902757277 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.954482458 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.906012967 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905583148 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.911828636 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.898425336 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.953507861 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.915386521 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.021551958 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.903805539 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.906635941 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.057678695 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.90405207 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.912645195 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.956986268 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.915054896 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.904814135 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.909312575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.496589995 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.907066964 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.904446774 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.905390964 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903210761 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.945922334 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.906809424 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.906170642 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.903143642 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.018349929 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.907264328 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.903453162 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.907024879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.902530413 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.90714373 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.907439399 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.90714184 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.905078881 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.908183615 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.928532581 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.907122186 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.906935358 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.907146674 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909319637 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.955231927 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.907604053 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.904675175 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.90500297 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.963247138 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.915044245 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.908125788 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.906168967 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.908286161 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906358597 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.059758355 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.956215517 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.907117123 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.955726112 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909633097 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.909234826 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.908066827 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.908456619 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.003657638 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.90927431 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.958664119 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.906413827 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.065329398 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.930519294 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.910674488 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.910963921 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.909693871 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.910186804 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.905532847 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.912765277 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.906950406 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.908352693 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.913242918 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.90965192 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906360874 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.025861144 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.014411231 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.907544372 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.920956852 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.914340384 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.907296433 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.960015263 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.909485447 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.909297151 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.964616749 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.024906642 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.962270504 seconds)
  done (took 209.477820938 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.914049672 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.914480057 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.908636246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.924397964 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.907216667 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.908558208 seconds)
  done (took 13.308542013 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.909176986 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.91196908 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.910304271 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.910036771 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.910399628 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.909590603 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.91031727 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.909552363 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.914878558 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.911832299 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.909911194 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.90974125 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.91052373 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.910394632 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.911472579 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.910596075 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.910181394 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.908252739 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.910320005 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911264434 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.066124543 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.910177142 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910061396 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.909101927 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.91491395 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.910372512 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.915532773 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.91270212 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.910846411 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.918813366 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.914612992 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.910478916 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.908831583 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.913946168 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.916733215 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.9098432 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914675648 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.910993303 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.908988102 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.910622058 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.911668058 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910840191 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.912441189 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.911723838 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.910960514 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.915752341 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.915520722 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.916979857 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.912738891 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.911886191 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.91316701 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.91210026 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.910949365 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.910773855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.913375365 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916937596 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.915469652 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.912892708 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.911498871 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.911603339 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.913264052 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.913344405 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.912464853 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.917470889 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.909854958 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.91215876 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.912951455 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916444285 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913141048 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.913221463 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.912975581 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.91074777 seconds)
  done (took 140.660017749 seconds)
done (took 567.188456388 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.07814914 seconds)
  done (took 8.912866157 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.969036357 seconds)
  done (took 8.844648042 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.412613148 seconds)
  done (took 10.247894583 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.917709443 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.941083946 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.911485346 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.905039982 seconds)
  done (took 29.527999379 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.044826717 seconds)
  done (took 8.876261522 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.927879938 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.903598819 seconds)
  done (took 15.696373393 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.942894968 seconds)
  done (took 8.775328395 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.043179653 seconds)
  done (took 8.90067099 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.921184416 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.941327763 seconds)
  done (took 15.709304323 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.886387492 seconds)
  done (took 8.720106539 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.483030033 seconds)
  done (took 11.418470387 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.923758679 seconds)
  done (took 8.866323728 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.963014162 seconds)
  done (took 8.796980495 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.019777978 seconds)
  done (took 8.853170487 seconds)
done (took 163.982004035 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.905332125 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.904762176 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.903958303 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.903774463 seconds)
  done (took 29.451341852 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.94661069 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.946564051 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.947028966 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.957295973 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.950660757 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.945317078 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.939906436 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.938377368 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.959268666 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.949300062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.947951106 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.947542856 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.947489266 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.938141599 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.947829701 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.947600396 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.958309344 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.946723222 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.938882193 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.950174853 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.913094581 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.957487262 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.950464782 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.913552473 seconds)
  done (took 48.520078304 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.112332698 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.982332082 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.064656661 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.96301051 seconds)
  done (took 9.956844473 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.963955635 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.967335023 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.977294152 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.018074305 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.039642918 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.976730324 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.940267825 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.935337192 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.921607501 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.967350834 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.042022076 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.961699385 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.063001443 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.915516613 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.099563956 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.914140755 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.913673879 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.965987383 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.018008626 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.030855719 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.914720705 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.968446831 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.969575074 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.962038168 seconds)
  done (took 49.282141945 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.912946175 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.921423273 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.919767921 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.913949387 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.91340755 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.914364427 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.91973957 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.914736727 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.935150693 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.914734437 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.912847805 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.913298657 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.913551332 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.913721614 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.912912146 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.926674788 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.928285191 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.914115734 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.917083543 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.919197481 seconds)
  done (took 40.188971557 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.905967573 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.759869154 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.258424485 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.159913918 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.906605148 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.906650616 seconds)
  done (took 31.734512949 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.926143401 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.919252979 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.912770487 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.971147359 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.052937837 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.92154097 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.914190143 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.925824466 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.961732103 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.977796342 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.935672791 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.944326918 seconds)
  done (took 25.201566413 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.909359986 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.920432649 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.908748217 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.935731105 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.924584556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.922066649 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.920476192 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.907330028 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.927515986 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.932637511 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.921748877 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.925394542 seconds)
  done (took 44.898322297 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000252128 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.800404355 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.979216591 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632829674 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448694137 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122692175 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.437996615 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250582699 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.914114635 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184294552 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.938112362 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159696325 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167012627 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911855339 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.99726337 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363223629 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214712473 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14535442 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939213529 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.66629516 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037250854 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459524234 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.711474519 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04365932 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123716062 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.04551012 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.172223453 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.86511032 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052797547 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950868116 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922817599 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911702309 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186542749 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298454179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02660128 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922718431 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563046025 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.63260112 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.897403715 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.63438004 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.79618443 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.050081066 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921568228 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913764947 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847917675 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331845236 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359530293 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.918441271 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.615398509 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913373059 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925156185 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004752631 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.916799341 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.729975915 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86357489 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19273278 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.910491405 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917707524 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480142856 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.003957675 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443976205 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.955245053 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.003704677 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.68168936 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391461588 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.063420273 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.918011415 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917838357 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849840709 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.602851848 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042110626 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.060611712 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.933988741 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56396895 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218068307 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.036671756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001585443 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211996022 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.608474851 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.954985061 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14408684 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873125276 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85035233 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.772691844 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850674032 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18918258 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953117593 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.539649778 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955466911 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253094543 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926983798 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935698681 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922432413 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140164699 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.796792128 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916246043 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.696393401 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206709319 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938960511 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252757997 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855117607 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.921018771 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17265869 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.12930603 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.061383038 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.47264197 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080745555 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916368646 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.00215727 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.742913123 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03370792 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.197540425 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97776695 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.007483541 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052336682 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.882501808 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224598545 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946588114 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.090070376 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.010021326 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186755654 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.230579485 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172121253 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001136987 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922148619 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919120903 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.641612145 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.547677482 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.143198881 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.916482435 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324012979 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032728659 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.919822187 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854668994 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.562755188 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990864591 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.032221513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142780078 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.768874056 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299119603 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85468916 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064752912 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035213164 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.144871101 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.581489132 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.006541209 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179615086 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32374466 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.168127749 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03610038 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938693204 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013991256 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942782976 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.260235242 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281419602 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.924913128 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.923785122 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.689812543 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.988276745 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924331916 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.925304651 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741228339 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207652778 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948326452 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929761058 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.809577915 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.934072632 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987790908 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925501089 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931529545 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.424532337 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670767293 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.930875119 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.639034786 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166282416 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93037342 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.692364938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119062281 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.003473755 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203614475 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983640952 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.856966283 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.623754882 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.624902229 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921385215 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857972913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921472961 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932312054 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933429766 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.116569182 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208780754 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96909046 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.689704591 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.041032701 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932808861 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.926542445 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921791123 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.415110405 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027816642 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460045884 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038123018 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05950857 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.935363369 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857736105 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.925362044 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927280452 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923166303 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.882838249 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977835118 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.620065722 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386566188 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18370363 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.568214713 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940111872 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.718787744 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.05897342 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.946014145 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723054459 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923005106 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.019854034 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9803169 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.933872042 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.701121496 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.6996732 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.488606676 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23732158 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239412354 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376984161 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.331410933 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.251868404 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263663938 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160059184 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453961035 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985130574 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270302942 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871088861 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010011099 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.586482943 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290477979 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939737984 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152373692 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322823696 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.807443366 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090850643 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135567778 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959511797 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.764975393 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957349199 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.129094224 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080039439 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.709244778 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15790772 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261737567 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720717902 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.039130974 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.921067595 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.630975097 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011209642 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.637887855 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.288435653 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36289296 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.065511359 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42589044 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.934802659 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.373090765 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286422351 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.150072166 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.119406571 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861169259 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937396766 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936162913 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.923723895 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.904573623 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.861680588 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.217248319 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937383154 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162809023 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.100565265 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.298961185 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.834440894 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.933298902 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926830042 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233437045 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.633579212 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170645217 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.293138184 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.501726686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937381193 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862117419 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861747336 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.630903819 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929098364 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903207463 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153963161 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.034981175 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877360846 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338510226 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242765321 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184507832 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.94230899 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.211375779 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207782449 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.662592251 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957652971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.02860396 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.710914586 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.630529777 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.152759433 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164571817 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726067085 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159096822 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.99942387 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.889985535 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925632371 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143806865 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.153097098 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.969697874 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185971052 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.654261556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.941316639 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289535246 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989286771 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.025145156 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151480583 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.018369781 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938062987 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012010768 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939388105 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.940450495 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940889698 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97813184 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028577544 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.06956008 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.943653345 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021182626 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.035506648 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.52717108 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.943791861 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217196992 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293739339 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266833464 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99270164 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931507838 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932163477 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864456044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069024239 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37723575 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204153937 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.06122682 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.070208935 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957749463 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.731864255 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.236230149 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245224257 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206484673 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.827743529 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931827963 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040440926 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.155388356 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941986404 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.144047558 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165771877 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256356744 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403723136 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.087369323 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373641171 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207395872 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.30245802 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931499247 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52245822 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.941606247 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.694819632 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.97480629 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974625239 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226636966 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943568187 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317425127 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954186013 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.133076381 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.449028493 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710165095 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303040723 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.937417471 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00021823 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218369413 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333739534 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249109405 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000982382 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945260326 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.632657933 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072188051 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.907730979 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.207112926 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932939377 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145619279 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.645660175 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944118815 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220577227 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246421189 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.93120905 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.929508737 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997476713 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.944544838 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158450761 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206976924 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188728052 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944400541 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942676553 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.750410332 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21684218 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997711516 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870160363 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.938456913 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034610941 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181995661 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954458955 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.451567423 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.636956573 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239978026 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.855313316 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95777859 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359967704 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383937029 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271753727 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.47325946 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172934404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.495411824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.805155366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309351033 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.939932894 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35779548 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.312577523 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.938959068 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.460297084 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048579502 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.212203345 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261413721 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.945257779 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672140084 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.985768547 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159368519 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531917589 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878403603 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941505073 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.994985112 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937999881 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.068861146 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948620521 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.943301424 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840149032 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.774513698 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429913308 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.94182666 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.922750248 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.725335815 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.516707568 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040901349 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092681098 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946758342 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.651273513 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.228771533 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193716917 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460708053 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.003925022 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.941449887 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938198305 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86634942 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138873568 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.135424107 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241136486 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.30857392 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.049785467 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942689573 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.154128938 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149641152 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.987328126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10418531 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339302519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049935684 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.855248852 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.652067676 seconds)
  done (took 1714.934285039 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940349262 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.955725158 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.949677693 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.96976064 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963984859 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954993526 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.946236824 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.029985841 seconds)
  done (took 57.576739817 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.935083334 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.159637919 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.945997311 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.937326044 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.972588073 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.936515926 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.144273504 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.949619128 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.960723726 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.947251575 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.941127678 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.952097978 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.296671411 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.96248697 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.937613218 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.972632433 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.959486902 seconds)
  done (took 75.78676342 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.937004406 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.11583243 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.978297553 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.967643137 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.810838422 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.953984159 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.93100091 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.957612188 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.941325595 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.107103044 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.279241158 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.945672792 seconds)
  done (took 90.794696571 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.953002278 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.945342372 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.943848333 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.945037059 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.944142953 seconds)
  done (took 11.607097604 seconds)
done (took 2231.774641561 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.186018239 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.16799565 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.184818925 seconds)
  done (took 6.220338848 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.093568785 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.141502613 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.260921725 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.269882336 seconds)
  done (took 10.644520569 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.232616523 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.315429847 seconds)
  done (took 6.421962629 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.26812278 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.962319133 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.330830806 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.945631073 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.949161768 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.951383304 seconds)
  done (took 22.725812443 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.950776707 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.954026087 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.95210187 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.95364723 seconds)
  done (took 9.685261902 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.930268954 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.674369966 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.931197578 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.947387382 seconds)
  done (took 21.357762801 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.698911033 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.348988501 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.694722156 seconds)
  done (took 9.617866734 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.537468701 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.185655222 seconds)
  done (took 9.597720655 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.20140168 seconds)
  done (took 4.07743392 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.979953799 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.221951195 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.466616535 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.487027248 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.569556691 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.765329128 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.247289254 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.181564288 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.408044456 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.40540343 seconds)
  done (took 25.608594208 seconds)
done (took 141.572690706 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.358153524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.96474587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.147629887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.296443968 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.174061252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.148759175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.162751207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.28687451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.822226429 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.818529268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.301405461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.172184908 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.105503781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.960457925 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.114063618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.956863246 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.16469554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.374591294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.021488948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.219908401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.174115696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.945855581 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.137813681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.957410367 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16456731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.086597707 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.481367737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948228566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.154449644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.490095563 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.084462124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.359772127 seconds)
  done (took 170.433071186 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.932507852 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938028732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.944775219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.93137568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.255477146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94812451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932706995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.931928894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.046887197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.032908757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.960190629 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.297868892 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.966705258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928680171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.965409377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928919748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.228182651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.963627741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.968321819 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.96923876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.966028994 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.144591912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952598137 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.180815335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.180331468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.944778835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.91689206 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.947327993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.949228361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.949993148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952031851 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.907696556 seconds)
  done (took 209.932014085 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.904386337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.912056986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.915037443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.90262731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.90925351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.925808349 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.899510516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895682522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415003924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.473210612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.919812763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.911957712 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.913851913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890810501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.918205303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.890171559 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.914437951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.917226705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916962177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.907106343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.912318233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.563512656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.915345027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.576138742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.905176736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.909350626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.88405298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913203321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.914941989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.909198143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.914296472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.884489061 seconds)
  done (took 221.336357348 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.076634788 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.893231364 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.894848449 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.887176479 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.893823242 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.893962802 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.900522963 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.076448715 seconds)
  done (took 19.36871792 seconds)
done (took 622.952726592 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.336492961 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.187136061 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.073720861 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.921336821 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.153455884 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.951781691 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.914786718 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.981812569 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.645132285 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.988546768 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.555012206 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.933580301 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.646202164 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.942811779 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.037046391 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.974205345 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.455755286 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.551504245 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.087599211 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.967934359 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.089846283 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.851576679 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.998196949 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.682231869 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.667366043 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.905303449 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.075766284 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.464481898 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.92572758 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.075283839 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.655722106 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.310886955 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.925702 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.910068462 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.971001297 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.950110853 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.248517315 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.923821519 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.03123416 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.651986278 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.975372619 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.530733095 seconds)
  done (took 103.943981402 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.881526586 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.8797201 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.879026495 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.880441 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.881084995 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.88069763 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.880206608 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.879565592 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.881293735 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.879862817 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.880498487 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.881560317 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.880358764 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.880889347 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.880100256 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.881195776 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.881380612 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.882823347 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.879934986 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.879971921 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.880986892 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.88011247 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.897993079 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.880571083 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.881616123 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.881548315 seconds)
  done (took 50.74561041 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.90080141 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.061140271 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.134678922 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916441029 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.894906712 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.898552662 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.914281358 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.90308124 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.897973512 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.896815084 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.987334756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.903995235 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.913191614 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.133153812 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.912800215 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.89804206 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.897436672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.895021921 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.067866621 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.912627814 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.914977846 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.902830534 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.915046311 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.908867065 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.898044567 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895844832 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.899564093 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.359774589 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.904770644 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.988915506 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.938872962 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.919731848 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.328950221 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.143400312 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.950919951 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.908322057 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.898438831 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.990464184 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.902959384 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.897288093 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.915224703 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.900957069 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.1335112 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.398082699 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.912147768 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.900516397 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.372594917 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.999402543 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.937694756 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.90825029 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.136529892 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.915334702 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.902467245 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.89667541 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.934538894 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.902983797 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.896779864 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.252975637 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.910136028 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.916014288 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.906172723 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.898179225 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073671744 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.906329869 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.060498507 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.907451261 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.904028215 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.896986886 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.135946369 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.915479499 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.401992837 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.913885786 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.901339251 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.990377425 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.067456672 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.399653161 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.911987255 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075330733 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.346652214 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.923550779 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.906213019 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350164038 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.927756078 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.90568555 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.903431195 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.903013378 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.902027612 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.946427867 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.914812346 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.335625818 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.408496758 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.271464684 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.926006179 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.913709955 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.89998194 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.252581526 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.911133647 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.902811894 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.131992564 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.41418609 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.915713941 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.907795255 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.393028363 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.917101309 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.920100759 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.910106464 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.139333495 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.918300719 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.949162176 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.903060221 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.907660364 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.903098172 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.919338146 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.907227268 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.903030317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.380070568 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.013109196 seconds)
  done (took 235.647656213 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.895605061 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.896851685 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.894028002 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.898087448 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.892891945 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.902084187 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.893867341 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.892638816 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900206431 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.894474385 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.895518495 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.896812554 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.896598469 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.902939307 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.580116892 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.902517063 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.505735171 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.896240876 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.89661136 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.90805335 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.674300032 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.904776033 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.897359272 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.91518895 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.8971531 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.893534431 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.89741161 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.022528625 seconds)
  done (took 169.172742192 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.903135113 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.085606512 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.923793758 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.941109735 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.912265705 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.901902241 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.925221778 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.925215946 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.907819925 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.901231794 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.901161839 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.962877927 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.916094425 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.045056719 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.933975651 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.935721314 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.006201317 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.91189453 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.901781163 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.90182046 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.930260021 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.895714852 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.962539078 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.028363163 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.925558816 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018251321 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.909614825 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.905030744 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.900882784 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.019856553 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.921569623 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.964999177 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.931869572 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.919294337 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.022395906 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.020773817 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.009426835 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.935169254 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.907927983 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.903115267 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.904415731 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.889396077 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.02008519 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.926462435 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.903135425 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010127702 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.926757773 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.906676125 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.914158233 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.903705666 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.915811126 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.921195274 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.969695008 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.036850757 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.942775305 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.931333917 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.929269335 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.190440435 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.915177628 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.0022283 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.896523735 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022975945 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.92932061 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.890663802 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.905783032 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.910333415 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.934163792 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.93761857 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.00744223 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.911785765 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.001836003 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.942038331 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.912962081 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.904740027 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.90809613 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.019337489 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.023376002 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.941809885 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.940577083 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.936400099 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.89826386 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.903834549 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.8916792 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.921795647 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.910146575 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.021737232 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.022915484 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.914762578 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.908187566 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.909637148 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.908354834 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.929938779 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.029950565 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.944052373 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.000202085 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.972379852 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.981130529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.924110365 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.920475453 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.910731175 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.968531214 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.92410398 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.918596401 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.238627941 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.976142347 seconds)
  done (took 206.393896875 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.382177788 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.960695067 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.963356314 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.234863005 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.337397943 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.759009905 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.953980207 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.957096812 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.981465471 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.142970508 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.032457121 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.973855232 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.941123508 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.928115402 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.955769055 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.976838455 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.965728745 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.287793943 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.078185888 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.032632742 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.937512235 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.2324495 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.274838459 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.354149136 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.989850796 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.29010868 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.619438355 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.099847893 seconds)
  done (took 62.481724966 seconds)
done (took 830.200740329 seconds)
SAVING RESULT...
DONE!
