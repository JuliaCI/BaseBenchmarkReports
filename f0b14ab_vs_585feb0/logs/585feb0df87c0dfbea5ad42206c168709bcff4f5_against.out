cset: moving following pidspec: 6534
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369541761 seconds)
loading group "string"... done (took 0.562567542 seconds)
loading group "linalg"... done (took 7.24192184 seconds)
loading group "parallel"... done (took 0.170212045 seconds)
loading group "find"... done (took 1.125848057 seconds)
loading group "tuple"... done (took 1.775779208 seconds)
loading group "dates"... done (took 1.215985334 seconds)
loading group "micro"... done (took 0.225711235 seconds)
loading group "io"... done (took 1.033824762 seconds)
loading group "scalar"... done (took 39.844194238 seconds)
loading group "sparse"... done (took 13.080342861 seconds)
loading group "broadcast"... done (took 1.01593804 seconds)
loading group "union"... done (took 13.860617013 seconds)
loading group "simd"... done (took 4.697764078 seconds)
loading group "random"... done (took 9.508822337 seconds)
loading group "problem"... done (took 1.998220764 seconds)
loading group "array"... done (took 22.402574427 seconds)
loading group "misc"... done (took 2.053372913 seconds)
loading group "sort"... done (took 3.421172351 seconds)
loading group "collection"... done (took 19.492636339 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.458205551 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207770664 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260037325 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152235249 seconds)
  done (took 2.066005981 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.161167944 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.073880079 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.093669405 seconds)
  done (took 1.127328771 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.326927317 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253587241 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226060654 seconds)
  done (took 1.56834419 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.299089795 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236611782 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44427049 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295983347 seconds)
  done (took 2.136145369 seconds)
done (took 7.67013443 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.591448594 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.422186839 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.244215317 seconds)
  done (took 2.063050074 seconds)
done (took 2.833214877 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728206262 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278114421 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204575885 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464924031 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176610726 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.233200886 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679609742 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.352683383 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.261187852 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101637448 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134098376 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389630024 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136783551 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686169104 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091542435 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127423876 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180715438 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.466588257 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082992036 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109432701 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116263383 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139771691 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132097434 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089336351 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18770358 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082860591 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195802985 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107146575 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079041729 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.271749062 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200554549 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694117595 seconds)
  done (took 10.99368098 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116211337 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.124646061 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098031475 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137482766 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134076716 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098707308 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083228842 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096125163 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120557231 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173632513 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112600378 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136155597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093921082 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093442969 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113951519 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245898123 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121516109 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099874116 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101684299 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088227009 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139554284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110710599 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090451064 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108739884 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164490299 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208227477 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122728669 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124494379 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095795368 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093644913 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14549317 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157900799 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094381326 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079971507 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171587719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123046556 seconds)
  done (took 5.207583355 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.070139556 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185298837 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120271829 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167913809 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080142352 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142269831 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094703387 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112777739 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255090333 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.106216328 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.459485948 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142342261 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113729977 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097048726 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.169175845 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098773772 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079087252 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.452009956 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156775189 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155857823 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114292283 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101944418 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08318001 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364315496 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096422301 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079298485 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097338727 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093899383 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081643492 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159245571 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080460476 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.193290912 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099237633 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102319439 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133088135 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190691322 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127170037 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134587996 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077222206 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09570829 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174498511 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085084664 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097774371 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11876372 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132268018 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115393537 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098641393 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09622919 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194496787 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078446977 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112839271 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.920424418 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10009414 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180610345 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096627517 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097919443 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.305226849 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095513827 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098250343 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07502682 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273355924 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.19528177 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097597066 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095021519 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078448334 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092397154 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080401365 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379608311 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098228059 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.609839527 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084010794 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105162086 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081729603 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096202474 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107075674 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085973839 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115165483 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077918528 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098430351 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077618317 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095549864 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079254633 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107534051 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213216052 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096943619 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07781195 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095562072 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097103499 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127590803 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098618064 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076674584 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130948256 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098788526 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07903564 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132452606 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097604003 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088882648 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099724322 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142640298 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095955542 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.132713264 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080293525 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124772542 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098757872 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112727132 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111071494 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098487881 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167384318 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076390861 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.0945919 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079439234 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095430345 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079361068 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098091437 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089620618 seconds)
  done (took 22.495792357 seconds)
done (took 40.538954155 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442712713 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.516805294 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.824805727 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159231201 seconds)
  done (took 2.752954476 seconds)
done (took 3.576232732 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086471125 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.106983741 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090446446 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.105666227 seconds)
  done (took 1.199156634 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102133977 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.102091749 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.087085367 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.101184688 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105954381 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.08448105 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103784528 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.088102943 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101685682 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.083495555 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.101948599 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09994514 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.086324599 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102602597 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.080561267 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104051648 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.086594573 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102844963 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104739304 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.083405854 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.099013713 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.084771032 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105510632 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.081253281 seconds)
  done (took 3.098692699 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097842968 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099502319 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083559558 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099253531 seconds)
  done (took 1.199425934 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.088683777 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120687319 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118544385 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.088166721 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.120961479 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115551303 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.080984603 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097121617 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.082977361 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.105001834 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.078991933 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.127770368 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118097457 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.087538567 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107386914 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.076966339 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097658536 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115159647 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.088602568 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109806436 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.081132544 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.106231577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.078422554 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120659736 seconds)
  done (took 3.230682928 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.143715323 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131697281 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118849519 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.082670425 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.134726992 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.130496304 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.098705448 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.12080175 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.120731394 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.090734656 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.101158882 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.138454679 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.089929795 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095548561 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.076037212 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.094789523 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.089044073 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.109947567 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.0964456 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105826646 seconds)
  done (took 2.995855209 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095607908 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108701738 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076393243 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.097580149 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.087437474 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102302324 seconds)
  done (took 1.397433497 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.080002201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094527663 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.078834023 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093587748 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.082523543 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095199625 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.077552162 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09485275 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.078375915 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094664448 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.077818013 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093836875 seconds)
  done (took 1.869403537 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.447889642 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.079853144 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.102998976 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097122934 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.084964786 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096979958 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.091005828 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099519589 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119819457 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082710003 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095481284 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.079345652 seconds)
  done (took 2.344247104 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221907927 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115455815 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255565401 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167544399 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139351517 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14869045 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13163644 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142592525 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174802558 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136763599 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202836258 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17305772 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130193869 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1673572 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118705288 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132728233 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174924114 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213284806 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134280061 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181783339 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195512242 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143275292 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159008872 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129203068 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099310292 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147006148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102136599 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110061431 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184911074 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173923187 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166272091 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141602832 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126532725 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206302504 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217852123 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173651872 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165496011 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116616033 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.122082864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.148748159 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236126493 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117879421 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182604405 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137602807 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111201112 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169139289 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164553672 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153444548 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128579311 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100126924 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194641608 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187960551 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189598494 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117920463 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120779938 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158246899 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145065042 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112269705 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2186638 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194918203 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158066345 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.081272115 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126508938 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167877488 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178985003 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145587432 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16059907 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124970927 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167595456 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163965318 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161831416 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168616642 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.161029228 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119086981 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147756476 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151063631 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148236159 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224129268 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155987423 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102831103 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145194064 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12808772 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110059232 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.154765609 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106041444 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189183998 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13025025 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11450791 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141587258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138186859 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138940757 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174245888 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18644776 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107308235 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.091028647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135101574 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114689173 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185075985 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117686118 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13704982 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139881338 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.090695741 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153206524 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10562577 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157165729 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.097413598 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153912396 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159955776 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.107031714 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135799997 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11171985 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128121953 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152081342 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196116657 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100705268 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113954777 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183694529 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172676863 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128616443 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156415561 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17820437 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.12156485 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127623159 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176956955 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213851787 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099994137 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203474549 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133402082 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1131186 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094581114 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155306842 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133894215 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147767802 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113304981 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158007915 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206078792 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.08626588 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118214399 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164015112 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112075393 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111020723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247351146 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126236045 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098547903 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124937972 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130332555 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157915386 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154379911 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131648173 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143862561 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129929219 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220586629 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119785735 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131925004 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12590894 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.082204413 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167492109 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194381652 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090575994 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199226817 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.14901007 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135345889 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149425042 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113145192 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154168992 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090673466 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100291976 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170845706 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144690514 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140221854 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189234362 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115219273 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176516661 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159324353 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149762746 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150629049 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.143498197 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138006323 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116973997 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137066749 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142686733 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.084750803 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121851716 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113349352 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134799114 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120620889 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096781215 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192753524 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145060011 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126084666 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117803197 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127648867 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157567344 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109710839 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152166426 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152480003 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125005829 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191802988 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169418132 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163505724 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122386231 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201140967 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.081744768 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105043385 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.100665352 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166518931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094615387 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115906471 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145191191 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156992904 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159548503 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172370399 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121535079 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171744292 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166253699 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.083098678 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148959047 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161944804 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154039911 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157380196 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123589019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129652025 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153728039 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135103451 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201081853 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162979475 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154565852 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186436484 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128358303 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111542688 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128445322 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161435149 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132459299 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154120678 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126595262 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118374328 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138094251 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.093182185 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137728626 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177895969 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139766492 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168254859 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12986563 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161296954 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108156089 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143897887 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137017446 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142796753 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068923027 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149517633 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199369082 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12737618 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15070506 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168383229 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112218483 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156135948 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184822793 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190312126 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096381497 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13603657 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1383195 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142215153 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149607116 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153980069 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136943039 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185058844 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133640569 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.097590735 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119025573 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127761701 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129321178 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092902649 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.126506722 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151244065 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11952072 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162970312 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138415191 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136070041 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147816967 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129767789 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.122551023 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129009712 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192174653 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153997329 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208038521 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126917248 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157008457 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180237976 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106512667 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091420051 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.113623333 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154735069 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115961207 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16514611 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127207911 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135763676 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157464948 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165691569 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119060415 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099137542 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115678025 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169311243 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122161775 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129942752 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136758848 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201215004 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099349055 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111594964 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149141421 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135336665 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126228868 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173221533 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067274864 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128501369 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107697423 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092638291 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1423615 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202827051 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11459186 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.136491765 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150884896 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16506981 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123283423 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127542862 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128162913 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14436024 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175731088 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180692444 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091978966 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13447749 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152295208 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192943662 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139148095 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098677818 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201067607 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169277239 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.171797882 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.121227906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144982555 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145077568 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135132665 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183755965 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094834241 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201150614 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093620116 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195164078 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131986415 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121857924 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151803024 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127690153 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099741034 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185365799 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15115901 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114817505 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092792211 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144716751 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175837408 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134279843 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.087730499 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155446161 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.105443231 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16532298 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227326239 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113374394 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131297924 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106427964 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115742241 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136079243 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136993992 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118534599 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.118148295 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201013531 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.113603927 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167896808 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196100243 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147090935 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152471451 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122011559 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670400116 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08995244 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189054592 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113370455 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202260058 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128789195 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150491788 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13673103 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146839605 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172437022 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136782548 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210474456 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187924333 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158771528 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092089018 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136940084 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14010986 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.123185344 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130575727 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145441499 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138380554 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131050215 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153917523 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146731081 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.113676155 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11849888 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174957311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132577893 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162201051 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156500348 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118457401 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151420403 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162862228 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113171368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156214383 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203333082 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121270441 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10833497 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113560428 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133352288 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228011661 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.084288033 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196599782 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155517366 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136361647 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144873309 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.125459577 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166272456 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136436295 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1539961 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125452439 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.13645943 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13426145 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117135191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108502678 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112162824 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142821153 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128031372 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136485439 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138860329 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171110779 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10567625 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103980992 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135198068 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164104128 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212036988 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115873083 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094401983 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140833536 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130275349 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152143695 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154970112 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115002713 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114565918 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115937281 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.111114949 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119468039 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11405468 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134710085 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142610118 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201802033 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.095217508 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256457276 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119940873 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132314629 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.076346131 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112450504 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128844913 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126400116 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136165836 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109267185 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228331058 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128299991 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.112405928 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106048299 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106198896 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115107023 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143290883 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142925152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154013702 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123840357 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069531272 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137785078 seconds)
  done (took 69.931552189 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142128573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.113224594 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.127680016 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.288637995 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157258192 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248246994 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.19052672 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233397474 seconds)
  done (took 2.401707988 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.16338586 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.108135597 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.132555902 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.112973443 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.080679421 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.135354249 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.302768312 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113024932 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0992805 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100639829 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.144947071 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.081618148 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.463948691 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.099525877 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09791263 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071899773 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.099291374 seconds)
  done (took 3.307968119 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428030888 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.591133348 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448171984 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10735048 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.605991665 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.118586086 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.953420509 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.174776909 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082882399 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.408318412 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.747906035 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138908037 seconds)
  done (took 16.713183062 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089530188 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.103500096 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095249113 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.115104877 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083601565 seconds)
  done (took 1.400563008 seconds)
done (took 111.910689349 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.084765425 seconds)
  done (took 0.984173384 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.365544424 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063099144 seconds)
  done (took 1.366180733 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.096457312 seconds)
  done (took 1.011937126 seconds)
done (took 4.27112763 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.306194807 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.24640378 seconds)
    (3/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.238105718 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.206241597 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.171615551 seconds)
    (6/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.128240294 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084604634 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.156421083 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209741919 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.227791303 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.180697924 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.149351954 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.119432413 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.132220881 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.090616286 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110231912 seconds)
    (17/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09742787 seconds)
    (18/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116326772 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204126052 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114732936 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119542712 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203293875 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.142939077 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.125721989 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085783086 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.207711575 seconds)
    (27/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.127952755 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117521265 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.086555085 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.131668799 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.111567707 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.147343315 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093750443 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.213586749 seconds)
    (35/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.102964221 seconds)
    (36/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.128629893 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107033191 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.162462931 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.140849318 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088850893 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.106998457 seconds)
    (42/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.060604951 seconds)
    (43/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.123918827 seconds)
    (44/309) benchmarking ("sort", Float32, false)...
    done (took 0.162673441 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093620302 seconds)
    (46/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110701157 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087789676 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.128961264 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130365166 seconds)
    (50/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.152665089 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087986312 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.124494861 seconds)
    (53/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148126818 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.109477367 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.125564845 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.092519634 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177454843 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200753809 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.076595783 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.102272026 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132142408 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.138426565 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.0603108 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194926732 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105996935 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089268826 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.130316949 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129088348 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085154115 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139978086 seconds)
    (71/309) benchmarking ("sort", Int8, false)...
    done (took 0.177740241 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140137158 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.167952803 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.158159321 seconds)
    (75/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113022026 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.080470568 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.206269525 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.191500219 seconds)
    (79/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.146951066 seconds)
    (80/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147203983 seconds)
    (81/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10821595 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061809132 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082060313 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162784749 seconds)
    (85/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.186737061 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.101067441 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.087288076 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.082543759 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.211402896 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121798987 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174352167 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.111481203 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089913122 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.107136339 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07968984 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108417906 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.081450923 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109629419 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.183282157 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086965894 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.059636998 seconds)
    (102/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113965827 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113238122 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061849575 seconds)
    (105/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111173769 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080248773 seconds)
    (107/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.138776438 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087927549 seconds)
    (109/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.060077786 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.097616807 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.078845833 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.182418452 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.13432983 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.187851826 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08839081 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082703201 seconds)
    (117/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096489873 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089056583 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080163691 seconds)
    (120/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.101552522 seconds)
    (121/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089756902 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.169863041 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.109514041 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079389542 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10198359 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105711104 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110398725 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.193972036 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.195818061 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.087308833 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100574638 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.104646673 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111165282 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.083955338 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.110929127 seconds)
    (136/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.216028562 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108535949 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.082840031 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139218085 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.087483484 seconds)
    (141/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.115185118 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.162688862 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061389947 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147555895 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080902921 seconds)
    (146/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.093302523 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.079706943 seconds)
    (148/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144022452 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088473996 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102066001 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.103741721 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101705536 seconds)
    (153/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.117964813 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206848647 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101650434 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.060963881 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.139739972 seconds)
    (158/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.164589448 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.090337299 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.060418557 seconds)
    (161/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.139735182 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.124926235 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158839752 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103287891 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.083456257 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.105243407 seconds)
    (167/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080834077 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10311429 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.059933812 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131825302 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.179417813 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112735515 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.21239175 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.087983041 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100931662 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151320592 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082899262 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.211991435 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.202028789 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07814628 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101891421 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102325301 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.085359305 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10187602 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.060714948 seconds)
    (186/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.116325832 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.088499128 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193650312 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082918507 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081996892 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163173057 seconds)
    (192/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.082428363 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082911688 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079935574 seconds)
    (195/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108482299 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.176967518 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103208566 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099910145 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.106020783 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.128242515 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.086066644 seconds)
    (202/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.104235163 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077965442 seconds)
    (204/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.128074351 seconds)
    (205/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131897467 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105022545 seconds)
    (207/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.120268288 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.109918607 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.093809964 seconds)
    (210/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.094474752 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.072552885 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.083001736 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116702753 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10826571 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122973324 seconds)
    (216/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.060785554 seconds)
    (217/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.130078862 seconds)
    (218/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.061206171 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.116963556 seconds)
    (220/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.069317749 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103451646 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062599144 seconds)
    (223/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.107387493 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.18363751 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.080701943 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.106219918 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.104557037 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.087543736 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151549063 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.206608911 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.101066283 seconds)
    (232/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.062552574 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14758191 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.170331092 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123920629 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.178998673 seconds)
    (237/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06066314 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103795102 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062156563 seconds)
    (240/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.10743223 seconds)
    (241/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06167975 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083366339 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.107728781 seconds)
    (244/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102218694 seconds)
    (245/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.070108633 seconds)
    (246/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.082160066 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.141044723 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103107261 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.099873848 seconds)
    (250/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.083883635 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082437147 seconds)
    (252/309) benchmarking ("sort", Float64, false)...
    done (took 0.162780452 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.201904995 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.079379377 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108412387 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.060720251 seconds)
    (257/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083336978 seconds)
    (258/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063199749 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101353576 seconds)
    (260/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.073194049 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060348508 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108739361 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.147882594 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.111237291 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.122760606 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061651167 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.198594188 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061055588 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08247234 seconds)
    (270/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.083131581 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.171510771 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.126904243 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.063629202 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06094914 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084008316 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080904981 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060348905 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.104475779 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.087836516 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.101070668 seconds)
    (281/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210146508 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.060503059 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.101171982 seconds)
    (284/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.085772837 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.104674708 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077894772 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122792515 seconds)
    (288/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.205574968 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.125203453 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061727607 seconds)
    (291/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.060656931 seconds)
    (292/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109950096 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061650319 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.107397651 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061489875 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061505532 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.111213817 seconds)
    (298/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.070077622 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.127867309 seconds)
    (300/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.155346088 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.063302024 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.114557258 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063709208 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.087861749 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106247396 seconds)
    (306/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06219158 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082828232 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063086031 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060476798 seconds)
  done (took 37.212750995 seconds)
done (took 38.123238195 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215697636 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199279613 seconds)
  done (took 1.360227778 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.11389588 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134465873 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.115304455 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.143906529 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105470055 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.114845312 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136901461 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.092530674 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105253872 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081324155 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10474091 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104185507 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147627568 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103212718 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08277461 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10532124 seconds)
  done (took 2.783589421 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112155665 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.239292011 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.118772069 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.078796478 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.109001103 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104777277 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081248205 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108124876 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085928399 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101872579 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08425709 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104058553 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080101211 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103352152 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.084634918 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106774332 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.079600966 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107129521 seconds)
  done (took 2.842640139 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110595416 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145720177 seconds)
  done (took 1.210481663 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241295859 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.159263759 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.225154659 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.475826162 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278322696 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.353836862 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.19981128 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.211684668 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15943508 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.196530857 seconds)
  done (took 3.451576993 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118215767 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178028309 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.329639625 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153601643 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.102003925 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123188371 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152915315 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128274359 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.119100932 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.095845287 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120516558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115285603 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134172996 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.090844102 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115308302 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.113986929 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.116913982 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.111637049 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111043246 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092827308 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135680765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080684525 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11246194 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110700035 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.094987023 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.115974731 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102805056 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.082309717 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112409769 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089238453 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.110731074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121283907 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.092501612 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171587772 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097425307 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17159823 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093491151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.109406162 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110829323 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.08827066 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116172292 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113685397 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100673575 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115614484 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.080580269 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.115674828 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101743983 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081946401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112144401 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.093326527 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112699325 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109640939 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149140166 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11519555 seconds)
  done (took 7.305982877 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782001682 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152175055 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086266588 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.867973837 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108865422 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122785753 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.763906706 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108562321 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249205645 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.744266138 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1265874 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092895097 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222530485 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.230837874 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.951572664 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306989977 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631843699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121740872 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123388221 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.169663049 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093341486 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133033486 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12776258 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449669345 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.088853042 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108989691 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113961177 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091974737 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176803204 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099456067 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110846769 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170450672 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266742713 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177931395 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112125374 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085231685 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109077719 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162951161 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258730497 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.207245596 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174264567 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083225996 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106858095 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09571214 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127911726 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104620309 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156881458 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.16823184 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.185149923 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09012803 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115824862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092469373 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117588675 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157580123 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.116758863 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314125207 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.303178033 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086741346 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118087613 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12208183 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.253398026 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098465563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.218476654 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134990802 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182848217 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108674956 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767824307 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163540141 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107122956 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091940521 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117149653 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110651294 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096538545 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161032183 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386357741 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120018156 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109428481 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086851369 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245009921 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098732701 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10849554 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157581711 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110690267 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095121075 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120779209 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119157103 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163673122 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229324159 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120251416 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115820592 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088834986 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121659154 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111187216 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20711826 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213687051 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158873433 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.202750659 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118980621 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157914085 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16186651 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116603338 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165010637 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11741851 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120169038 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116282906 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188503084 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.139414255 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.120113544 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111837732 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095132851 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143590852 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12304032 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114116134 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163935678 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.469667554 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183850362 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082897152 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123623153 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115732401 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157207397 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090269285 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.253671484 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11893462 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163512951 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116186738 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083379328 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117848102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156063201 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118713876 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117545027 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096232742 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115634411 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.228846262 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210726676 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117931357 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214009142 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177957744 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114450828 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165363525 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119239549 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161043315 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116685869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115052953 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090770992 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768762397 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119013127 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095403014 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112173704 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190225542 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085300845 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.120128985 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.120668118 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082393 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773452822 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123187195 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.094044173 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.121465286 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114040274 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093490741 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11567095 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112655549 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157074816 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223823776 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114378709 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095283093 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120782045 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155813185 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113783494 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.119520611 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099814835 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121688635 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116534537 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090337645 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122138137 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164283306 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155616255 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.214090996 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.585526297 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084762614 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.121199978 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220982854 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107554902 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262886456 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117615371 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.219121961 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1608162 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.117233704 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.29983001 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.159892693 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.1901195 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.122049158 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169171157 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082123619 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115742082 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158138744 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108834677 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112209191 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158651217 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098432041 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120314542 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960353604 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107020936 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.220613619 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082788211 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187159606 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091354791 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116680993 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286976103 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085966387 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124830951 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158985717 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111111146 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120412945 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.689651281 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.120548632 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095975368 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115237841 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214642386 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159441408 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116857919 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114980979 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094559805 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17739177 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.202561779 seconds)
  done (took 42.883919696 seconds)
done (took 62.795880996 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095984727 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.129401619 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.090279224 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.1201343 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.116374158 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.087771791 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.111608184 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.092733599 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.11710975 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095328243 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.117188366 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064671019 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114800291 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113160242 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.092481615 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128942858 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.093477171 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.112202294 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.111589507 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081281551 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.112805327 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.081668635 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.104669415 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067003257 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.113905115 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090643599 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.109410318 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.090501676 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105239568 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08120944 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108601031 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.088811231 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104609971 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.094772809 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112194907 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111339704 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09320732 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.113609634 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086764884 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.104704191 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.089451094 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104951981 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088461741 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.112461042 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088154333 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110589212 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.088884752 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.117027703 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128378787 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084293827 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.113681794 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.092507975 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.114498358 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087660196 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109739665 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110636139 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.08863056 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128219003 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090154895 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107055314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.088939421 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.114216583 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086201384 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.113708011 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111943896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.093212058 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.114881647 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087480984 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.114738609 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086924349 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.104335325 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090443034 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.10865392 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.080743571 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.114531756 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.091565235 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105227114 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.086847679 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11193546 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.109672688 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.083512835 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105910412 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.084974749 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11075758 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084513091 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.065534915 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.109376896 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087650053 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104896025 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112436221 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089163209 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.110469736 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.084885528 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.11652603 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081700578 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.110159135 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082611614 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10574428 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.084154345 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109315711 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081600392 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106733292 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090756665 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.106914535 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087226158 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117490448 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081396925 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111327882 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080633432 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.105518988 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.11846909 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09215194 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.104854137 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084452584 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.106667321 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.088761465 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.104049518 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.081605124 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.104355896 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081785058 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110622827 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081729558 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107151669 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.088424264 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.119526678 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081712982 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.108886715 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083243779 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.105043197 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.085786666 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106164839 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080633742 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.10717135 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.072305434 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107699025 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081769737 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113595866 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082754161 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11334221 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.105122946 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092438428 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.108530441 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087793691 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.109548424 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080858824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.069485108 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107149627 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082952326 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.10724481 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.103881549 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08467244 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.103492942 seconds)
done (took 16.066117472 seconds)
RUNNING BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.050480036 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.046756405 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.031268424 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.049787852 seconds)
  done (took 25.160358156 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 1.050949406 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 1.050648928 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 1.05071377 seconds)
  done (took 4.134116718 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.197454377 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.045428887 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.050997049 seconds)
  done (took 18.273604065 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.23999247 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.142179873 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.372126146 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.927729767 seconds)
  done (took 8.664185569 seconds)
done (took 57.218514498 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.794788256 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.797318248 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.056560905 seconds)
  done (took 10.630904517 seconds)
done (took 11.611955866 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.068049978 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.091505415 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.054938993 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.048001685 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.156808931 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.067866949 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.447274947 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.299936135 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.058710897 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.036701781 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.053682643 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.054881809 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.074619095 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.395125308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.05741849 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.053907628 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.099878258 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.537928148 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.4154299 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.05002417 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.074678147 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.119767514 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.069248907 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.058098327 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.074736781 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.067270675 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.055282344 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.075912911 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.966344506 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.058633239 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.139497075 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.663662599 seconds)
  done (took 186.530789877 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.057226515 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.19168342 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.251723527 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.100051004 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.523859556 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.256435721 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.187962067 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.650605177 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.070433658 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.084420296 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.203307482 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.056100906 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.239841573 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.05034622 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.064137424 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.144166089 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.312293087 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.280120293 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.069538678 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.295215038 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.065514129 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.095525074 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.042434673 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.201263352 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.057452268 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.065116884 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.088052933 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.059558728 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.246207272 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.250090491 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.086829272 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.117269626 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.584937555 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.9133161 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.081745241 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.080130002 seconds)
  done (took 144.112430576 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.316592006 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.056350452 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.057261061 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.056575204 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.083323481 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.055223875 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.534357796 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.536612907 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.555118725 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.148410747 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.117430014 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.2445879 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.058862373 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.146124731 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.056551015 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.069625169 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.056848211 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.073724102 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.095586645 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.06119875 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.059228618 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.537857998 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.07043664 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.252048951 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.080794083 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.057020715 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.087482655 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.059035485 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.444688334 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.057204046 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.085463128 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.364828463 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.101367169 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.057765336 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.297579144 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.796736146 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.163531824 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.060613628 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.086831884 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.057187291 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.319543919 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.057382322 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.059620907 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.062068599 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594099363 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.059302756 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.53896168 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.060855375 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.91550439 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.062081059 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.061733596 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.728210104 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.060731957 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.455487455 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.075425147 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.060706755 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.062025388 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.058740717 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.060309876 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.087443001 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.672108846 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.15239036 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.072230446 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.061044557 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.084167247 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.057738946 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.057447489 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.240652361 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.058024573 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.903062414 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.128558256 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.17122477 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.537353101 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.062921638 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.150964702 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.173035948 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.058132502 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.057290319 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.057092896 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.055235456 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.15809379 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.055682064 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.412196316 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.060922859 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.057207011 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.114338752 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.145816539 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.054558153 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.311515375 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.063155993 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.055895373 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.688194114 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.144761443 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.056121934 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.055651683 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.056516725 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.416110164 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.534914934 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.180960679 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.059606512 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.634517525 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.063791539 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.435124749 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.522487586 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620691453 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.06253719 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.162480586 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.063205621 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.061463438 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.05945691 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.088932411 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.075237413 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.109820228 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.062994454 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.451035439 seconds)
  done (took 328.247478105 seconds)
done (took 661.191452145 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.082689841 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.172885044 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.062358391 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.081044584 seconds)
  done (took 25.392993593 seconds)
done (took 26.385499623 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.06084544 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.060042271 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.061006195 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.059366445 seconds)
  done (took 25.234927009 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.098656931 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.099144624 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.102556186 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.108864744 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.100724446 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.098519395 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.092113878 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.090925624 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.109986904 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.101124077 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.102055976 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.10159472 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.100695271 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.091343613 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.102038097 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.102768477 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.110711882 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.101292968 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.09125764 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.103403571 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.067505614 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.11091289 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.101891994 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.067174756 seconds)
  done (took 27.351231536 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.591413798 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.137628768 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.220993356 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.11851267 seconds)
  done (took 6.062867912 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.118466697 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.119925283 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.141251307 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.174424138 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.196717195 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.129391979 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.093672283 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.088330394 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.074738344 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.120444056 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.195999091 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.135809785 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.211472198 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.066791532 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.252244213 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.06731335 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.066344213 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.119374865 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.17114671 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.190755546 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.068403927 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.120181956 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.124653503 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.13630226 seconds)
  done (took 28.179140785 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.08067801 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.076620585 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.06740597 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.068266785 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.090333529 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.068969859 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.071295417 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.069447249 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.068601689 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.074781756 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.067826641 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.081519437 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.069629893 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.069173961 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.078208614 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.070440274 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.073957421 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.069386361 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.067708081 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.071123958 seconds)
  done (took 22.451374668 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.063258263 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.917289741 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.416252465 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.319080342 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.06414797 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.06524 seconds)
  done (took 25.841641486 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.129866977 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.257934298 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.071334096 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.358944914 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.446623935 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.085005281 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.070339762 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.274904691 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.521093602 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.505030211 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.119902427 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.130342797 seconds)
  done (took 15.970287054 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.07725805 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.065416444 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.066760581 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.0950373 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.117079503 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.089439899 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.08226085 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.067377551 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.121518 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.134421643 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.090045776 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.121487808 seconds)
  done (took 34.127130526 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.154716239 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115065548 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.870875217 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936929922 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.788619673 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.276485625 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.945720763 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.507153939 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.070416884 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341693586 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484767832 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.172895836 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.325754244 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.067575903 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.072349803 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.957085487 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310281909 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541997506 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070876647 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619436587 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.093968772 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.076322123 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.757687673 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.100224472 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.281199871 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.052727983 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.330401219 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.846756121 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531501471 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.079043009 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.081652992 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.071491152 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344206706 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678898294 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.183545711 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.079535047 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977226198 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.61338441 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.05914417 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.709931866 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.282866715 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.073329308 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.080297256 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.069178 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.004681833 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.068480697 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527685656 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.074924499 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.779016124 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.068223634 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.079527541 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.16576342 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.071914878 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.641435322 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203573133 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.07521131 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.066943341 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.076186 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646263786 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100216093 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.075171868 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.006965748 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.585551068 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624615067 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685636891 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.190063262 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.073964541 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.073640657 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003771461 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676767641 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.088649983 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20499794 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.095004087 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733487357 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.760758857 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.529636771 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016227645 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612872806 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.083377889 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.007633084 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298725183 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845218165 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009492134 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.014366658 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.003981256 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736951534 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.079704153 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.3816233 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.077084487 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509465705 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.07960466 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.087738405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.093839872 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.295280116 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.951043746 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.06970466 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.309133698 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208377189 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.092577056 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.511008615 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005153819 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.07503445 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327803921 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.282650624 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.080618526 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.9667117 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288304239 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078750863 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.089621743 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.084273557 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.086127166 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.628390096 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.099678783 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.10274244 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.090049898 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.847821318 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774309871 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.073268237 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.176452423 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.552761931 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311421763 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.789683634 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953592411 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.141261333 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.075924882 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.073959327 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.707257989 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.927578755 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.956062129 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.070420262 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.075889316 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.086651368 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.072873617 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033475848 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.070797936 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.597643078 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.853875287 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.298639724 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.074031866 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353682029 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007949725 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211171242 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089642818 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.29772459 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.156033262 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.093354865 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33621819 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.074164327 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.100531644 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.090728356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.093016041 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.172159722 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.094985866 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.074994107 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.337952262 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.077879172 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.078311036 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.728138106 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858374 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078000454 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.081331971 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.987869662 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643204329 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066288889 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.084393505 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969752409 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.089958603 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.143376982 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.082933802 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.085426365 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.602271788 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.103762556 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.082888741 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.073688284 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.303368997 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.087264373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.652102052 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.157688547 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.270259352 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645741787 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.10758188 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.009376803 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.786131337 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.76907012 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.075618406 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.277827982 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.075644001 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.085237094 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.08673317 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.765577088 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643569158 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.097968326 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.654434829 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.085321458 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.087110043 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.083011799 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078002041 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.591065268 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.134267544 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.083344849 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.091111123 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.220943377 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.091795486 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.010242198 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.593452475 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.082383556 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.076512729 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.854843345 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.112435556 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.666494327 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550022905 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339954145 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.950722264 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.088990041 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.819161688 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.113219538 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.090271382 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.351452729 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.105408155 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.100816018 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.089967196 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.089219183 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.679331073 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.527009726 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647367415 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780768806 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61610432 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916495003 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.086243564 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.978257102 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5294247 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012809729 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.738788887 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.240993314 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543887972 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035809576 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279326019 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.160644807 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758205412 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.090060799 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30776054 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893520716 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.363362739 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.112707795 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.29273842 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.113599082 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.079558574 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.031576508 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.375310447 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334729417 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350645356 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.159483772 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52757199 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.361851601 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.878557428 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.078539749 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.327253295 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252085919 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.627226614 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.477037685 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.086612127 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.596742716 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573120047 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.088105502 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.610037986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689757242 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.097320585 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.295660829 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020117468 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.090648273 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.092041716 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.076045391 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.087422547 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.588825084 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.353714451 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.091632453 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014251408 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.09021904 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604924228 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.960507522 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.086405613 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.079805111 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797164379 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.079553467 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330726648 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.084376766 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.57862241 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.089293527 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.020182783 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017706936 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.776400909 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.086826597 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054744184 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561555791 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.551581478 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208268306 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.099510582 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937729534 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.34024424 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.097138544 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.652987333 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330312328 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.058390072 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.107007605 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.184406275 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401681492 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.082663372 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.978474988 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.320835605 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001290693 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.309475809 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.89019467 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.986260825 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.081935127 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.29951744 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.975388669 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.599213715 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318117218 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.810945327 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.086790589 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797352726 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.125923286 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.590881095 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119341729 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.606553877 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.095234267 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.155666064 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.095723532 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.095937819 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.094557001 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.241209444 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.603306703 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.105925713 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.100261412 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.18233614 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.168640644 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.581495317 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.862314207 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666435671 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817690938 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680166512 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.120683538 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.08905446 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.089360208 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023167004 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.237328539 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.619201984 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361791623 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20818538 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.685769552 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.111087683 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444142521 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.110940937 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305109633 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364128166 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.962749261 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093407622 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.754489641 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.24877211 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.101361506 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.301380994 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568742269 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640662213 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216859399 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.09044832 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535300802 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362719132 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181054096 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.090706876 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682709889 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.099606209 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.379575623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.117305027 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.676559991 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.242135434 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.096056884 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699619484 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.117621625 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.249372722 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.863528903 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774467423 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.351999677 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478098755 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.100559034 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666918173 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.797947831 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355876878 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.162017403 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.101873672 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.196992091 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.239395755 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.637577596 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.007171127 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.089771867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937583493 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.80027806 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.100436315 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668539911 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376061019 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.089085662 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.665925248 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.132300195 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.102026997 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.315954808 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759445491 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.319278807 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.100695163 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.095174208 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.667807532 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672859662 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.125279348 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026085111 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.093463288 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310942018 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.341522223 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.118973024 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.546448046 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.803440252 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635892256 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.068349651 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.114153062 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.098369049 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786925187 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670400287 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.617697034 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566148578 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.756072838 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.101074157 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37063884 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.098312877 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.099306112 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370003985 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.097370657 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.093104268 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.108904882 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.666847581 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78269968 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.100230056 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730060978 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.03554897 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.321457824 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.841906645 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031338159 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.104556036 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.261225566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.097070507 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215496285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.105258463 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.679074024 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.115766662 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.85352569 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383364716 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.099633747 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.083644664 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.430086117 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.096761427 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.103507679 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344835032 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.095594081 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.762786795 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.444014542 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.348730052 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.090149155 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.075421248 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.093683584 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.090705677 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.815493912 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066745093 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.780873914 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642111224 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.095384255 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.10397833 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.091116271 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.305325353 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299484647 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.598180485 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.118906181 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085468727 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.102938033 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.985485507 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.859954472 seconds)
  done (took 1441.282674627 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.107575591 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.104436645 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.101448283 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.130914648 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.092905352 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.153028662 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.09188616 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.1265044 seconds)
  done (took 49.926457344 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.091443535 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.224237638 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.109808325 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.090415118 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.096352349 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.083376346 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.472804026 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.0920751 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.093784845 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.094769939 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.093876491 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.088020388 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.684717777 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.093489026 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.087664965 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.077350936 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.096390901 seconds)
  done (took 60.68687203 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.086310392 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.200680009 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.153726017 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.094700946 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.227271301 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.106786879 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.326171858 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.104829123 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.101761784 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.20659788 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.729359554 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.109649435 seconds)
  done (took 78.465563048 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.09188103 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.091323476 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.092170023 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.09133591 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.091644366 seconds)
  done (took 6.474457172 seconds)
done (took 1823.047257521 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 6.064471314 seconds)
  done (took 7.080151061 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.646917019 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.610660748 seconds)
  done (took 4.274882946 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.377175244 seconds)
  done (took 2.392275052 seconds)
done (took 14.760624357 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.062090667 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.420955031 seconds)
    (3/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.125896754 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.152957858 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.471566198 seconds)
    (6/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.759073734 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.106814499 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.159701571 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.21088402 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.626206599 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.253953544 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.332587945 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.587145311 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.089394042 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.123719341 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.108566782 seconds)
    (17/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.994933729 seconds)
    (18/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.105103417 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.066880516 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.211772084 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.094472846 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.223890424 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.755942252 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.936303336 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.474193359 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.210640872 seconds)
    (27/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.097726141 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.216293089 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.186835489 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.081720766 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.117532542 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.083385392 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.109680188 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.084346527 seconds)
    (35/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.110615095 seconds)
    (36/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.166116726 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.882010692 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.20148512 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.877740007 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.127787127 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.108502791 seconds)
    (42/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.395211156 seconds)
    (43/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.111497534 seconds)
    (44/309) benchmarking ("sort", Float32, false)...
    done (took 5.015319738 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.186525428 seconds)
    (46/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.202090085 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.108265788 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.646927726 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.536345473 seconds)
    (50/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.632127068 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.201155786 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.392576929 seconds)
    (53/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.149514748 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.346891746 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.604129573 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.097105287 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.204005248 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.619798375 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.426291068 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.159396144 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.105909061 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.130346709 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.995559386 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.815692089 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.71150237 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.096736923 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.033971775 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.816644574 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.810701984 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.080427575 seconds)
    (71/309) benchmarking ("sort", Int8, false)...
    done (took 4.129886826 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.123044971 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.362914508 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.071793937 seconds)
    (75/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.126664485 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.132075835 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.091377307 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.070081471 seconds)
    (79/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.391388353 seconds)
    (80/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.966510159 seconds)
    (81/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.186061509 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.065861879 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.260815011 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.700318113 seconds)
    (85/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.397287681 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.462411687 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.127616739 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.592003322 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.068455497 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.154881059 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.11159882 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.09735927 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.183008472 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.11013 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.79592477 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.189285959 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.084096202 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.183892382 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.083571092 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.764602549 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.181467856 seconds)
    (102/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.088002756 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.280012623 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.409541155 seconds)
    (105/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.194400936 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.846010878 seconds)
    (107/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.683579351 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.285698001 seconds)
    (109/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.17109237 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.62867429 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.858120599 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.083738411 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.166698228 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.368892184 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.110281637 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.065662342 seconds)
    (117/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.227898724 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.608974918 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.607420666 seconds)
    (120/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.146918988 seconds)
    (121/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.144576371 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.584694689 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.126150609 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.856124322 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.089091593 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.472357925 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.382460508 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.373459524 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.783834671 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.174941976 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.740728733 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.88029483 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.104732278 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.73443661 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.369764765 seconds)
    (136/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.560918205 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.118376414 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.098444799 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.412122089 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.221459541 seconds)
    (141/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.740336117 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.985906214 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.279953451 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.097331847 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.092743023 seconds)
    (146/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.283733032 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.710588961 seconds)
    (148/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.071842166 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.118461805 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.685238173 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.142174452 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.495473738 seconds)
    (153/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.060410306 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.471473965 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.457283071 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.149834756 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.191913404 seconds)
    (158/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.275261205 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.125724692 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.520502921 seconds)
    (161/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.231406544 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.114777688 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.188278296 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.45131978 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.151903302 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.150069061 seconds)
    (167/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.190453067 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.086725153 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.476357089 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.255675616 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.088918221 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.096344633 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.088016072 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.171790147 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.179153994 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.069598207 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.419892887 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.099475395 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.159945249 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.080511905 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.141137804 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.375186047 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.112731268 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.703796286 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.55986978 seconds)
    (186/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.260694745 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.128984328 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.519388933 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.085759272 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.174638205 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.183476442 seconds)
    (192/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.149987552 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.534271519 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.406118715 seconds)
    (195/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.126282318 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.281535446 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.570840235 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.17545404 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.133458885 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.127505305 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.103662993 seconds)
    (202/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.119710211 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.145428657 seconds)
    (204/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.114464622 seconds)
    (205/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.795813903 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.723990482 seconds)
    (207/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.13361363 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.099857654 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.885280308 seconds)
    (210/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.963893849 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.084489036 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.110385917 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.721321238 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.323645236 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.159551491 seconds)
    (216/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.390627355 seconds)
    (217/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.260327843 seconds)
    (218/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.260173509 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.009306977 seconds)
    (220/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.386011757 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.093913446 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.070757698 seconds)
    (223/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.19667764 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.088269734 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.6425746 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.112772889 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.105335844 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.070718005 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.120902355 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.090975556 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.13117853 seconds)
    (232/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.364468443 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.070185865 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.064343994 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.085626928 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.090915579 seconds)
    (237/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.77097552 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.093484948 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.606436716 seconds)
    (240/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.19698233 seconds)
    (241/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.077171953 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.382679544 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.994642873 seconds)
    (244/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.094890576 seconds)
    (245/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.386204985 seconds)
    (246/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.565737747 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.074874033 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.121717045 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.383674855 seconds)
    (250/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.297764661 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.221653341 seconds)
    (252/309) benchmarking ("sort", Float64, false)...
    done (took 5.250332595 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.094564491 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.269580068 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.282551937 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.534331765 seconds)
    (257/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.327288417 seconds)
    (258/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.126450854 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.415679 seconds)
    (260/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.678264576 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.379909644 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.121190322 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.309785354 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.495292291 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.013878367 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.528117522 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.312900399 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.385918311 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.164323416 seconds)
    (270/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.171707634 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.090423896 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.345844855 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.267456948 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.538678714 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.83398678 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.308751294 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.338484327 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.232680493 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.183303578 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.172476645 seconds)
    (281/309) benchmarking ("sort", BigInt, false)...
    done (took 6.102223851 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.774875318 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.212402586 seconds)
    (284/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.117790835 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.176614822 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.172330223 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.920330384 seconds)
    (288/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.091646117 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.114407573 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.710919473 seconds)
    (291/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.83628102 seconds)
    (292/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.119655295 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.076858205 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.134845491 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.169686076 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.101375001 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.106275664 seconds)
    (298/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.260366347 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.109635063 seconds)
    (300/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.094956963 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.346781227 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.879889336 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.646838996 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.121526004 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.158399023 seconds)
    (306/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.83334356 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.416862461 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.079887548 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.305614939 seconds)
  done (took 817.40228666 seconds)
done (took 818.414489028 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.122097476 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.177208611 seconds)
  done (took 13.325448856 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.262883369 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.216770809 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.101131337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.133433539 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.100247154 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.102239156 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.097871556 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.102097608 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.100911349 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.101019407 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.101118202 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.287232192 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.096197535 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.10174533 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.101855741 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.195255342 seconds)
  done (took 39.23166264 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.124388482 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.10806328 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.197156419 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.123418337 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.125428685 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.255020998 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.155152087 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.110321729 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.238543475 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.141777198 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.372806025 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.125139354 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.105234871 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.988031971 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.121159226 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.257599888 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.308937681 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.381474508 seconds)
  done (took 25.26770313 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.450668127 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.112154136 seconds)
  done (took 8.592771823 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.125515222 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.112079727 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.145747736 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.100648338 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.151098631 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.155146151 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.165433233 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.168139228 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.128121215 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.148633855 seconds)
  done (took 62.431158165 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.1221393 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.110888257 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.106284463 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.103247563 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.097026586 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.097795739 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.106328279 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.097562487 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.945067246 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.206541341 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.123286645 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.110955142 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.120608664 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.108481987 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.10400699 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.139999635 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.283906716 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.117942278 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.103868614 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.111044433 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.104809297 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.208402038 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.14098294 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.107326342 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.206077882 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.947811832 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.11071778 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.112396558 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.271028687 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.118400189 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.105415367 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.106126222 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.108267748 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.64365241 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.567332678 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.117728583 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.133975045 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.117275677 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.100624834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.240719703 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.119468044 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.111484218 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.093059748 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.536962971 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.254683667 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.201165983 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.077944615 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.103640617 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.105164082 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.15790707 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.107016003 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.103546133 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.125927804 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.819102922 seconds)
  done (took 96.83504588 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.126367347 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.583477619 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.261438089 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.112646491 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.901004642 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.831235354 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.110357596 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.319740267 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.136527123 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.096544094 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.346788088 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.545097718 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.113440522 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.165595619 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.650703591 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.130056893 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.096625047 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.808548722 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.110862677 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.101255035 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.48794334 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.115798474 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.100305978 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.351422973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.131907469 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.497014365 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.234583438 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.535879224 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.113497219 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.097998842 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.50580976 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.116680581 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.135148638 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.101476332 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.339839864 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.387578973 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.377405015 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.116843803 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.141449847 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.101570111 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.118979123 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.49266275 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.389452078 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.111895898 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.099150075 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.49921527 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.111624148 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.097225737 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.103053366 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.301473271 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.024674962 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.100248429 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.238407008 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.104950548 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.369340213 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.097746177 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.168271654 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.525455545 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.112284253 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.136362759 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.123932063 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.100924368 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.101461411 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.102871082 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.101446581 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.382240532 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.392325834 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.10182577 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.381878879 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.512774277 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.112597803 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.572026552 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.932281334 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.105065644 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.156417322 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.099675174 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.621025007 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.538071118 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.162181646 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.100366008 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.367847937 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.114132477 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.348612589 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.11303894 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.106337199 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.4958266 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.12530549 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.140413981 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.109288141 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.100195636 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.887032792 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.10227381 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.351999299 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.161271277 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.101455671 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.100854925 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.127217443 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.101351562 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.102594014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.104698259 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.569245329 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.119992993 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.201726678 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.120274652 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.101048979 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.101233205 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.098095196 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.096769568 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.310146494 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.578368112 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.095506859 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.091496445 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.09026904 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.112243842 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.293011262 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.08623205 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.325084757 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.099166405 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.080510446 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.086681603 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.853242564 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.102091425 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.076676904 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.081799176 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89566418 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.293846544 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.088720533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.072938822 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.071273586 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.084454529 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.179749815 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.075838927 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.152487914 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.070105734 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.708353425 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.110068009 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.067153993 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.628255107 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.074817273 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.760482906 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.082130005 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.063918212 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.351021312 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.314563905 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.303257257 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.066530542 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.080836346 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.713391789 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.114661886 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.207837232 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.080696436 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.035476223 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.257253081 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.311883179 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.061989746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.648886259 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.059662511 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.272609149 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.060458206 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.371953648 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.491675099 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.079208658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.060781812 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.705853095 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.705797327 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.666657705 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.065540726 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.306964929 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.050856836 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.514898491 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.061610661 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.059923226 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.638146058 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.065348488 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.070458683 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.061471028 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.061832966 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.126016717 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.23265634 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.270343873 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.067814442 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.461055793 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.137821346 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.061867491 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.085794754 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.065749542 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.413326437 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.143391279 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.065079739 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.083950584 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.062205489 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.069950337 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.471835116 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.95104138 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.068415631 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.212730912 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.633075525 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.080245162 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.063724533 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.705279966 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.28286135 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.508487101 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.123835016 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.310595987 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.084061018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.09866771 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.7929269 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.157999686 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.518708749 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.081880381 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.069378512 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600393184 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.080462497 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.109487857 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.064005832 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.063728286 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.544059348 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.081690854 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.066337268 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.144746145 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.065324343 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.310302364 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.064830272 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.112711439 seconds)
  done (took 1051.742940926 seconds)
done (took 1298.452101605 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.097413347 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.090985242 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.07506375 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.096220651 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.186465197 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.09829179 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.085516413 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.076615943 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.122821555 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.124788072 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.073136871 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.09769905 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.076155682 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.075618063 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.075047046 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.089554496 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.905332169 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.07591804 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.092958031 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.085776151 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.09201707 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.075407499 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.125189103 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.097586101 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.079057899 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.078662735 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.07944746 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.095464404 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.188071955 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.078702378 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.078059404 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.086875235 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.91006204 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.076469892 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.07161338 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.096337045 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.087649747 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.086085484 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.07981193 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.10895195 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.222507732 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.090760457 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.078595379 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.078560969 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.077770769 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.080872164 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.078302197 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.083607763 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.08978312 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.091177794 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.215798878 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.105086116 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.082440621 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.079454753 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.088619638 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.076694639 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.081162326 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.094090666 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.097214041 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.093316144 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.894811074 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.082397 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.079837094 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.093468429 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.085940276 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.254790364 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.087030317 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.082020569 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.227052336 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.096643232 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.254111378 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.100014624 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.079845228 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.09306626 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.111378464 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.910973645 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.073916587 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.078256423 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.086395035 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.077857132 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.088903188 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.093394819 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.083988987 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.080811349 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.092209259 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.103881123 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.089522621 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.081107356 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.089228609 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.099619675 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.0875091 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.092453001 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.083109131 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.075252358 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.090704743 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.083059437 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.084099653 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.084036986 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.085505199 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.090958903 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.228877591 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.110561196 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.077900672 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.077604148 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.079957018 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.095401395 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.229321864 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.095120714 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.102947053 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.12854436 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.082560213 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.90648875 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.089146816 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.097523581 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.091026662 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.084974953 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.07743441 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.905648454 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.225664749 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.110684758 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.083927954 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.08085496 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.098308339 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.082856949 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.077947925 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.929933876 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.08816513 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.095780725 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.203912596 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.092683418 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.116022507 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.081326015 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.085609584 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.1066468 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.098713834 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.115339428 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.086186823 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.098994867 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.099634814 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.079891051 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.093790763 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.094178853 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.083534562 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.090047125 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.078122242 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.10918733 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.096721991 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.097157645 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.105344649 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.204681671 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.080611162 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.919891675 seconds)
done (took 182.724668598 seconds)
SAVING RESULT...
DONE!
